payload_commit_msg,repository_language
fixed database... that yes I broke,PHP
Yay a readme file!,Python
Really-truly final version for release. Sent to fab. Yay.,Prolog
"Erm, yes, I believe it goes 36-37-38, not 37-36-38. Signed-off-by: Robert Xu <robxu9@gmail.com>",Java
handle haltonfailure=yes case,Java
Step 2 of 7 completed EXTRA CREDIT YAY,Objective-C
add views to play index page; polish bingo style,Ruby
Yay. Fixed bad merge.,Objective-C
oh yay,Python
"Merge branch 'drm-prime-dmabuf-initial' of git://people.freedesktop.org/~airlied/linux Pull dma-buf prime support from Dave Airlie: ""This isn't a majorly urgent thing to have, but we'd like to set the stage for working on dma-buf support in the drm drivers for the next merge window, so I'd like to push in the initial submission now so people have something that we can build on top of. The code just introduces the user interface and internal helper functions for drivers to use. We have driver support under development for i915, nouveau, udl on x86 and exynos, omapdrm on arm, which we would be aiming for the next merge window."" In the -rc1 announcement I asked for people who would use this to comment on it, and got severa ""Yes please"" from people for this and for HSI (that I merged earlier). So far crickets on pohmelfs and the DMA-mapping infrastructure. * 'drm-prime-dmabuf-initial' of git://people.freedesktop.org/~airlied/linux: drm: base prime/dma-buf support (v5)",C
Yay another Marc Watson quote.,Perl
"YAY, can't believe I missed that!",Java
disablesScrollOnlyWhenShowingSearchResults ============================================= Re-implemented attendeesField.disablesScrollOnlyWhenShowingSearchResults = YES; so that the reminder details can be scrolled even when attendees field is the first responder + fixed a bug in the implementation,Objective-C
Better handling of errors from Yay,Python
"Decreased probability of yes to 5%, fixed various bugs",Perl
"New script to fix decompile differences between windows and linux/osx. Removed the MLProp special case, no longer needed as MLProp decompiles fine. Updated patches to work on all systems. Added warning and exit if the user does not say yes to the cleanup.",Java
... rip it up and start again took an a few days old revision and reverted a lot of things - reuseable widgets now working (yay) - CVCenter working (again) (yay) ... to be tested and documented tomorrow - good night,SuperCollider
merged branch pulzarraider/redis_const_profiler_fix (PR #4164) Commits ------- 991474b [HttpKernel] RedisProfilerStorage - Fix falling unit tests when Redis extension is not available Discussion ---------- [HttpKernel] RedisProfilerStorage - Fix falling unit tests when Redis extension is not available Bug fix: yes Feature addition: no Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: - Todo: - Fix error of my PR #4150 Unit tests were falling if Redis extension was not available. It was caused by using Redis constants.,PHP
merged branch pulzarraider/redis_const_profiler_fix (PR #4164) Commits ------- 991474b [HttpKernel] RedisProfilerStorage - Fix falling unit tests when Redis extension is not available Discussion ---------- [HttpKernel] RedisProfilerStorage - Fix falling unit tests when Redis extension is not available Bug fix: yes Feature addition: no Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: - Todo: - Fix error of my PR #4150 Unit tests were falling if Redis extension was not available. It was caused by using Redis constants.,PHP
added yes/no button functionality,C++
merged branch pulzarraider/redis_const_profiler_fix (PR #4164) Commits ------- 991474b [HttpKernel] RedisProfilerStorage - Fix falling unit tests when Redis extension is not available Discussion ---------- [HttpKernel] RedisProfilerStorage - Fix falling unit tests when Redis extension is not available Bug fix: yes Feature addition: no Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: - Todo: - Fix error of my PR #4150 Unit tests were falling if Redis extension was not available. It was caused by using Redis constants.,PHP
yes,Objective-C
yes,Objective-C
"Add a meta viewport and we seem to be set for mobile, yay",Python
"merged branch Tobion/command-name (PR #3285) Commits ------- 447d468 restore previous testing style with static fixtures for console 11585c3 fix Command:asXml to use processed help 304e13d replaced command names with supported placeholders in help texts Discussion ---------- using the placeholder in command help texts Replaced the command names with the already supported placeholders `%command.name%` and `%command.full_name%`. Thus preventing typos in future commands based on the existing ones. --------------------------------------------------------------------------- by fabpot at 2012-02-09T06:26:07Z That breaks the unit tests. --------------------------------------------------------------------------- by Tobion at 2012-02-09T17:05:06Z fixed --------------------------------------------------------------------------- by stof at 2012-02-09T17:43:47Z can you rebase your branch please ? it conflicts with master --------------------------------------------------------------------------- by stof at 2012-02-09T17:44:11Z the reason is simple: SwiftmailerBundle is gone :) --------------------------------------------------------------------------- by Tobion at 2012-02-09T23:23:23Z done --------------------------------------------------------------------------- by fabpot at 2012-02-11T23:47:10Z Can you squash your commit before I merge this PR? Thanks. --------------------------------------------------------------------------- by Tobion at 2012-02-12T13:57:14Z I'm unable to squash it into 1 commit because of the uptream commits inside. I hope it's fine now. If not someone needs to help me. --------------------------------------------------------------------------- by stof at 2012-02-12T14:27:38Z ``git rebase -i upstream/master`` should allow you rebasing things and squashing them toghter (changing the action for the second commit to ``squash``) --------------------------------------------------------------------------- by Tobion at 2012-02-12T14:47:29Z first i tried with git rebase -i head~4 (4 commits), but this showed many more external commits. second I tried git reset --soft with a clean commit, but still no success. then I used your proposal. and there are always conflicts of stuff that is not part of my PR. now the diff is messed up... this is frustrating --------------------------------------------------------------------------- by stof at 2012-02-12T14:58:43Z The only reason why the diff is messed is because you messed it when resolving the conflicts by choosing the wrong result for the output. Please fix things as it means that merging your PR would revert changes done previosuly --------------------------------------------------------------------------- by stof at 2012-02-12T15:00:18Z Basically, you reverted most of the changes done in Symfony the few last days. --------------------------------------------------------------------------- by Tobion at 2012-02-12T15:10:59Z I used `git checkout --theirs .` when resolving. Whats the correct way? --------------------------------------------------------------------------- by stof at 2012-02-12T15:13:21Z Well, I generally resolve the conflicts myself instead of asking git to use one version, as generally the final code is not one of the versions by a mix of both versions (as both sides are likely to have done useful changes) --------------------------------------------------------------------------- by Tobion at 2012-02-12T15:15:02Z Yes but the conflicts are in files I never touched and that are not part of my changes. I cannot resolve hundreds of files by hand. --------------------------------------------------------------------------- by Tobion at 2012-02-12T15:41:31Z Finally it worked. I used git reset head~1 and then discarded all foreign changes. There you go. --------------------------------------------------------------------------- by Tobion at 2012-02-14T14:06:04Z @fabpot ping --------------------------------------------------------------------------- by Tobion at 2012-02-20T18:20:50Z @fabpot ping --------------------------------------------------------------------------- by stof at 2012-03-02T22:14:49Z @Tobion the branch needs to be rebased. It conflicts with master --------------------------------------------------------------------------- by Tobion at 2012-03-21T04:22:10Z All done. I don't want to squash commits because they are self-contained fixes and changes that might be needed for future references (like the dynamic tests for -`>run()`).",PHP
"Yay, categorized uploader is now finished.",PHP
"[TwigBundle] Changed getAndCleanOutputBuffering() handling of systems where ob_get_level() never returns 0 Bug fix: yes Feature addition: no Backwards compatibility break: no Symfony2 tests pass: [![Build Status](https://secure.travis-ci.org/lencioni/symfony.png)](http://travis-ci.org/lencioni/symfony) Fixes the following tickets: - Todo: - Relying on decrementing a counter has two problems. First, and most importantly, if the output buffering nesting level is greater than the counter, the function does not perform the expected task. Secondly, on systems where the counter is needed, a lot of unnecessary extra loops would potentially occur. This approach checks to see if the level has stayed the same from the previous iteration and if it has it stops looping.",PHP
[oh god] needed to add the gwt dev and user libs to SVN. :/ [fixed] build scripts to build gwt backend. That took like 5 minutes. Hurray build system :D git-svn-id: https://libgdx.googlecode.com/svn/trunk@3629 6c4fd544-2939-11df-bb46-9574ba5d0bfa,C
[oh god] needed to add the gwt dev and user libs to SVN. :/ [fixed] build scripts to build gwt backend. That took like 5 minutes. Hurray build system :D git-svn-id: https://libgdx.googlecode.com/svn/trunk@3629 6c4fd544-2939-11df-bb46-9574ba5d0bfa,C
Setting the preferedSize to CGRectZero now also sets the adjustBackgroundImage to YES,Objective-C
build and run on ubuntu! yay,C++
"Working hello world implementation. - Found out that D already provides stat.d and stuff, but I also figured out that their definition was not correct at least at my 64 bit system. - Used Ds system .di files, where appropriate and possible. - Rethink the mapping of Cs pointers to D arrays, because the following seems causes a segfault with an array that points to a C pointer contents: my_arr[]=some_other_data[0..10]; (yes my_arr has a capacity greater than 10.) -> Fix D's stat.di and maybe also polish and submit statvfs.d",D
yay i did a modified square thingie YEAHHgit status! feel like a pimp,Python
"FIXED JENKINS-13076 included an extra checkbox to enable notes. They are disabled by default. The bug, that didn't display notes has been solved as well. Yay, time for a beer.",Java
- Added LWJGL Sequencer (to animate textures) - Added FengGUI CSS theme demo (with ugly background! Yay),Java
We're a real project! Yay! This adds a LICENSE file so people finding the project know where we stand.,C++
"Support for anonymous posts improved [ui feature] Anonymous posting and editing now allowed. I have considered whether taking over anonymous messages and making one's own messages anonymous should be allowed. For now, I decided in the former case, the answer is yes, so anyone can take over anonymous messages as a further incentive towards registering :) However, I think that disowning messages is a situation that can be perfectly valid at times, but it should at least be considered by the heap's owner or an administrator.",Python
"Merge pull request #7 from itfrombit/master Sorry for the delay on this -- yes, this was a good catch.",C
Pretty proud I created a SMIL player that already works this great. WIP.,Python
Yay! First code drop.,Java
"ObjectCacher: add a bunch of perfcounters Hurray, we can collect cache statistics! Signed-off-by: Greg Farnum <gregory.farnum@dreamhost.com>",C++
"Updated to before pg shit. Yes, I hate pg. pg needs to die.",Ruby
"Yay, more decomposition done, a few odds and ends left, plus branching",C
yay comments!,Java
Merge pull request #49 from cp16net/readme-update4 update readme with reclone=yes and kick-start/build-image mysql,Python
"yes, that stupid",Java
"The PHP commit. Yes, THE one.",Python
"merged branch jalliot/acl_proxies-2 (PR #3826) Commits ------- 6483d88 [Security][ACL] Fixed ObjectIdentity::fromDomainObject and UserSecurityIdentity::from(Account|Token) when working with proxies Discussion ---------- [WIP] Fixed ACL handling of Doctrine proxies Bug fix: yes Feature addition: no Backwards compatibility break: no Symfony2 tests pass: [![Build Status](https://secure.travis-ci.org/jalliot/symfony.png?branch=acl_proxies-2)](http://travis-ci.org/jalliot/symfony) Fixes the following tickets: #3818, #2611, #2056, #2048, #2035 and probably others Todo: Fix tests, update changelog Hi, As per @fabpot's request, here is #3818 ported to `master`. > Here is a new attempt to fix all the issues related to Symfony ACL identities and Doctrine proxies. > It only fixes the issue for Doctrine >=2.2 (older versions of Doctrine will still not work properly with ACL because `Doctrine\Common\Util\ClassUtils` didn't exist before and proxy naming strategy was not consistent between all Doctrine implementations (ORM/ODM/etc.)). /cc @schmittjoh @beberlei --------------------------------------------------------------------------- by schmittjoh at 2012-04-09T00:07:52Z I'm -1 on adding a dependency on the Doctrine class. The naming scheme was designed in a generic way, we should just copy the method. --------------------------------------------------------------------------- by jalliot at 2012-04-09T00:13:07Z @schmittjoh The ACL component requires Doctrine DBAL already (and as such Common) so I don't think this is really an issue at the moment. If (when?) the component is refactored to be decoupled from Doctrine, then maybe we will have to change that. But I can also copy the class (where?) if you think it is better :) --------------------------------------------------------------------------- by schmittjoh at 2012-04-09T01:01:27Z I'd suggest ``Symfony\Component\Security\Core\Util\ClassUtils``. --------------------------------------------------------------------------- by jalliot at 2012-04-09T11:16:19Z @fabpot @schmittjoh It's done: I've backported the ClassUtils class and its tests from Doctrine Common into the Security component. Maybe this PR can be merged into 2.0 as well now, what do you think? --------------------------------------------------------------------------- by oscherler at 2012-04-11T06:27:20Z There seems to be a consensus that ACLs don’t (fully?) work with Doctrine < 2.2, i.e. in Symfony 2.0. Can it therefore be documented somewhere, typically on the main documentation page on the subject? http://symfony.com/doc/current/cookbook/security/acl.html --------------------------------------------------------------------------- by jalliot at 2012-04-11T07:36:25Z @oscherler You can make ACL work with Doctrine < 2.2 and without this patch if you use something like this code (note this is for ORM only but it can be adapted for ODM; it also assumes that your identifier can be retrieved with `getId()`): ``` php <?php use Doctrine\ORM\Proxy\Proxy; use Symfony\Component\Acl\Domain\ObjectIdentity; $domainObject = ... // some Doctrine entity (maybe a proxy...) if ($domainObject instanceof Proxy) { $objectIdentity = new ObjectIdentity($domainObject->getId(), get_parent_class($domainObject)); } else { $objectIdentity = new ObjectIdentity($domainObject->getId(), get_class($domainObject)); } ``` It is ugly but it is the only way to get the correct identity for < 2.2. Never use `ObjectIdentity::fromDomainObject` with a proxy and without this patch! The same applies to `UserSecurityIdentity`. This should indeed be documented in the doc for 2.0. /cc @weaverryan --------------------------------------------------------------------------- by jalliot at 2012-04-11T22:34:37Z I just fixed the tests and squashed the commits. I didn't write a test for `UserSecurityIdentity::fromAccount` and `fromToken` because I didn't really have time to look for a clean solution (without creating a full UserInterface implementation for instance...). Anyway the test for `ObjectIdentity::fromDomainObject` should be enough I guess... Don't hesitate to add one if you think it is necessary. /cc @schmittjoh @fabpot Apart from @beberlei approval to use MIT license, I think it is ready for merge.",PHP
merged branch Tobion/generator-cache (PR #3892) Commits ------- 03d30fd [Routing] remove duplicated cache of compiled routes Discussion ---------- [Routing] remove duplicated cache of compiled routes The UrlGenerator caches compiled routes for generating URLs. But the Route class caches it's compiled route itself as long as it does not get modified. So compiled routes are cached twice which makes no sense in my opinion. Test pass: yes BC break: no,PHP
merged branch Tobion/generator-cache (PR #3892) Commits ------- 03d30fd [Routing] remove duplicated cache of compiled routes Discussion ---------- [Routing] remove duplicated cache of compiled routes The UrlGenerator caches compiled routes for generating URLs. But the Route class caches it's compiled route itself as long as it does not get modified. So compiled routes are cached twice which makes no sense in my opinion. Test pass: yes BC break: no,PHP
Added player move blocking to arenas. Yay! First actual implementation of Arenas :D,Java
omg massive update yay,Java
Adding argument to control the loading of CSS styles --load-styles=[yes|no],C++
merged branch bschussek/issue3635 (PR #3820) Commits ------- 65aa387 [Form] Fixed index generation in EntityChoiceList if ID is not an integer Discussion ---------- [Form] Fixed index generation in EntityChoiceList if ID is not an integer Bug fix: yes Feature addition: no Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: #3635 Todo: - ![Travis Build Status](https://secure.travis-ci.org/bschussek/symfony.png?branch=issue3635),PHP
"merged branch tvlooy/GetSetMethodNormalizer (PR #3582) Commits ------- 039ff6f allow more control on GetSetMethodNormalizer by using callback functions and an ignoreAttributes list Discussion ---------- allow more control on GetSetMethodNormalizer Here is an other attempt. You would use this as follows: $serializer = new \Symfony\Component\Serializer\Serializer( array(new \Symfony\Component\Serializer\Normalizer\GetSetMethodNormalizer()), array('json' => new \Symfony\Component\Serializer\Encoder\JsonEncoder()) ); $callbacks = array('books' => function ($books) { return NULL; }); return new Response( $serializer->serialize($paginator->getRows(), 'json', $callbacks), 200, array('Content-Type' => 'application/json') ); Besides of returning NULL, you could also do things like: $callbacks = array( 'books' => function ($books) { $ids = array(); foreach ($books as $book) { $ids[] = $book->getId(); } return $ids; }, 'author' => function ($author) { return $author->getId(); }, 'creationDate' => function ($creationDate) { return $creationDate->format('d/m/Y'); }, ); The commit is not complete yet. But at this point I am interested in your opinions. --------------------------------------------------------------------------- by lsmith77 at 2012-03-12T22:53:18Z in general i agree that using a callback is a good solution to provide more power without complicating the API or implementation in this case. please add a test case, this should also help illustrate how this can be used in practice. --------------------------------------------------------------------------- by schmittjoh at 2012-03-13T04:54:33Z Note that your change breaks the API defined by the interface, i.e. someone using this method needs to type-hint the serializer implementation, not the interface. It also adds a parameter to the public API of the serializer which will only work with one specific normalizer. What if another normalizer needs additional information, should another parameter be added to the serialize method? What about deserialization? Bottom line is, the serializer component was simply not designed for this kind of thing. I've tried to make it more flexible before creating the bundle, but some things simply cannot be fixed in a sane way. --------------------------------------------------------------------------- by tvlooy at 2012-03-13T06:07:45Z Would just adding a setCallbacks() to the GetSetMethodNormalizer be a better solution? That doesn't touch the API. I will try to write some tests this evening. --------------------------------------------------------------------------- by schmittjoh at 2012-03-13T16:22:50Z That would definitely be better. You would then need to retrieve the normalizer instance before calling ``serialize`` on the serializer which also leaves a stale taste, but I have no other solution for now. --------------------------------------------------------------------------- by tvlooy at 2012-03-13T21:32:26Z So, this should be it then. Yet an other usage example: $normalizer = new \Symfony\Component\Serializer\Normalizer\GetSetMethodNormalizer(); $normalizer->setCallbacks( array( 'books' => function ($books) { $ids = array(); foreach ($books as $book) { $ids[] = $book->getId(); } return $ids; }, ) ); $serializer = new \Symfony\Component\Serializer\Serializer( array($normalizer), array('json' => new \Symfony\Component\Serializer\Encoder\JsonEncoder()) ); return new Response( $serializer->serialize($paginator->getRows(), 'json'), 200, array('Content-Type' => 'application/json') ); --------------------------------------------------------------------------- by tvlooy at 2012-03-18T21:16:48Z Anything else needed for this to get pulled in? --------------------------------------------------------------------------- by tvlooy at 2012-03-19T18:33:58Z Hm, I like to keep it that way because I like the fact that not passing a callable will result in a warning instead of silently skipping it. You don't get that behaviour by treating it as null. --------------------------------------------------------------------------- by vicb at 2012-03-19T23:15:37Z I was unclear: the code should throw an exception when an element is not callable, this is why `null` will not be supported any more (it is not a callback as the `setCallbacks` indicate). They are several way to support the former behavior: * the cb can return a defined interface, * the cb can throw a defines exc, * by adding a `setIgnoredAttributes` method Please also squash your commits. --------------------------------------------------------------------------- by tvlooy at 2012-03-20T21:02:06Z Yes, I like the setIgnoredAttributes solution. I changed it and squashed the commits. --------------------------------------------------------------------------- by tvlooy at 2012-03-26T20:07:36Z some improvements and squashed the commits --------------------------------------------------------------------------- by stof at 2012-04-03T22:36:15Z @tvlooy Please rebase your branch. It conflicts with master because of the move of tests. --------------------------------------------------------------------------- by tvlooy at 2012-04-04T07:43:47Z @stof I will do it on saturday, if that is ok with you. --------------------------------------------------------------------------- by fabpot at 2012-04-10T18:29:30Z Is it mergeable now? ping @Seldaek, @schmittjoh. --------------------------------------------------------------------------- by tvlooy at 2012-04-10T18:55:04Z yes, it should be",PHP
"merged branch tvlooy/GetSetMethodNormalizer (PR #3582) Commits ------- 039ff6f allow more control on GetSetMethodNormalizer by using callback functions and an ignoreAttributes list Discussion ---------- allow more control on GetSetMethodNormalizer Here is an other attempt. You would use this as follows: $serializer = new \Symfony\Component\Serializer\Serializer( array(new \Symfony\Component\Serializer\Normalizer\GetSetMethodNormalizer()), array('json' => new \Symfony\Component\Serializer\Encoder\JsonEncoder()) ); $callbacks = array('books' => function ($books) { return NULL; }); return new Response( $serializer->serialize($paginator->getRows(), 'json', $callbacks), 200, array('Content-Type' => 'application/json') ); Besides of returning NULL, you could also do things like: $callbacks = array( 'books' => function ($books) { $ids = array(); foreach ($books as $book) { $ids[] = $book->getId(); } return $ids; }, 'author' => function ($author) { return $author->getId(); }, 'creationDate' => function ($creationDate) { return $creationDate->format('d/m/Y'); }, ); The commit is not complete yet. But at this point I am interested in your opinions. --------------------------------------------------------------------------- by lsmith77 at 2012-03-12T22:53:18Z in general i agree that using a callback is a good solution to provide more power without complicating the API or implementation in this case. please add a test case, this should also help illustrate how this can be used in practice. --------------------------------------------------------------------------- by schmittjoh at 2012-03-13T04:54:33Z Note that your change breaks the API defined by the interface, i.e. someone using this method needs to type-hint the serializer implementation, not the interface. It also adds a parameter to the public API of the serializer which will only work with one specific normalizer. What if another normalizer needs additional information, should another parameter be added to the serialize method? What about deserialization? Bottom line is, the serializer component was simply not designed for this kind of thing. I've tried to make it more flexible before creating the bundle, but some things simply cannot be fixed in a sane way. --------------------------------------------------------------------------- by tvlooy at 2012-03-13T06:07:45Z Would just adding a setCallbacks() to the GetSetMethodNormalizer be a better solution? That doesn't touch the API. I will try to write some tests this evening. --------------------------------------------------------------------------- by schmittjoh at 2012-03-13T16:22:50Z That would definitely be better. You would then need to retrieve the normalizer instance before calling ``serialize`` on the serializer which also leaves a stale taste, but I have no other solution for now. --------------------------------------------------------------------------- by tvlooy at 2012-03-13T21:32:26Z So, this should be it then. Yet an other usage example: $normalizer = new \Symfony\Component\Serializer\Normalizer\GetSetMethodNormalizer(); $normalizer->setCallbacks( array( 'books' => function ($books) { $ids = array(); foreach ($books as $book) { $ids[] = $book->getId(); } return $ids; }, ) ); $serializer = new \Symfony\Component\Serializer\Serializer( array($normalizer), array('json' => new \Symfony\Component\Serializer\Encoder\JsonEncoder()) ); return new Response( $serializer->serialize($paginator->getRows(), 'json'), 200, array('Content-Type' => 'application/json') ); --------------------------------------------------------------------------- by tvlooy at 2012-03-18T21:16:48Z Anything else needed for this to get pulled in? --------------------------------------------------------------------------- by tvlooy at 2012-03-19T18:33:58Z Hm, I like to keep it that way because I like the fact that not passing a callable will result in a warning instead of silently skipping it. You don't get that behaviour by treating it as null. --------------------------------------------------------------------------- by vicb at 2012-03-19T23:15:37Z I was unclear: the code should throw an exception when an element is not callable, this is why `null` will not be supported any more (it is not a callback as the `setCallbacks` indicate). They are several way to support the former behavior: * the cb can return a defined interface, * the cb can throw a defines exc, * by adding a `setIgnoredAttributes` method Please also squash your commits. --------------------------------------------------------------------------- by tvlooy at 2012-03-20T21:02:06Z Yes, I like the setIgnoredAttributes solution. I changed it and squashed the commits. --------------------------------------------------------------------------- by tvlooy at 2012-03-26T20:07:36Z some improvements and squashed the commits --------------------------------------------------------------------------- by stof at 2012-04-03T22:36:15Z @tvlooy Please rebase your branch. It conflicts with master because of the move of tests. --------------------------------------------------------------------------- by tvlooy at 2012-04-04T07:43:47Z @stof I will do it on saturday, if that is ok with you. --------------------------------------------------------------------------- by fabpot at 2012-04-10T18:29:30Z Is it mergeable now? ping @Seldaek, @schmittjoh. --------------------------------------------------------------------------- by tvlooy at 2012-04-10T18:55:04Z yes, it should be",PHP
Coordinates bingo.,Perl
"merged branch kmohrf/ticket_2827_validator_mail_A_RR_DNS_hostcheck (PR #3799) Commits ------- f617e02 [Validator] added less-strict email host verification Discussion ---------- [Validator] added less-strict email host verification uhhhhh, my first pull request :>. uhm... tell me if i did something wrong :) #### Request info Bug fix: no Feature addition: yes Backwards compatibility break: no Symfony2 tests pass: yes... well,not really (i guess master branch is not passing - at least i didnt broke the email test) Fixes the following tickets: #2827 #### Description New checkHost attribute in email constraint will make the validator check for only one of MX, A or AAAA DNS resource records to verify it as a valid email address.",PHP
"merged branch kmohrf/ticket_2827_validator_mail_A_RR_DNS_hostcheck (PR #3799) Commits ------- f617e02 [Validator] added less-strict email host verification Discussion ---------- [Validator] added less-strict email host verification uhhhhh, my first pull request :>. uhm... tell me if i did something wrong :) #### Request info Bug fix: no Feature addition: yes Backwards compatibility break: no Symfony2 tests pass: yes... well,not really (i guess master branch is not passing - at least i didnt broke the email test) Fixes the following tickets: #2827 #### Description New checkHost attribute in email constraint will make the validator check for only one of MX, A or AAAA DNS resource records to verify it as a valid email address.",PHP
Merge pull request #1168 from julapy/bugfix-1097-skip-install bugfix SKIP_INSTALL set to YES,C
"merged branch jakzal/FilesystemMirrorCleanup (PR #3844) Commits ------- efad5d5 [Filesystem] Prevented infiite loop on windows while calling mirror on symlink. Added test for mirroring symlinks. Discussion ---------- [Filesystem] Prevented infinite loop on windows while mirrorring symlinks First check for filetype in *mirror()* method is: if (is_link($file)) { $this->symlink($file, $target); later we see: } elseif (is_file($file) || ($copyOnWindows && is_link($file))) { $this->copy($file, $target, isset($options['override']) ? $options['override'] : false); The later check for links on windows (*$copyOnWindows && is_link($file)*) won't ever get called. Calling *symlink()* in *mirror()* on windows would lead to calling *mirror()* again. Note that I didn't actually try running it on windows platform. I added a test for mirroring symlinks (non-windows test). I think it'd be good if someone added some windows specific tests to this class. I also modified the target path: $target = $targetDir.'/'.str_replace($originDir.DIRECTORY_SEPARATOR, '', $file->getPathname()); It didn't use DIRECTORY_SEPARATOR and is equivalent to: $target = str_replace($originDir, $targetDir, $file->getPathname()); Bug fix: yes Feature addition: no Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: ~ Todo: ~",PHP
"merged branch hason/validator (PR #552) Commits ------- f9a486e [Validator] Added support for pluralization of the SizeLengthValidator c0715f1 [FrameworkBundle], [TwigBundle] added support for form error message pluralization 7a6376e [Form] added support for error message pluralization 345981f [Validator] added support for plural messages Discussion ---------- [Validator] Added support for plural error messages Bug fix: no Feature addition: yes Backwards compatibility break: no Symfony2 tests pass: yes Todo: create translations for en and update others (FrameworkBundle) [![Build Status](https://secure.travis-ci.org/hason/symfony.png?branch=validator)](http://travis-ci.org/hason/symfony) --------------------------------------------------------------------------- by fabpot at 2011-05-14T20:41:01Z @bschussek: What's your opinion? --------------------------------------------------------------------------- by stof at 2011-09-04T13:14:29Z @hason could you rebase your branch on top of master and update the PR ? You also need to change the messages in the constraint that uses the pluralization to a pluralized format. --------------------------------------------------------------------------- by stof at 2011-10-16T18:06:22Z @hason ping --------------------------------------------------------------------------- by stof at 2011-11-11T14:58:19Z @hason ping again --------------------------------------------------------------------------- by stof at 2011-12-12T20:39:10Z @hason ping again. Can you update your PR ? --------------------------------------------------------------------------- by hason at 2011-12-12T21:29:14Z @stof I hope that I will update PR this week. --------------------------------------------------------------------------- by bschussek at 2012-01-15T19:07:32Z Looks good to me. --------------------------------------------------------------------------- by canni at 2012-02-02T17:28:54Z @hason can you update this PR and squash commits, it conflicts with current master --------------------------------------------------------------------------- by hason at 2012-02-09T07:21:41Z @stof, @canni Rebased. What is the best solution for the translation of messages? 1. Change messages in the classes and all xliff files? 2. Keep messages in the classes and change all xliff files? --------------------------------------------------------------------------- by stof at 2012-02-09T08:19:41Z The constraints contain the en message so you will need to modify them to update the message --------------------------------------------------------------------------- by hason at 2012-02-09T08:55:55Z I prefer second option. The Validator component should be decoupled from the Translation component. The constraints contain the en message which is also the key for Translation component. We should create validators.en.xlf in the FrameworkBundle for en message. I think that this is better solution. What do you think? --------------------------------------------------------------------------- by stof at 2012-04-04T02:22:02Z @hason Please rebase your branch. It conflicts with master because of the move of the tests @fabpot ping",PHP
"merged branch bschussek/issue3354 (PR #3789) Commits ------- 8329087 [Form] Moved calculation of ChoiceType options to closures 5adec19 [Form] Fixed typos cb87ccb [Form] Failing test for empty_data option BC break b733045 [Form] Fixed option support in Form component Discussion ---------- [Form] Fixed option support in Form component Bug fix: yes Feature addition: no Backwards compatibility break: yes Symfony2 tests pass: yes Fixes the following tickets: #3354, #3512, #3685, #3694 Todo: - ![Travis Build Status](https://secure.travis-ci.org/bschussek/symfony.png?branch=issue3354) This PR also introduces a new helper `DefaultOptions` for solving option graphs. It accepts default options to be defined on various layers of your class hierarchy. These options can then be merged with the options passed by the user. This is called *resolving*. The important feature of this utility is that it lets you define *lazy options*. Lazy options are specified using closures that are evaluated when resolving and thus have access to the resolved values of other (potentially lazy) options. The class detects cyclic option dependencies and fails with an exception in this case. For more information, check the inline documentation of the `DefaultOptions` class and the UPGRADE file. @fabpot: Might this be worth a separate component? (in total the utility consists of five classes with two associated tests) --------------------------------------------------------------------------- by beberlei at 2012-04-05T08:54:10Z ""The important feature of this utility is that it lets you define lazy options. Lazy options are specified using closures"" What about options that are closures? are those differentiated? --------------------------------------------------------------------------- by bschussek at 2012-04-05T08:57:35Z @beberlei Yes. Closures for lazy options receive a Symfony\Component\Form\Options instance as first argument. All other closures are interpreted as normal values. --------------------------------------------------------------------------- by stof at 2012-04-05T11:09:49Z I'm wondering if these classes should go in the Config component. My issue with it is that it would add a required dependency to the Config component and that the Config component mixes many different things in it already (the loader part, the resource part, the definition part...) --------------------------------------------------------------------------- by sstok at 2012-04-06T13:36:36Z Sharing the Options class would be great, and its more then one class so why not give it its own Component folder? Filesystem is just one class, and that has its own folder. Great job on the class bschussek :clap: --------------------------------------------------------------------------- by bschussek at 2012-04-10T12:32:34Z @fabpot Any input? --------------------------------------------------------------------------- by bschussek at 2012-04-10T13:54:13Z @fabpot Apart from the decision about the final location of DefaultOptions et al., could you merge this soon? This would make my work a bit easier since this one is a blocker. --------------------------------------------------------------------------- by fabpot at 2012-04-10T18:08:18Z @bschussek: Can you rebase on master? I will merge afterwards. Thanks.",PHP
"Sync Showcase sample with GWT's trunk. Migrated ContentWidget. Get rid of old properties files. Converted ShowcaseShell. Added cell stuff. Still in Java. Small improvements to ContentWidget. CwBidiFormatting converted to Scala. Yay! CwBidiInput done. Migrated CwConstantsExample. CwConstantsWithLookupExample DONE. CwDateTimeFormat DONE. CwDictionaryExample DONE. CwMessagesExample DONE. CwNumberFormat DONE. CwPluralFormsExample DONE. DONE. CwStackLayoutPanel DONE. CwStackPanel DONE. CwListBox and CwMenuBar DONE. CwSuggestBox and CwTree DONE. CwAnimation, CwCookies, CwFrame DONE. panels DONE. popups and tables DONE. text DONE. Widgets DONE. ShowcaseGenerator DONE. Resource cleanup. Added missing i18n resources. More ContentWidget work. Cell stuff DONE. More work on syncing. Cleanup. Fix initialization problem. Add cell stuff to main menu. Cleanup source code display.",Scala
"merged branch bschussek/issue3354 (PR #3789) Commits ------- 8329087 [Form] Moved calculation of ChoiceType options to closures 5adec19 [Form] Fixed typos cb87ccb [Form] Failing test for empty_data option BC break b733045 [Form] Fixed option support in Form component Discussion ---------- [Form] Fixed option support in Form component Bug fix: yes Feature addition: no Backwards compatibility break: yes Symfony2 tests pass: yes Fixes the following tickets: #3354, #3512, #3685, #3694 Todo: - ![Travis Build Status](https://secure.travis-ci.org/bschussek/symfony.png?branch=issue3354) This PR also introduces a new helper `DefaultOptions` for solving option graphs. It accepts default options to be defined on various layers of your class hierarchy. These options can then be merged with the options passed by the user. This is called *resolving*. The important feature of this utility is that it lets you define *lazy options*. Lazy options are specified using closures that are evaluated when resolving and thus have access to the resolved values of other (potentially lazy) options. The class detects cyclic option dependencies and fails with an exception in this case. For more information, check the inline documentation of the `DefaultOptions` class and the UPGRADE file. @fabpot: Might this be worth a separate component? (in total the utility consists of five classes with two associated tests) --------------------------------------------------------------------------- by beberlei at 2012-04-05T08:54:10Z ""The important feature of this utility is that it lets you define lazy options. Lazy options are specified using closures"" What about options that are closures? are those differentiated? --------------------------------------------------------------------------- by bschussek at 2012-04-05T08:57:35Z @beberlei Yes. Closures for lazy options receive a Symfony\Component\Form\Options instance as first argument. All other closures are interpreted as normal values. --------------------------------------------------------------------------- by stof at 2012-04-05T11:09:49Z I'm wondering if these classes should go in the Config component. My issue with it is that it would add a required dependency to the Config component and that the Config component mixes many different things in it already (the loader part, the resource part, the definition part...) --------------------------------------------------------------------------- by sstok at 2012-04-06T13:36:36Z Sharing the Options class would be great, and its more then one class so why not give it its own Component folder? Filesystem is just one class, and that has its own folder. Great job on the class bschussek :clap: --------------------------------------------------------------------------- by bschussek at 2012-04-10T12:32:34Z @fabpot Any input? --------------------------------------------------------------------------- by bschussek at 2012-04-10T13:54:13Z @fabpot Apart from the decision about the final location of DefaultOptions et al., could you merge this soon? This would make my work a bit easier since this one is a blocker. --------------------------------------------------------------------------- by fabpot at 2012-04-10T18:08:18Z @bschussek: Can you rebase on master? I will merge afterwards. Thanks.",PHP
Change stage:render to stage:draw. Yay for API consistency.,Lua
"merged branch bschussek/issue3354 (PR #3789) Commits ------- 8329087 [Form] Moved calculation of ChoiceType options to closures 5adec19 [Form] Fixed typos cb87ccb [Form] Failing test for empty_data option BC break b733045 [Form] Fixed option support in Form component Discussion ---------- [Form] Fixed option support in Form component Bug fix: yes Feature addition: no Backwards compatibility break: yes Symfony2 tests pass: yes Fixes the following tickets: #3354, #3512, #3685, #3694 Todo: - ![Travis Build Status](https://secure.travis-ci.org/bschussek/symfony.png?branch=issue3354) This PR also introduces a new helper `DefaultOptions` for solving option graphs. It accepts default options to be defined on various layers of your class hierarchy. These options can then be merged with the options passed by the user. This is called *resolving*. The important feature of this utility is that it lets you define *lazy options*. Lazy options are specified using closures that are evaluated when resolving and thus have access to the resolved values of other (potentially lazy) options. The class detects cyclic option dependencies and fails with an exception in this case. For more information, check the inline documentation of the `DefaultOptions` class and the UPGRADE file. @fabpot: Might this be worth a separate component? (in total the utility consists of five classes with two associated tests) --------------------------------------------------------------------------- by beberlei at 2012-04-05T08:54:10Z ""The important feature of this utility is that it lets you define lazy options. Lazy options are specified using closures"" What about options that are closures? are those differentiated? --------------------------------------------------------------------------- by bschussek at 2012-04-05T08:57:35Z @beberlei Yes. Closures for lazy options receive a Symfony\Component\Form\Options instance as first argument. All other closures are interpreted as normal values. --------------------------------------------------------------------------- by stof at 2012-04-05T11:09:49Z I'm wondering if these classes should go in the Config component. My issue with it is that it would add a required dependency to the Config component and that the Config component mixes many different things in it already (the loader part, the resource part, the definition part...) --------------------------------------------------------------------------- by sstok at 2012-04-06T13:36:36Z Sharing the Options class would be great, and its more then one class so why not give it its own Component folder? Filesystem is just one class, and that has its own folder. Great job on the class bschussek :clap: --------------------------------------------------------------------------- by bschussek at 2012-04-10T12:32:34Z @fabpot Any input? --------------------------------------------------------------------------- by bschussek at 2012-04-10T13:54:13Z @fabpot Apart from the decision about the final location of DefaultOptions et al., could you merge this soon? This would make my work a bit easier since this one is a blocker. --------------------------------------------------------------------------- by fabpot at 2012-04-10T18:08:18Z @bschussek: Can you rebase on master? I will merge afterwards. Thanks.",PHP
merged branch Tobion/named-variables (PR #3884) Commits ------- f666836 [Routing] simplified regex with named variables Discussion ---------- [Routing] simplified regex with named variables Test pass: yes BC break: no Since PHP 5.2.2 subpatterns in regex can be simplified from `?P<name>` to `?<name>` (see http://www.php.net/manual/en/regexp.reference.subpatterns.php). This enhances readability.,PHP
Merge pull request #49 from cp16net/readme-update4 update readme with reclone=yes and kick-start/build-image mysql,Python
* ability to add sublayers to UI (sublayers can be used for dialogs) * show confirmation dialog on Pause screen when user tries to end current game + added sprites for buttons Yes/No,C
yes,Ruby
"Added reload support, updated the manual and TODO files and bumped the version to 0.9, yay",Perl
"Make javac-options support booleans. Currently it only supports string ""booleans"" like ""yes"". Also, make the debug settings defaults rather than forcible overrides.",Clojure
Allowing users to save drawings AND have facebook-ready meta tags. YAY,JavaScript
config/options: case insensitive PVR=yes this fixes #271,Shell
config/options: case insensitive PVR=yes this fixes #271,Shell
Many Many changes. Added /swap. Added /sgift reload. Added /sgift yes and /sgift no. Made /sgift halt ask for confirmation. Lots of Bug fixes. Fixed some dodgy permissions.,Java
now we have a working PID. hurray,C++
Yay it loads schematics now!,Java
Merge pull request #1994 from vishalduggal/timob-8559-20X [TIMOB-8559] 2_0_X Ensure windows in nav group have parentVisible=YES,Objective-C
My first ocmmit form eclipse on windows hurray,Java
merged branch drak/eventsubscriber_notice (PR #3900) Commits ------- 57dd914 [EventDispatcher] Fixed E_NOTICES with multiple eventnames per subscriber with mixed priorities Discussion ---------- [EventDispatcher] Fixed E_NOTICES with multiple eventnames per subscriber Bug fix: yes Feature addition: no Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: - Todo: - This fixes a case that was not covered by the existing tests.,PHP
merged branch drak/eventsubscribersnotice (PR #3902) Commits ------- e199049 [EventDispatcher] Fixed edge case not covered by tests that generated E_NOTICES Discussion ---------- [EventDispatcher] Fixed edge case not covered by tests. Bug fix: yes Feature addition: no Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: - Todo: - Fixes case not covered by tests.,PHP
yes,JavaScript
Yes now purple,PHP
Bump version to 3.4.0 GNOME 3.4 is out! Yay for the stable release!,JavaScript
yes!,JavaScript
"Selections respects app.selected_parts, now fully functional (yay!!!)",Python
"Merge branch 'drm-fixes' of git://people.freedesktop.org/~airlied/linux Pull the intel i915 hibernation memory corruption fix from Dave Airlie: ""I tracked down the misc memory corruption after i915 hibernate to the blinking fbcon cursor, and realised the i915 driver wasn't doing the fbdev suspend/resume calls at all. nouveau and radeon have done these calls for a long time. This has been fairly well tested and is definitely the main culprit in hibernate not working."" Yay. * 'drm-fixes' of git://people.freedesktop.org/~airlied/linux: drm/i915: suspend fbdev device around suspend/hibernate",C
"merged branch liuggio/webtestcase_kernel_shutdown_before_client (PR #3704) Commits ------- 3303155 added kernel shutdown before create client, fixed and stashed Discussion ---------- [FrameworkBundle] WebTestCase createClient doesn't check if static:kernel was already allocated with this little fix CreateClient shuts down the kernel before booting again. If you add an echo after the ""if"" on the line number 38 and run the test you would see that sometime the kernel is not properly umounted. Bug fix: [no] Feature addition: [no] Backwards compatibility break: [no] Symfony2 tests pass: [yes] --------------------------------------------------------------------------- by fabpot at 2012-03-29T09:19:07Z Can you squash your commits before I merge? Thanks. --------------------------------------------------------------------------- by liuggio at 2012-03-29T10:17:59Z Done.",PHP
add the possibility to check if client side cookies are enabled - simple call if($.cookie()) //yay everything looks fine else alert('you are a bad bad user...');,JavaScript
"Issue #140 - Added Typed Methods As Extension Methods Added generic versions for Get<T> and Api<T>. Also added tests. Prabir, Nathan - I have not used Git much (still a heavy TFS user moving to git). Please let me know if this meets your requirements or not. I would be glad to make changes and be a small part of this big project",C#
"Added support for ImgSaver#isCompressible The SaveAsImage plugin now takes advantage of ImgSaver#isCompressible to check its ImgPlus for potential compression requirements (of unknown Axes of size > 2). If compression will be required, which necessitates a change in the ImgPlus structure, the user will be warned and provided a YES/NO dialog option.",Java
"Added support for ImgSaver#isCompressible The SaveAsImage plugin now takes advantage of ImgSaver#isCompressible to check its ImgPlus for potential compression requirements (of unknown Axes of size > 2). If compression will be required, which necessitates a change in the ImgPlus structure, the user will be warned and provided a YES/NO dialog option.",Java
"Yay, test from the console. That's how I roll.",Ruby
add entry (not used yes),Java
yay gen_server,Erlang
"merged branch liuggio/webtestcase_kernel_shutdown_before_client (PR #3704) Commits ------- 3303155 added kernel shutdown before create client, fixed and stashed Discussion ---------- [FrameworkBundle] WebTestCase createClient doesn't check if static:kernel was already allocated with this little fix CreateClient shuts down the kernel before booting again. If you add an echo after the ""if"" on the line number 38 and run the test you would see that sometime the kernel is not properly umounted. Bug fix: [no] Feature addition: [no] Backwards compatibility break: [no] Symfony2 tests pass: [yes] --------------------------------------------------------------------------- by fabpot at 2012-03-29T09:19:07Z Can you squash your commits before I merge? Thanks. --------------------------------------------------------------------------- by liuggio at 2012-03-29T10:17:59Z Done.",PHP
Yay! Everything works! Screen is seperate.,Python
only computing the waveform lines that we need now YES!,C++
"Yay! Voting is working, as is reviewing votes.",Ruby
FUCKING LOVE CLASSPATH ISSUES YES,Java
Adding Nokogiri to the system in order to parse xml with xpath since the simple xml parser wont do args.. Then completely rewrote the wordpress importer inorder to get tags and categories working.. Yay!,Ruby
"Test for mobile UI single post view Verify that the correct layout is rendered (rather than no layout at all) in the mobile UI single post view. This is a test I forgot to write at 5am when I was so excited about having the mobile UI working on my Blackberry again (bad me!), so here it is before it slips my mind. :grin: This tests the change made to posts_controller in 6abe718227bcc858",Ruby
"Test for mobile UI single post view Verify that the correct layout is rendered (rather than no layout at all) in the mobile UI single post view. This is a test I forgot to write at 5am when I was so excited about having the mobile UI working on my Blackberry again (bad me!), so here it is before it slips my mind. :grin: This tests the change made to posts_controller in 6abe718227bcc858",Ruby
Marching cubes yay.,C++
"Simplified code to display lessons, by removing unused group by, replacing it with a sort_by and thereby being able to remove key and value.each. This also sorts the lessons again: yay :-)",Ruby
"merged branch ocubom/fix-empty-string-argument (PR #3728) Commits ------- aac6ad8 [Console] avoid warning parsing empty string argument Discussion ---------- [Console] avoid warning parsing empty string argument Bug fix: yes Feature addition: no Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: - Todo: - When passing an empty string argument (`app/console add:list ""item1"" """" ""item3""`) the argument parser generates an invalid offset warning and ignores the argument. The parsing usually fails with some kind of invalid number of arguments error. This fix the error cheching the empty string case and storing it as an argument",PHP
"merged branch kbond/extensible-httpcache (PR #3716) Commits ------- 8f11f2dd shortened if/else syntax 2b8c2bc [FrameworkBundle] made http_cache dir extensible Discussion ---------- [FrameworkBundle] make http_cache dir extensible Bug fix: no Feature addition: yes Backwards compatibility break: no Symfony2 tests pass: yes I have a use case where I don't want the httpcache cleared on `cache:clear`. Currently, it is awkward to change this directory. [![Build Status](https://secure.travis-ci.org/kbond/symfony.png?branch=extensible-httpcache)](http://travis-ci.org/kbond/symfony)",PHP
Now sound sound over 20% less louder. Yay!,Java
"merged branch liuggio/webtestcase_kernel_shutdown_before_client (PR #3704) Commits ------- 3303155 added kernel shutdown before create client, fixed and stashed Discussion ---------- [FrameworkBundle] WebTestCase createClient doesn't check if static:kernel was already allocated with this little fix CreateClient shuts down the kernel before booting again. If you add an echo after the ""if"" on the line number 38 and run the test you would see that sometime the kernel is not properly umounted. Bug fix: [no] Feature addition: [no] Backwards compatibility break: [no] Symfony2 tests pass: [yes] --------------------------------------------------------------------------- by fabpot at 2012-03-29T09:19:07Z Can you squash your commits before I merge? Thanks. --------------------------------------------------------------------------- by liuggio at 2012-03-29T10:17:59Z Done.",PHP
"merged branch jankramer/master (PR #3478) Commits ------- e6577de Added a 'post validation' event to the form component. Discussion ---------- [Form] Add post-validate event Bug fix: no Feature addition: yes Backwards compatibility break: no Symfony2 tests pass: n/a Fixes the following tickets: n/a Todo: n/a --------------------------------------------------------------------------- by fabpot at 2012-03-02T20:34:18Z ping @bschussek --------------------------------------------------------------------------- by vicb at 2012-03-04T09:19:53Z I think this is a good idea (It was something missing to properly handle PersistentFile i.e. you should not persist invalid files) --------------------------------------------------------------------------- by vicb at 2012-03-09T22:35:26Z @jankramer please remove the second commit from this PR (see http://symfony.com/doc/current/contributing/code/patches.html) in order to make this mergeable. --------------------------------------------------------------------------- by jankramer at 2012-03-10T09:26:04Z @vicb done, sorry about that commit: overlooked the fact that it was on the same branch...",PHP
Yay more prettifying and some functionality changes,JavaScript
"merged branch jankramer/master (PR #3478) Commits ------- e6577de Added a 'post validation' event to the form component. Discussion ---------- [Form] Add post-validate event Bug fix: no Feature addition: yes Backwards compatibility break: no Symfony2 tests pass: n/a Fixes the following tickets: n/a Todo: n/a --------------------------------------------------------------------------- by fabpot at 2012-03-02T20:34:18Z ping @bschussek --------------------------------------------------------------------------- by vicb at 2012-03-04T09:19:53Z I think this is a good idea (It was something missing to properly handle PersistentFile i.e. you should not persist invalid files) --------------------------------------------------------------------------- by vicb at 2012-03-09T22:35:26Z @jankramer please remove the second commit from this PR (see http://symfony.com/doc/current/contributing/code/patches.html) in order to make this mergeable. --------------------------------------------------------------------------- by jankramer at 2012-03-10T09:26:04Z @vicb done, sorry about that commit: overlooked the fact that it was on the same branch...",PHP
yay fixiky,JavaScript
"merged branch jankramer/master (PR #3478) Commits ------- e6577de Added a 'post validation' event to the form component. Discussion ---------- [Form] Add post-validate event Bug fix: no Feature addition: yes Backwards compatibility break: no Symfony2 tests pass: n/a Fixes the following tickets: n/a Todo: n/a --------------------------------------------------------------------------- by fabpot at 2012-03-02T20:34:18Z ping @bschussek --------------------------------------------------------------------------- by vicb at 2012-03-04T09:19:53Z I think this is a good idea (It was something missing to properly handle PersistentFile i.e. you should not persist invalid files) --------------------------------------------------------------------------- by vicb at 2012-03-09T22:35:26Z @jankramer please remove the second commit from this PR (see http://symfony.com/doc/current/contributing/code/patches.html) in order to make this mergeable. --------------------------------------------------------------------------- by jankramer at 2012-03-10T09:26:04Z @vicb done, sorry about that commit: overlooked the fact that it was on the same branch...",PHP
Yay for RB...,Java
merged branch drak/flashinterface (PR #3719) Commits ------- cde1c52 [HttpFoundation] Add missing method in flash interface. Discussion ---------- [HttpFoundation] Add missing method in flash interface. Bug fix: yes Feature addition: no Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: #3711 Todo: -,PHP
yes bro..,PHP
merged branch Seldaek/chainableresp (PR #3605) Commits ------- ff13528 [HttpFoundation] Add create method to Json & Redirect responses 1c86ad7 [HttpFoundation] Add headers arg to RedirectResponse 873da43 [HttpFoundation] Add chainability to the Response class Discussion ---------- Chainable responses Bug fix: no Feature addition: yes Backwards compatibility break: no Symfony2 tests pass: yes --------------------------------------------------------------------------- by cboden at 2012-03-15T15:53:43Z +1,PHP
"merged branch lyrixx/patch-1 (PR #3721) Commits ------- c73748f [HttpFoundation] Added RFC reference to 308 468ad40 [HttpFoundation] Added support for 308 / Permanent Redirect Discussion ---------- [HttpFoundation] Added support for 308 / Permanent Redirect Bug fix: no Feature addition: yes Backwards compatibility break: no Symfony2 tests pass: yes (i guess) [![Build Status](https://secure.travis-ci.org/lyrixx/symfony.png?branch=patch-1)](http://travis-ci.org/lyrixx/symfony) Fixes the following tickets: - Todo: - I know this is still a draft, but it is already implemented in Firefox. See : - http://tools.ietf.org/html/draft-reschke-http-status-308-07 - https://developer.mozilla.org/en/HTTP/HTTP_response_codes#308 --------------------------------------------------------------------------- by stloyd at 2012-03-29T09:25:20Z It will be in Firefox... 14! --------------------------------------------------------------------------- by fabpot at 2012-03-29T09:33:01Z Like the non RFC 2616 status code, you need to add the RFC number as a comment (or the reference to the draft). --------------------------------------------------------------------------- by lsmith77 at 2012-03-29T11:58:14Z can you open a PR for https://github.com/FriendsOfSymfony/FOSRest/blob/master/Util/Codes.php ? --------------------------------------------------------------------------- by lyrixx at 2012-03-29T12:08:31Z @lsmith77 : Done. See : https://github.com/FriendsOfSymfony/FOSRest/pull/7 :)",PHP
accuracy measurement added. need to verify that yes and no children are being traversed to properly.,Python
Yay fixes,JavaScript
Yay changed in settings,JavaScript
adding a yes boolean field to dtnode which verified that accuracy traversal was correct,Python
"merged branch michal-pipa/server (PR #3465) Commits ------- df11e62 [FrameworkBundle] Used $output->write() instead of echo c3bf479 [FrameworkBundle] Used Process component cfa2dff [FrameworkBundle] Changed server:run command description e7d38c1 [FrameworkBundle] Changed PHP version detection (see: #3529) 4a3f6d5 [FrameworkBundle] Removed global variable from router script 519d431 [FrameworkBundle] Fixed built-in server router script d9a0a17 [FrameworkBundle] Added server:run command Discussion ---------- [FrameworkBundle] Added server:run command (PHP 5.4 built-in web server) Bug fix: no Feature addition: yes Backwards compatibility break: no Symfony2 tests pass: [![Build Status](https://secure.travis-ci.org/michal-pipa/symfony.png?branch=server)](http://travis-ci.org/michal-pipa/symfony) Fixes the following tickets: - Todo: - PHP 5.4 comes with [built-in web server](http://www.php.net/manual/en/features.commandline.webserver.php). I've created command which allows to easily run Symfony2 application using this new feature. Usage: server:run [-d|--docroot=""...""] [-r|--router=""...""] [address] Arguments: address Address:port (default: 'localhost:8000') Options: --docroot (-d) Document root (default: 'web/') --router (-r) Path to custom router script Help: The server:run runs Symfony2 application using PHP built-in web server: app/console server:run To change default bind address and port use the address argument: app/console server:run 127.0.0.1:8080 To change default docroot directory use the --docroot option: app/console server:run --docroot=htdocs/ If you have custom docroot directory layout, you can specify your own router script using --router option: app/console server:run --router=app/config/router.php See also: http://www.php.net/manual/en/features.commandline.webserver.php It requires PHP 5.4, otherwise this command will be disabled. I think that this is very convenient (especially for new users). All you have to do is download Symfony, install vendors and run this command. You don't have to configure ""real"" web server, in fact any other server is not required. You don't have cache and logs permission problem, because server runs with your local user permissions. --------------------------------------------------------------------------- by blogsh at 2012-03-06T17:38:10Z Great feature! I was about to write something like this when I saw that you have already started implementing this :) Some issues: 1. Missing newlines at the end of the files 2. If I try this server command with the default Symfony Standard Edition Acme demo the links on the main page do not work. The demo link links to ""//demo"" and the configurator link to ""//_configurator"". If I go to `localhost:8000/demo` directly the page is rendered as usual and all sub links are generated correctly. I could solve the problem by adding one line: $_SERVER['SCRIPT_FILENAME'] = 'ANYTHING'; require 'app_dev.php'; I'm not sure where this problem comes from. Do you experience the same behaviour? Otherwise I'll do some more investigations to find the source of the problem. 3 . I think it would be a nice feature if you would generate a router.php based on the setting of the --env flag if no custom router file has been specified. This way it would be easy to switch between dev and prod. --------------------------------------------------------------------------- by michal-pipa at 2012-03-06T19:00:24Z @blogsh > Missing newlines at the end of the files I've checked and I can see newlines at the end of files. Are you sure about this? > If I try this server command with the default Symfony Standard Edition Acme demo the links on the main page do not work. The demo link links to ""//demo"" and the configurator link to ""//_configurator"". If I go to localhost:8000/demo directly the page is rendered as usual and all sub links are generated correctly. I could solve the problem by adding one line: > > $_SERVER['SCRIPT_FILENAME'] = 'ANYTHING'; > require 'app_dev.php'; > > I'm not sure where this problem comes from. Do you experience the same behaviour? Otherwise I'll do some more investigations to find the source of the problem. I can reproduce this by changing front controller name from `app.php` to `app_dev.php`. I'll investigate on this. > I think it would be a nice feature if you would generate a router.php based on the setting of the --env flag if no custom router file has been specified. This way it would be easy to switch between dev and prod. You can easily change environment specifying front controller in URL. It works exactly the same way as default Apache configuration. This is intended behavior, as it would be misleading if every server had different rewrite rules. If you really want to change it, then you can write your own router and pass it as a value to `router` option. --------------------------------------------------------------------------- by blogsh at 2012-03-06T19:13:55Z Wasn't aware that github omits the trailing white line, sorry. Normally I use a rather inflexible nginx configuration, so I also wasn't aware of this (rather obvious) trick of changing the url. Thanks for that. --------------------------------------------------------------------------- by stof at 2012-03-06T22:12:16Z @blogsh it does not omit it. It displays it in the Linux way where the newline char is part of the line (and so there is a message ``no newline at end of file`` in the diff when it is missing). --------------------------------------------------------------------------- by michal-pipa at 2012-03-07T07:18:23Z @blogsh I've fixed router script. Now you can use both front controllers. --------------------------------------------------------------------------- by michal-pipa at 2012-03-07T07:34:58Z I've also hardcoded front controller name in router script and removed global variable, as there was no way to unset it. --------------------------------------------------------------------------- by michal-pipa at 2012-03-13T07:57:04Z I've used Process component, but now I don't get any stdout output (only stderr). --------------------------------------------------------------------------- by michal-pipa at 2012-03-13T18:01:58Z I've replaced `echo` by `$output->write()` and removed `$process` as it was not used actually.",PHP
"merged branch lyrixx/patch-1 (PR #3721) Commits ------- c73748f [HttpFoundation] Added RFC reference to 308 468ad40 [HttpFoundation] Added support for 308 / Permanent Redirect Discussion ---------- [HttpFoundation] Added support for 308 / Permanent Redirect Bug fix: no Feature addition: yes Backwards compatibility break: no Symfony2 tests pass: yes (i guess) [![Build Status](https://secure.travis-ci.org/lyrixx/symfony.png?branch=patch-1)](http://travis-ci.org/lyrixx/symfony) Fixes the following tickets: - Todo: - I know this is still a draft, but it is already implemented in Firefox. See : - http://tools.ietf.org/html/draft-reschke-http-status-308-07 - https://developer.mozilla.org/en/HTTP/HTTP_response_codes#308 --------------------------------------------------------------------------- by stloyd at 2012-03-29T09:25:20Z It will be in Firefox... 14! --------------------------------------------------------------------------- by fabpot at 2012-03-29T09:33:01Z Like the non RFC 2616 status code, you need to add the RFC number as a comment (or the reference to the draft). --------------------------------------------------------------------------- by lsmith77 at 2012-03-29T11:58:14Z can you open a PR for https://github.com/FriendsOfSymfony/FOSRest/blob/master/Util/Codes.php ? --------------------------------------------------------------------------- by lyrixx at 2012-03-29T12:08:31Z @lsmith77 : Done. See : https://github.com/FriendsOfSymfony/FOSRest/pull/7 :)",PHP
Yay more config changes,JavaScript
"merged branch liuggio/webtestcase_kernel_shutdown_before_client (PR #3704) Commits ------- 3303155 added kernel shutdown before create client, fixed and stashed Discussion ---------- [FrameworkBundle] WebTestCase createClient doesn't check if static:kernel was already allocated with this little fix CreateClient shuts down the kernel before booting again. If you add an echo after the ""if"" on the line number 38 and run the test you would see that sometime the kernel is not properly umounted. Bug fix: [no] Feature addition: [no] Backwards compatibility break: [no] Symfony2 tests pass: [yes] --------------------------------------------------------------------------- by fabpot at 2012-03-29T09:19:07Z Can you squash your commits before I merge? Thanks. --------------------------------------------------------------------------- by liuggio at 2012-03-29T10:17:59Z Done.",PHP
Vim: unbind arrow keys. Yes we can!,VimL
"merged branch liuggio/webtestcase_kernel_shutdown_before_client (PR #3704) Commits ------- 3303155 added kernel shutdown before create client, fixed and stashed Discussion ---------- [FrameworkBundle] WebTestCase createClient doesn't check if static:kernel was already allocated with this little fix CreateClient shuts down the kernel before booting again. If you add an echo after the ""if"" on the line number 38 and run the test you would see that sometime the kernel is not properly umounted. Bug fix: [no] Feature addition: [no] Backwards compatibility break: [no] Symfony2 tests pass: [yes] --------------------------------------------------------------------------- by fabpot at 2012-03-29T09:19:07Z Can you squash your commits before I merge? Thanks. --------------------------------------------------------------------------- by liuggio at 2012-03-29T10:17:59Z Done.",PHP
checkbox yes-no,PHP
removing VERSION from svn (so yes: it *is* autogenerated) -- thanks to Rodney for prompting ... git-svn-id: https://svn.r-project.org/ESS/trunk@4735 0bbaf3bd-34e0-0310-bf65-c717079852d4,Emacs Lisp
checkbox yes-no,PHP
"merged branch liuggio/webtestcase_kernel_shutdown_before_client (PR #3704) Commits ------- 3303155 added kernel shutdown before create client, fixed and stashed Discussion ---------- [FrameworkBundle] WebTestCase createClient doesn't check if static:kernel was already allocated with this little fix CreateClient shuts down the kernel before booting again. If you add an echo after the ""if"" on the line number 38 and run the test you would see that sometime the kernel is not properly umounted. Bug fix: [no] Feature addition: [no] Backwards compatibility break: [no] Symfony2 tests pass: [yes] --------------------------------------------------------------------------- by fabpot at 2012-03-29T09:19:07Z Can you squash your commits before I merge? Thanks. --------------------------------------------------------------------------- by liuggio at 2012-03-29T10:17:59Z Done.",PHP
MrYellow now follows your mouse. Yay :),JavaScript
- Update to 0.4.4 Changes: http://repo.or.cz/w/libquvi-scripts.git/blob/HEAD:/NEWS Feature safe: yes,C
Header is better. Yay!,JavaScript
"merged branch kbond/extensible-httpcache (PR #3716) Commits ------- 8f11f2dd shortened if/else syntax 2b8c2bc [FrameworkBundle] made http_cache dir extensible Discussion ---------- [FrameworkBundle] make http_cache dir extensible Bug fix: no Feature addition: yes Backwards compatibility break: no Symfony2 tests pass: yes I have a use case where I don't want the httpcache cleared on `cache:clear`. Currently, it is awkward to change this directory. [![Build Status](https://secure.travis-ci.org/kbond/symfony.png?branch=extensible-httpcache)](http://travis-ci.org/kbond/symfony)",PHP
Yes all working,Perl
"[Security] Configure ports in RetryAuthenticationEntryPoint according to router settings Bug fix: yes Feature addition: no Backwards compatibility break: no Symfony2 tests pass: yes Currently the ports in RetryAuthenticationEntryPoint are fixed in the constructor call, there is no way to set them when you run your application on different ports. With this fix the ports are taken from the router configuration.",PHP
merged branch jakzal/2.0-StaticMethodLoaderFix (PR #3937) Commits ------- 089188f [Validator] Fixed StaticMethodLoader when used with abstract methods. Discussion ---------- [Validator] Fixed StaticMethodLoader when used with abstract methods. Bug fix: yes Feature addition: no Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: #3179,PHP
Finally working as planned with new drones! YAY! :D,JavaScript
yay,Java
yay,Java
"Yes, headers look much better. And they can be linked to!",Perl
Revisions: Support for 'Yes to all' and 'No to all' options. 'No to all' still a bit rough. WIP,JavaScript
yes,JavaScript
"Implemented own file_move() and removed all GIO-related stuff Yay, ncdc now compiles and runs without linking to GIO or including any of its headers.",C
"Project folder restructuring + MacOS tuning + coolness now is possible to invoke the binary as follows: apprimate relative/path/to/file.html apprimate /absolute/path/to/file.html apprimate http::/my.url.com apprimate ""<div>HTML content for the window, YAY!</div>""",C++
"Yay, conflict.",JavaScript
yes,Objective-C
changed yes to no,Objective-C
"Change graph button from explicitly segue to programmatic control based on whether an iPad or iPhone. iPhone will still do segue, but now iPad just updates the program property. Program property wasn't setting setNeedsDisplay, fixed that. Made CalculatorViewController a delegate of a SplitViewController. This is so it can control behavior during rotation using the cryptic function call splitViewController:shouldHideViewController:inOrientation: Probably more needs to be done here but this seems to work and show both panes regardless of orientation (yay).",Objective-C
"Working on CarSelectMenu - First step to car tuning done, Boost PSI can now be set by GUI. Hurray!!!",C#
htoprc dotfile installation needs special handling (yay),VimL
"Merge branch 'mmaps2_beta' of https://github.com/ProjectSkyfire/SkyFireEMU into master (squashed) this fixes Issues: #436 #412 #354 #335 #284 #264 #247 and probably many more got tired of looking... thanks to those that worked on some of this, (guys at tc, and other listed in commitmsg's in mmaps2_beta) yes generic credits list im sry its 2:30AM and im tired as hell... this was first step to merging mmaps branch to master. Signed-off-by: Bootz <bootz@projectskyfire.org>",C++
Back to font-weight: normal for header pills. Also first commit from a Mac! Yay! :),Ruby
"Improve README, yay!",Ruby
"Hey look, profile pages have been updated to look nicer, and display all the same content as your nice /team/[username] pages. YAY! So yeah, that's that. The hr rules have been updated to account for possible floats.",Ruby
"Mention ""Curry-Howard"" in order to get the CS people a little bit excited.",JavaScript
"info updated, yay!",JavaScript
3.141592653589793238462643383279502884197169399375105 Yes. It's phi.,PHP
yay,Java
"global (configure) cache: * remove spurious export statement * add ac_cv_type_ptrdiff_t=yes, required by glib2, samba, and some other packages. glib2 misdetects it and sets the value to ""no"" breaking the compilation of samba git-svn-id: file:///var/svn/freetz/trunk@8961 149334a1-2f27-0410-a3b9-fc62619ac1e6",Shell
"Use Q_snprintf since snprintf is C99. Yes, another fix for that C99-shy MSVC. Somebody shoot it...",C
yay awesome progress dialog over foreach abstraction,Java
yay fixed the spinner,Java
merged branch hhamon/username_password_token_doc (PR #4172) Commits ------- 9ac8d43 [Security] fixed phpdoc. a3ecea3 [Security] added some missing phpdoc for AbstractToken::setUser() and UsernamePasswordToken::__construct() methods. Discussion ---------- Fixes PHPDoc in UsernamePasswordToken and AbstractToken classes Bug fix: no Feature addition: no Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: - Todo: -,PHP
merged branch pulzarraider/httpfoundation_changelog_fix (PR #4169) Commits ------- ea3f8c5 [HttpFoundation] added native Redis session handler to CHANGELOG Discussion ---------- [HttpFoundation] Added native Redis session handler to CHANGELOG Bug fix: yes Feature addition: no Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: - Todo: -,PHP
Bugfix: isLeafNode was initialized with the incorrect value. Has to be YES if we do not have subfolders.,Objective-C
"Improve growfs(8) in a few ways; unfortunately, it's somewhat hard to untangle them and commit separately. 1. Rewrite the way growfs(8) finds the device and mount point. This makes it possible to use e.g. ""growfs /mnt""; it's also used to display more helpful messages. 2. Be more user-friendly, using descriptive messages, like this: OK to grow filesystem on /dev/md0, mounted on /mnt, from 9.8GB to 20GB? [Yes/No]"" 3. Allow to specify the size (-s option) just like with mdconfig(8), i.e. with postfixes (""mdconfig -s 10g""). 4. Reload read-only filesystem after growing. Reviewed by: kib, mckusick (earlier version) Sponsored by: The FreeBSD Foundation",C
merged branch IntoWebDevelopment/countable-finder (PR #4068) Commits ------- 6154ae5 Implement Countable Discussion ---------- [Finder] Implement the Countable interface Bug fix: no Feature addition: yes Backwards compatibility break: no Symfony2 tests pass: yes - [![Build Status](https://secure.travis-ci.org/IntoWebDevelopment/symfony.png?branch=countable-finder)](http://travis-ci.org/IntoWebDevelopment/symfony) Fixes the following tickets: - Todo: -,PHP
"merged branch pulzarraider/memcache_profiler_update (PR #4150) Commits ------- 1f6c8d5 [HttpKernel] Added mock objects for Memcache(d) and Redis e17217b [HttpKernel] Remove destructive flush() from memcache(d) storage profilers Discussion ---------- [HttpKernel] Memcache and Redis profiler storage update Bug fix: no Feature addition: yes Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: - Todo: - Changes of this PR: - change ```purge()``` method of memcache(d) profiler storage to delete only required items and be less destructive, - mock objects for Redis and Memcache(d) storages were added to make unit tests independent from memcache(d)/redis extensions and memcache(d)/redis servers running on localhost.",PHP
"merged branch pulzarraider/memcache_profiler_update (PR #4150) Commits ------- 1f6c8d5 [HttpKernel] Added mock objects for Memcache(d) and Redis e17217b [HttpKernel] Remove destructive flush() from memcache(d) storage profilers Discussion ---------- [HttpKernel] Memcache and Redis profiler storage update Bug fix: no Feature addition: yes Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: - Todo: - Changes of this PR: - change ```purge()``` method of memcache(d) profiler storage to delete only required items and be less destructive, - mock objects for Redis and Memcache(d) storages were added to make unit tests independent from memcache(d)/redis extensions and memcache(d)/redis servers running on localhost.",PHP
"I forgot to put ""-a"", now yes commiting the changes",C++
"[added] jbox2d, ported so it compiles with GWT. Main changes were merely getting rid of StrictMath, fixing Float.intToFloatBits, and ""unreflectifying"" the pooling package. Now some poor schmock has to write an API compatible thin wrapper, hurray :D git-svn-id: https://libgdx.googlecode.com/svn/trunk@3589 6c4fd544-2939-11df-bb46-9574ba5d0bfa",C
Forgot to add the file. NOTE this code is NOT FUNCTIONAL YET. don't get excited...,C
"implemented sprite animation, yay!",Lua
"Yes, I was there…",PHP
Deleted commented out code for real! Yay for cleanliness,Java
Deleted commented out code for real! Yay for cleanliness,Java
yes sir,JavaScript
yay stacks with macros.,C
T: Make the top menu bar show active plugins this is riddled with hacks that I am not proud of.,Ruby
"That pause is pretty annoying, yes-yes?",Assembly
BINGO!,Ruby
"Merged upstream change and got the project to build. Yay! Finally, after a lot of trouble getting the project to build at all using the maven-erlang-plugin, it actually passes build, test and dialyzing. I added the pre-hook to generate-resources so that the _secret_ include file also get's made before the compile phase. NOTE: about to move the repo into the Lindenbaum organization repo for third party Erlang dependencies.",Erlang
"fixed bug where location and content_type headers were not sent with terminate=""yes""",PHP
Yay simplicity,JavaScript
yes,JavaScript
Boolean shows Yes/No,Ruby
yay report type,Python
Yay,JavaScript
"Functional HTTP Client! So, now this particular non-HTTPS implementation is doing what it's supposed to be doing. There's still a bug in the HTTP implementation which needs some squashing, but I'm proud to announce that we're now in (almost) feature parity with the 0.9.3 implementation, *without the header-only dogma*. There's still quite a lot to do, but this is a milestone commit for the refactoring effort.",C++
"fix channel header to be flexible and change #editbar to .editbar (id to class) Yes, a table is used. I'm proud of it. Since flex-box is not yet final they are still the best solution for such cases.",CoffeeScript
"[osx] fix release build and packaging, yes I really, really tested this to make sure it works",C
"Removing testing stuff. Yay, I can commit!!!",JavaScript
"Removing testing stuff. Yay, I can commit!!!",JavaScript
Added selfupdate (yay),Python
yes no handler,C#
"[osx] fix release build and packaging, yes I really, really tested this to make sure it works",C
"configure.ac: Add --enable-{client,server,examples} These default respectively to yes, yes, no.",C++
Adding tracks if they are tagged with access=yes,C++
"Added new filter token filter for simple tokenization of the input for testing - work in progres, input filter does not work yes",C
"OK, so we need to change Database.java and nothing else to implement CSV support. YAY.",Java
"Changed the unicode character for results Yes, I know this symbol is now meant to be used for navigation but I also like it for search results. Go ahead and find a better one",JavaScript
"works outside emulator, yay",D
everything is working. yay!,C
"Update to support ""Putty"" automatic ssh login in Windows platform. Due to the Putty's strong security enforcement, the host key checking cannot be disabled. When Putty connects to the reserved machine for the first time, it will pop up a dialog and require the user to choose yes to allow the host key checking. Although this may cause one interaction, the username, password are automatically passed by our Java One-Button-App. After the user clicks the yes button of the dialog, Putty will automatically SSH to the reserved machine.",Java
Fixed issue #5927: Default template Yes/No questions & Male/Female alignment,PHP
Fixed issue #5927: Default template Yes/No questions & Male/Female alignment,PHP
"sicp; exercise 1.46 - iterative-improve Knowing how to implement a Y-combinator here would have been very useful. Also, I believe with some currying, those definitions could have looked way better, but hey - we don't know how to do that. Also, final exercise for Chapter 1. Yay for me!",Scheme
"More README improvements. IT SHALL BE PERFECT, OH YES.",Ruby
Provisioned for swaps and convoyed moves. ...through some ugly code. Also added some debugging. Passing 62/69. Yay! Close to the end.,Ruby
"YES, both Spring MVC and REST...",Java
merged branch pulzarraider/webprofiler_serch_ipv6_fix (PR #3626) Commits ------- 54b2413 Webprofiler ipv6 search fix Discussion ---------- [WebProfilerBundle] ipv6 search fix Bug fix: yes Feature addition: no Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: - Todo: -,PHP
merged branch pulzarraider/session_doc_fix (PR #3627) Commits ------- f351cdc doc fix Discussion ---------- [HttpFoundation] documentation fix Bug fix: yes Feature addition: no Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: - Todo: -,PHP
"merged branch nodrew/2.0 (PR #3625) Commits ------- 8642473 Changed instances of \DateTimeZone::UTC to 'UTC' as the constant is not valid a produces this error when DateTimeZone is instantiated: DateTimeZone::__construct() [<a href='datetimezone.--construct'>datetimezone.--construct</a>]: Unknown or bad timezone (1024) Discussion ---------- [Locale] DateTimeZone called incorrectly by default Bug fix: yes Feature addition: no Backwards compatibility break: no Symfony2 tests pass: no (there were two tests that were failing previously, that still fail) Fixes the following tickets: none Todo: none While running, a warning throws every single time when the code ```php new \DateTimeZone(\DateTimeZone::UTC); ``` is encountered. It is normally caught as a thrown exception and then corrected here: ```php // src/Symfony/Component/Locale/Stub/StubIntlDateFormatter.php:442 try { $this->dateTimeZone = new \DateTimeZone($timeZoneId); } catch (\Exception $e) { $this->dateTimeZone = new \DateTimeZone('UTC'); } ``` However in my particular infrastructure, for whatever reason in production only, it causes an error to appear on shutdown in the logs. As ultimately the constant can NEVER pass, it should not be attempted with the constant. Instead, the correct 'UTC' should be passed in (as done in the catch statement).",PHP
merged branch pulzarraider/session_doc_fix (PR #3627) Commits ------- f351cdc doc fix Discussion ---------- [HttpFoundation] documentation fix Bug fix: yes Feature addition: no Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: - Todo: -,PHP
"fixed massive logic errorz in emailing out reminders, plus added rsvp confirmation email for person who replies yes",JavaScript
merged branch pulzarraider/session_doc_fix (PR #3627) Commits ------- f351cdc doc fix Discussion ---------- [HttpFoundation] documentation fix Bug fix: yes Feature addition: no Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: - Todo: -,PHP
Added .htaccess Cleaner URLS yay!,PHP
"Yes, I fucked up, it did overwrite Math.sqrt instead of CSMath.sqrt",JavaScript
The user can now pick a ore to mine (feature #1). Yay!,PHP
Delay on modreqs? Yes please.,Java
"Rake now works, YAY",JavaScript
"Enums, yay",Java
yay,Java
Updated the content of About to be somewhat current. Yay,Ruby
"YAY. Fully working version with sortable links, a completely revamped UI and many, many minor improvements. Enjoy.",JavaScript
Finally booting on rails 3.2 yay.,JavaScript
Documentation fixes for yard compliance * CHANGELOG using markdown (yay!). Doesn't look so stupid anymore * Removed hash-links from README * Broke out assertion definitions into their own header * Fixed yard warnings [ci skip],Ruby
fix layout no more f/c's yay!,Java
Yay,JavaScript
yay,JavaScript
yay no more temp files,Shell
Yay,JavaScript
Yay logging ish,JavaScript
copy and paste in generateChildren. yay for copy and paste!!!,Java
Update readme file. Yay,Ruby
yes,JavaScript
* Added v2.0 keystone auth support to swift uploads * use DEBUG=yes to print debugging info * updated README * Added FileFM::Log logger * Fixes small file uploads,Ruby
Fixed forms with clean_input = yes and images as input,PHP
"yes, regression fixes are generally okay for maint",Perl
Removed test code which is no longer needed (yay!),C++
BOA: Use default mirror when _AUTOPILOT is set to YES (Robert),Shell
"Fixing position of the window. (In Ubuntu it was not noticed because it is not posible to through the screen dimensions, but yes in MACOS and Windows)",Prolog
added priority table for priority values mapped to element types. added a radioBoolean() method for generic boolean yes/no radio controls.,PHP
"Make 'yes' the default, to match the prompt.",VimL
"Add a meta viewport and we seem to be set for mobile, yay",Python
"merged branch Tobion/command-name (PR #3285) Commits ------- 447d468 restore previous testing style with static fixtures for console 11585c3 fix Command:asXml to use processed help 304e13d replaced command names with supported placeholders in help texts Discussion ---------- using the placeholder in command help texts Replaced the command names with the already supported placeholders `%command.name%` and `%command.full_name%`. Thus preventing typos in future commands based on the existing ones. --------------------------------------------------------------------------- by fabpot at 2012-02-09T06:26:07Z That breaks the unit tests. --------------------------------------------------------------------------- by Tobion at 2012-02-09T17:05:06Z fixed --------------------------------------------------------------------------- by stof at 2012-02-09T17:43:47Z can you rebase your branch please ? it conflicts with master --------------------------------------------------------------------------- by stof at 2012-02-09T17:44:11Z the reason is simple: SwiftmailerBundle is gone :) --------------------------------------------------------------------------- by Tobion at 2012-02-09T23:23:23Z done --------------------------------------------------------------------------- by fabpot at 2012-02-11T23:47:10Z Can you squash your commit before I merge this PR? Thanks. --------------------------------------------------------------------------- by Tobion at 2012-02-12T13:57:14Z I'm unable to squash it into 1 commit because of the uptream commits inside. I hope it's fine now. If not someone needs to help me. --------------------------------------------------------------------------- by stof at 2012-02-12T14:27:38Z ``git rebase -i upstream/master`` should allow you rebasing things and squashing them toghter (changing the action for the second commit to ``squash``) --------------------------------------------------------------------------- by Tobion at 2012-02-12T14:47:29Z first i tried with git rebase -i head~4 (4 commits), but this showed many more external commits. second I tried git reset --soft with a clean commit, but still no success. then I used your proposal. and there are always conflicts of stuff that is not part of my PR. now the diff is messed up... this is frustrating --------------------------------------------------------------------------- by stof at 2012-02-12T14:58:43Z The only reason why the diff is messed is because you messed it when resolving the conflicts by choosing the wrong result for the output. Please fix things as it means that merging your PR would revert changes done previosuly --------------------------------------------------------------------------- by stof at 2012-02-12T15:00:18Z Basically, you reverted most of the changes done in Symfony the few last days. --------------------------------------------------------------------------- by Tobion at 2012-02-12T15:10:59Z I used `git checkout --theirs .` when resolving. Whats the correct way? --------------------------------------------------------------------------- by stof at 2012-02-12T15:13:21Z Well, I generally resolve the conflicts myself instead of asking git to use one version, as generally the final code is not one of the versions by a mix of both versions (as both sides are likely to have done useful changes) --------------------------------------------------------------------------- by Tobion at 2012-02-12T15:15:02Z Yes but the conflicts are in files I never touched and that are not part of my changes. I cannot resolve hundreds of files by hand. --------------------------------------------------------------------------- by Tobion at 2012-02-12T15:41:31Z Finally it worked. I used git reset head~1 and then discarded all foreign changes. There you go. --------------------------------------------------------------------------- by Tobion at 2012-02-14T14:06:04Z @fabpot ping --------------------------------------------------------------------------- by Tobion at 2012-02-20T18:20:50Z @fabpot ping --------------------------------------------------------------------------- by stof at 2012-03-02T22:14:49Z @Tobion the branch needs to be rebased. It conflicts with master --------------------------------------------------------------------------- by Tobion at 2012-03-21T04:22:10Z All done. I don't want to squash commits because they are self-contained fixes and changes that might be needed for future references (like the dynamic tests for -`>run()`).",PHP
"Yay, categorized uploader is now finished.",PHP
"[TwigBundle] Changed getAndCleanOutputBuffering() handling of systems where ob_get_level() never returns 0 Bug fix: yes Feature addition: no Backwards compatibility break: no Symfony2 tests pass: [![Build Status](https://secure.travis-ci.org/lencioni/symfony.png)](http://travis-ci.org/lencioni/symfony) Fixes the following tickets: - Todo: - Relying on decrementing a counter has two problems. First, and most importantly, if the output buffering nesting level is greater than the counter, the function does not perform the expected task. Secondly, on systems where the counter is needed, a lot of unnecessary extra loops would potentially occur. This approach checks to see if the level has stayed the same from the previous iteration and if it has it stops looping.",PHP
[oh god] needed to add the gwt dev and user libs to SVN. :/ [fixed] build scripts to build gwt backend. That took like 5 minutes. Hurray build system :D git-svn-id: https://libgdx.googlecode.com/svn/trunk@3629 6c4fd544-2939-11df-bb46-9574ba5d0bfa,C
[oh god] needed to add the gwt dev and user libs to SVN. :/ [fixed] build scripts to build gwt backend. That took like 5 minutes. Hurray build system :D git-svn-id: https://libgdx.googlecode.com/svn/trunk@3629 6c4fd544-2939-11df-bb46-9574ba5d0bfa,C
Setting the preferedSize to CGRectZero now also sets the adjustBackgroundImage to YES,Objective-C
build and run on ubuntu! yay,C++
"Working hello world implementation. - Found out that D already provides stat.d and stuff, but I also figured out that their definition was not correct at least at my 64 bit system. - Used Ds system .di files, where appropriate and possible. - Rethink the mapping of Cs pointers to D arrays, because the following seems causes a segfault with an array that points to a C pointer contents: my_arr[]=some_other_data[0..10]; (yes my_arr has a capacity greater than 10.) -> Fix D's stat.di and maybe also polish and submit statvfs.d",D
yay i did a modified square thingie YEAHHgit status! feel like a pimp,Python
"FIXED JENKINS-13076 included an extra checkbox to enable notes. They are disabled by default. The bug, that didn't display notes has been solved as well. Yay, time for a beer.",Java
"Working on CarSelectMenu - First step to car tuning done, Boost PSI can now be set by GUI. Hurray!!!",C#
Fix yes-or-no-p for better handling of default answer.,PHP
Yes/no metatags for login status.,JavaScript
"Allow only strings true, on, yes to return true for boolean, false otherwise",JavaScript
"Allow values true,on,yes to return true; false otherwise on boolean",JavaScript
added more player animations. yay,Lua
Redid…everything? - New gesture recognizer based on KinectJS - Application runs in Google Chrome on Mac/PC - Added audio prompts and feedback - Added yes/no handlers to route confirmation screen - Showed the map view (in addition to the Google Earth view) - Made icons for each gesture - Made help screen,JavaScript
yes,JavaScript
I completed all particle functions! Yay! They haven't all been tested.,JavaScript
Added srand(time(NULL)) right before our random_shuffle. The game is randomized now! Hurray,C++
"major refactoring of Errai IOC -- also, achieved 100% code coverage of the core TypeInjector and ProxyInjector classes. Yay!",Java
"major refactoring of Errai IOC -- also, achieved 100% code coverage of the core TypeInjector and ProxyInjector classes. Yay!",Java
YAY,Python
"Fixed session recurrence for basic cases Still need to fully handle different patterns, but a basic limited pattern now renders properly (yay!)",JavaScript
Added some basic js link intervention code. Yay for pushState!,JavaScript
"merged branch blahy/code-coverage-fix (PR #3617) Commits ------- 9ed7c03 fixed code coverage raport generation Discussion ---------- fixed code coverage raport generation Bug fix: yes Feature addition: no Backwards compatibility break: no Symfony2 tests pass: no (tests were already broken) Fixes the following tickets: - Todo: - I wanted to run the test coverage for Symfony2.1. I installed vendors using composer but code coverage script failed (running unit tests failed too). After installing vendors using vendors.php I got errors about missing classes: `Class 'Doctrine\Common\DataFixtures\Loader' not found` and later: `Class 'Monolog\Handler\ChromePHPHandler' not found.` The changes made it possible to run the code coverage script. Monolog was already present in autoload.php.dist but was not present in vendors.php script, doctrine fixtures were not included in both.",PHP
Made CSS changes in homepage and new Helvetica class; also uploaded refresh and small bus icons (YAY FIRST COMMIT!),Ruby
"merged branch blahy/code-coverage-fix (PR #3617) Commits ------- 9ed7c03 fixed code coverage raport generation Discussion ---------- fixed code coverage raport generation Bug fix: yes Feature addition: no Backwards compatibility break: no Symfony2 tests pass: no (tests were already broken) Fixes the following tickets: - Todo: - I wanted to run the test coverage for Symfony2.1. I installed vendors using composer but code coverage script failed (running unit tests failed too). After installing vendors using vendors.php I got errors about missing classes: `Class 'Doctrine\Common\DataFixtures\Loader' not found` and later: `Class 'Monolog\Handler\ChromePHPHandler' not found.` The changes made it possible to run the code coverage script. Monolog was already present in autoload.php.dist but was not present in vendors.php script, doctrine fixtures were not included in both.",PHP
yay?,JavaScript
yay???,JavaScript
yes,JavaScript
Documentation and Rakefile updates! Yay!,Ruby
Documentation and Rakefile updates! Yay! Conflicts: Rakefile,Ruby
Merge branch 'rack-1.4' * rack-1.4: Documentation and Rakefile updates! Yay!,Ruby
fixed linear regression but I'm not apparently excited about it,C++
"merged branch blahy/code-coverage-fix (PR #3617) Commits ------- 9ed7c03 fixed code coverage raport generation Discussion ---------- fixed code coverage raport generation Bug fix: yes Feature addition: no Backwards compatibility break: no Symfony2 tests pass: no (tests were already broken) Fixes the following tickets: - Todo: - I wanted to run the test coverage for Symfony2.1. I installed vendors using composer but code coverage script failed (running unit tests failed too). After installing vendors using vendors.php I got errors about missing classes: `Class 'Doctrine\Common\DataFixtures\Loader' not found` and later: `Class 'Monolog\Handler\ChromePHPHandler' not found.` The changes made it possible to run the code coverage script. Monolog was already present in autoload.php.dist but was not present in vendors.php script, doctrine fixtures were not included in both.",PHP
FUCKING figured out the variant situation. FUCK YES,Ruby
"... Yes, I forgot to change the package of the main class. Shame on me.",Java
We can't sleep. We're too excited with this new Markdown generated by our tests.,PHP
Fixed dismiss-completion only for finished=YES.,Objective-C
merged branch pulzarraider/webprofiler_serch_ipv6_fix (PR #3626) Commits ------- 54b2413 Webprofiler ipv6 search fix Discussion ---------- [WebProfilerBundle] ipv6 search fix Bug fix: yes Feature addition: no Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: - Todo: -,PHP
yes I have three different versions of sbt installed ...,Java
Yay fixes,JavaScript
Yay I need to be an owner.,JavaScript
"fuk yes fixade accerelation helt nu, genom att faktiskt ta bort kod.",Java
Add first non-me contributor! Yay!,Python
"Corrected some styling issues in the yes-no-maybe example. * Added overflow:hidden to cut to big content * Added cursor:pointer to show the user, that she can interact.",JavaScript
Add first non-me contributor! Yay!,Python
Merge pull request #256 from modilabs/post-bootstrap-fixes xform download link fixed. yay!,Python
Yay forgetting stuffs,JavaScript
Yay,JavaScript
Yay,JavaScript
Yay.,JavaScript
"Dotcloud now supports installing packages, yay now we can get ogr2ogr.",JavaScript
"Merge ""Make 'yes' also a true boolean""",Python
"Test for mobile UI single post view Verify that the correct layout is rendered (rather than no layout at all) in the mobile UI single post view. This is a test I forgot to write at 5am when I was so excited about having the mobile UI working on my Blackberry again (bad me!), so here it is before it slips my mind. :grin: This tests the change made to posts_controller in 6abe718227bcc858",Ruby
"set javadoc autobrief to YES in order for the briefs to be picked up without the brief keyword. Fixes annihilation of briefs that occured unintentionally during the documentation overhaul in commit 4155787860a800af5c33aeefd0ff06522ed8c3e7 . For briefs to be picked up from the \brief free syntax, the JAVADAC_AUTOBRIEF config variable must be yes. Done and done!",C++
"set javadoc autobrief to YES in order for the briefs to be picked up without the brief keyword. Fixes annihilation of briefs that occured unintentionally during the documentation overhaul in commit 4155787860a800af5c33aeefd0ff06522ed8c3e7 . For briefs to be picked up from the \brief free syntax, the JAVADAC_AUTOBRIEF config variable must be yes. Done and done!",C++
Major cleanup I have: Removed fonts I was trying out with the code a long time ago. Added the demo to the demo page (YAY) Added jquery and require (I need to find an outside repo for this) A major cleanup of the jquery-pong code.,JavaScript
One less run command for shared_config:symlink. Yay!,Ruby
renamed dick to fool. yay,JavaScript
Yay update/backup :P,C++
"Significant refactor to fix bugs in castling / check and make adding new pieces easier Pulled out all piece logic into pieces.py, providing a moderately-clearly-structured framework for adding new pieces, plus a useful method `threat_squares` for determining which squares a piece threatens - this can thus be used to simplify `check_status` (and probably also to improve UI / AIs on the top). With this comes some proper checking of castling through / out of check (yay overloaded terms) and now the engine should be rules-compliant!",Python
Removing my idiotic aws.properties commit (and yes the keys have been cancelled),Java
"Merge ""Make 'yes' also a true boolean""",Python
"merged branch kbond/extensible-httpcache (PR #3716) Commits ------- 8f11f2dd shortened if/else syntax 2b8c2bc [FrameworkBundle] made http_cache dir extensible Discussion ---------- [FrameworkBundle] make http_cache dir extensible Bug fix: no Feature addition: yes Backwards compatibility break: no Symfony2 tests pass: yes I have a use case where I don't want the httpcache cleared on `cache:clear`. Currently, it is awkward to change this directory. [![Build Status](https://secure.travis-ci.org/kbond/symfony.png?branch=extensible-httpcache)](http://travis-ci.org/kbond/symfony)",PHP
"Default ""Enable Search"" to YES",Python
Yay it works properly!,Python
"Merge ""Make 'yes' also a true boolean""",Python
Update notes for submitted changes * Make 'yes' also a true boolean,Python
instantiate dao correctly in test_dryad.py. All tests pass yay,Python
Yay even more updates!!,JavaScript
Yes I am even more anal,Python
Histogram section added. Yay!,Python
yes commit data too,C
"sstate-cache-management.sh: fixes and enhancement Fix a few problems and enhance its functions, it shoud be more useful than before. * Search in meta and meta-* for archs, and grep AVAILTUNES for archs, (only search meta, and grep DEFAULTTUNE before), add the host arch. and also can search in extra layers with --extra-layer. * Reduce the analyzing time when remove duplicated files. It would cost more than 10 minutes to analyze 11,000 files before, now only needs about 50 seconds. * Check the access time rather than create time. * Need the user's confirm before really remove the file, or use --yes to assume yes. * Add --stamps-dir to keep sstate files which are used by the build directory, and remove others this can make the sstate cache dir clean, it is faster and should be useful than the --remove-duplicated. * Add --verbose to explain what is being done. * Add ""-d"" which is short for --remove-duplicated [YOCTO #2198] Signed-off-by: Robert Yang <liezhi.yang@windriver.com> Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>",C
I've added a feature :) #proud,C#
Working state! Yay!,Python
Working Soluvas Image Store. Yay! :-),Java
Compatibility with python 2.6 and 3.2. Yay!,Python
"Add net/nyancat, an animated, color, ANSI-text telnet server that renders a loop of the classic nyan cat animation. Feature safe: yes",C
Added a catchall watcher adding a watcher with the '*' as name will watch all properties. Yes exactly like dojo.Stateful. You guys rock. :),CoffeeScript
"Commit initial type/provider/class Yes, this is ugly. I don't think I want a resource called 'munki_package' - it's better to have a package resource with a munki provider. The problem is that I wanted to create a catalog parameter for the main package type, but didn't want to throw the current package type into a module and modify it just for that. So I did this. It works, it's basic, and it's definitely not to be used in production. Consider this 'proof of concept'. Please.",Python
- Update to 1.1.34 Feature safe: yes,C
"set javadoc autobrief to YES in order for the briefs to be picked up without the brief keyword. Fixes annihilation of briefs that occured unintentionally during the documentation overhaul in commit 4155787860a800af5c33aeefd0ff06522ed8c3e7 . For briefs to be picked up from the \brief free syntax, the JAVADAC_AUTOBRIEF config variable must be yes. Done and done!",C++
oh yes,JavaScript
set skip_install build setting to YES,C
"Register aliases for label vector type Apparently AMF can't handle deserializing the types inside of vectors unless they're registered explicitly, even if they're types otherwise handled implicitly. I'm nervous about using AMF as an export format. It's been fiddly to get it to work, it's opaque, I'm not sure if it's remained constant across Flash versions, and I don't know that Adobe won't break it in a future version. It's nice in that it's almost no code and that it's presumably snappy in parsing, but I'm starting to think that doesn't outweigh the danger. I don't have another option I'm super excited about. I'd like to stay away from XML since I've seen the Flash parser get unendurably slow on big documents, so maybe adding from JSON methods to the molds is a better option? I feel like creating a custom binary format is overkill, even if it just used the ByteArray methods for the encoding format.",ActionScript
YES,Ruby
YES,Ruby
Updating Git to DailyBonus 2.X versions yay.,Java
transientness yay,Go
"yay, my first commit",C
"0.0.0.2, yay",C
"Yes, I forgot the extension.",Lua
yes i suck,Lua
"I would be proud to be included in the authors list (thanks for the kind offer Hylke) for my recent ""AboutController"" changes, although I hope to make more significant contributions in the future! :D",C#
FIxed a few errors. Yes it works fine.,Lua
yes,Ruby
"Added asteroids and turrets. Both don't work. No programming for asteroids yet, and turrets get placed on the yellow sun automatically. Other than that… yay.",JavaScript
yay,ActionScript
Bulk commit; nothing to be proud about,PHP
YAY,Lua
merged branch michal-pipa/WebProcessorTest-fix (PR #4064) Commits ------- dff92e7 [Bridge][Monolog] Fixed WebProcessorTest Discussion ---------- [Bridge][Monolog] Fixed WebProcessorTest Bug fix: yes Feature addition: no Backwards compatibility break: no Symfony2 tests pass: yes [![Build Status](https://secure.travis-ci.org/michal-pipa/symfony.png?branch=WebProcessorTest-fix)](http://travis-ci.org/michal-pipa/symfony) Fixes the following tickets: - Todo: - Fixed WebProcessorTest in compliance with latest monolog changes: Seldaek/monolog@3c4bc178cc389bc35660f29f72fd84be5b653f52. Test was failing with message: `Symfony\Bridge\Monolog\Tests\Processor\WebProcessorTest::testUsesRequestServerData Undefined index: SERVER_NAME` --------------------------------------------------------------------------- by ManuelAC at 2012-04-22T13:47:59Z :+1: --------------------------------------------------------------------------- by willdurand at 2012-04-22T13:49:27Z :+1:,PHP
merged branch IntoWebDevelopment/countable-finder (PR #4068) Commits ------- 6154ae5 Implement Countable Discussion ---------- [Finder] Implement the Countable interface Bug fix: no Feature addition: yes Backwards compatibility break: no Symfony2 tests pass: yes - [![Build Status](https://secure.travis-ci.org/IntoWebDevelopment/symfony.png?branch=countable-finder)](http://travis-ci.org/IntoWebDevelopment/symfony) Fixes the following tickets: - Todo: -,PHP
"Add optional debug output of incoming data, via defaults write com.figure53.Helpifier FHSDebugData -bool YES",Objective-C
"Indirect through a variable in slime-operator-before-point. I could write about how this is necessary given the reprogrammability of the CL reader, but honestly this is motivated by trying to get arglist display in the minibuffer for R. I'll be glad if this is useful for (real) Lisp programmers too.",Common Lisp
"Indirect through a variable in slime-operator-before-point. I could write about how this is necessary given the reprogrammability of the CL reader, but honestly this is motivated by trying to get arglist display in the minibuffer for R. I'll be glad if this is useful for (real) Lisp programmers too.",Common Lisp
merged branch bschussek/issue4077 (PR #4085) Commits ------- d9e142b [Form] Restored and deprecated method `guessMinLength` in FormTypeGuesser Discussion ---------- [Form] Restored and deprecated method `guessMinLength` in FormTypeGuesser Bug fix: yes Feature addition: no Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: - Todo: - ![Travis Build Status](https://secure.travis-ci.org/bschussek/symfony.png?branch=issue4077) This is a follow-up PR to #4077 (see comments in #3927 for reference).,PHP
hiding yes and no per default. Might fix that Facebook shows both,PHP
yay,C++
"Color Scheme, oh yes.",Ruby
Miracle follows official rules closer (trigger on the stack) - Saying yes to the Miracle window adds a miracle trigger to the stack instead of directly casting it. - Resolving the trigger will then cast the miracle spell.,Python
Yay glowing things,ooc
"Adding in all the files, yay!",C++
"Added configuration converter (3.1.3-3.2.0b) [...] Although this does convert the configuration it does not however ensure that all settings are copied. Settings like SQL, messages, notifications, and overall settings are not copied because the new configuration calls for administrators to take the time to review the new layout and ensure their server will work with it. Yes, the leaving out of things is intentional. I want to ensure servers read the configuration and have the chance to fix it before complaining that the configuration doesn't work anymore. (Yes, I am aware how mean this is, and I apologize. It is an attempt to remove bug reports right after a release saying ""it doesn't work!!"".)",Java
"Removed sudo form crush command. Totally not needed. Misunderstanding of an error lead to me trying this, but I am glad I don't need it.",PHP
"Indirect through a variable in slime-operator-before-point. I could write about how this is necessary given the reprogrammability of the CL reader, but honestly this is motivated by trying to get arglist display in the minibuffer for R. I'll be glad if this is useful for (real) Lisp programmers too.",Common Lisp
"Indirect through a variable in slime-operator-before-point. I could write about how this is necessary given the reprogrammability of the CL reader, but honestly this is motivated by trying to get arglist display in the minibuffer for R. I'll be glad if this is useful for (real) Lisp programmers too.",Common Lisp
yay,Java
yes,JavaScript
merged branch bschussek/issue4077 (PR #4085) Commits ------- d9e142b [Form] Restored and deprecated method `guessMinLength` in FormTypeGuesser Discussion ---------- [Form] Restored and deprecated method `guessMinLength` in FormTypeGuesser Bug fix: yes Feature addition: no Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: - Todo: - ![Travis Build Status](https://secure.travis-ci.org/bschussek/symfony.png?branch=issue4077) This is a follow-up PR to #4077 (see comments in #3927 for reference).,PHP
yay,ActionScript
new toc works! yay!,Java
yes,JavaScript
Submodule-ize git-backup and writingme/unwritingme Now we always use the latest version on github. Yay.,VimL
"Add Travis-CI, yay",Ruby
yes,PHP
"refactor : move classes from bingo.utils to bingo.lang , keep bingo.codec only",Java
blitwiz.net.server works! Yay!,C
Fixed the matching bug (yay),C++
now you can click on an entire post to favorite / unfav it. yay. [ci skip],Ruby
merged branch gajdaw/2_0_component_classloader_cs (PR #4072) Commits ------- 54ec687 [2.0][Component][ClassLoader] cs Discussion ---------- [2.0][Component][ClassLoader] CS Bug fix: no Feature addition: no Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: - Todo: -,PHP
"merged branch gajdaw/2_1_component_classloader_cs (PR #4073) Commits ------- bc8855e [2.1][Component][ClassLoader] cs Discussion ---------- [2.1][Component][ClassLoader] cs Bug fix: no Feature addition: no Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: - Todo: - --------------------------------------------------------------------------- by fabpot at 2012-04-23T06:18:26Z Can you please remove the changes you have already made in the other PR as I merge 2.0 into master regularly. Then, you will need to squash you commits to avoid any conflict when merging will occur. Thanks. --------------------------------------------------------------------------- by gajdaw at 2012-04-23T06:50:58Z I hope that's it.",PHP
"merged branch pulzarraider/windows_proces_hang_fix (PR #4069) Commits ------- e3296cb fix php5.4 problem c2405c0 fix hanging of unit tests on Windows Discussion ---------- [WIP] [Process] Fix hanging of unit tests on Windows Bug fix: yes Feature addition: no Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: #3798 Todo: - This PR tries to fix hanging unit tests on Windows platform. The problem is caused by known [PHP bug](https://bugs.php.net/bug.php?id=51800). PHP hangs forever while reading from STDOUT pipe if the output is too big. I tried different combinatios and this is not ideal, but a working patch - STDOUT is sending to a file. @Tobion, @drak and other developers working on Windows - can you please confirm, if this solution works for you, too? --------------------------------------------------------------------------- by Seldaek at 2012-04-22T20:56:20Z Tried it on 5.4.0 - I get the following when I checkout your branch: ``` SS..........ESSSSSSSSSS...E.S Time: 0 seconds, Memory: 19.75Mb There were 2 errors: 1) Symfony\Component\Process\Tests\ProcessTest::testProcessResponses with data set #0 ('output', 'getOutput', 'echo \'output\';') Undefined offset: 1 C:\Users\seld\Web\symfony\framework\src\Symfony\Component\Process\Process.php:342 C:\Users\seld\Web\symfony\framework\src\Symfony\Component\Process\Process.php:168 C:\Users\seld\Web\symfony\framework\src\Symfony\Component\Process\Tests\ProcessTest.php:46 2) Symfony\Component\Process\Tests\ProcessTest::testIsRunning Undefined offset: 1 C:\Users\seld\Web\symfony\framework\src\Symfony\Component\Process\Process.php:342 C:\Users\seld\Web\symfony\framework\src\Symfony\Component\Process\Tests\ProcessTest.php:106 ``` When I remove the skipping of `ProcessTest::testProcessPipes` - it still hangs so it looks like your fix is not working. Just for reference, with latest master checkout I get this: ``` SS...........SSSSSSSSSS.....S Time: 2 seconds, Memory: 19.75Mb OK, but incomplete or skipped tests! ``` Don't have time right now, but if I find time to look at your diff in more details I will, maybe it's possible to fix it. --------------------------------------------------------------------------- by pulzarraider at 2012-04-22T22:23:05Z @Seldaek Thanks, fixed php5.4 problem, my php5.3.8 passed every Process tests. This patch isn't fixing problem with pipes in general. I don't think it's even possible from PHP code. We have to wait for PHP core developers to fix this problem. This patch only fix issue with hanging unit tests (not the one with pipes you mentioned). In my environment, symfony unit tests never finished and hangs on SwitchUserTest from SecurityBundle on 98%. Now with this patch, I can see final informations about all tests and their errors. --------------------------------------------------------------------------- by Seldaek at 2012-04-23T07:44:16Z Ok, it passes again on 5.4.",PHP
"merged branch ruian/guess_pattern (PR #4077) Commits ------- f7200e4 [Form] added method `guessPattern` to FormTypeGuesserInterface Discussion ---------- [Form] add guess pattern Bug fix: no Feature addition: yes Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: https://github.com/symfony/symfony/issues/3766 Todo: - Due to some trouble when rebase my previous PR i open a new one with Master merged Refs PR: https://github.com/symfony/symfony/pull/3927 --------------------------------------------------------------------------- by fabpot at 2012-04-23T10:25:57Z @vicb @bschussek ok for you? --------------------------------------------------------------------------- by bschussek at 2012-04-23T10:26:51Z please do also rephrase the commit message to something clearer, like [Form] added method `guessPattern` to FormTypeGuesserInterface --------------------------------------------------------------------------- by bschussek at 2012-04-23T10:27:35Z Otherwise this looks good :) --------------------------------------------------------------------------- by ruian at 2012-04-23T10:29:18Z every changes done",PHP
merged branch dlsniper/small-wdt-fix (PR #4063) Commits ------- e1cf54c Small fixes for the WDT Discussion ---------- [WebProfilerBundle] Small fixes for the WDT Bug fix: yes Feature addition: no Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: - Todo: - These are some very small HTML fixes for the new WDT. Tests are passing but Travis is acting strange at the moment.,PHP
merged branch hhamon/http_foundation_phpdoc (PR #3982) Commits ------- b19468e [HttpFoundation] changed return type from int to integer in ParameterBag::getInt() method. 9cd0b03 [HttpFoundation] fixed phpdoc in ParameterBag::getInt() method. Discussion ---------- [HttpFoundation] phpdoc fix in ParameterBag class Bug fix: no Feature addition: no Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: - Todo: -,PHP
"merged branch Ziumin/2.0 (PR #4076) Commits ------- 2e7d3b1 http_build_query fix de73de0 http_build_query fix 3b7ee9a http_build_query fix Discussion ---------- [2.0] http_build_query extra parameters Bug fix: yes arg_separator.output is not always ""&"", so it is better ini_set it or put an extra parameters to http_build_query --------------------------------------------------------------------------- by fabpot at 2012-04-23T10:20:05Z Can you squash your commits? It will be much easier to get back to this change later on. Thanks. --------------------------------------------------------------------------- by Ziumin at 2012-04-23T10:46:35Z I have no idea how to do it using web interface. I'm not familiar with git (prefer hg). Sorry.",PHP
"merged branch ruian/guess_pattern (PR #4077) Commits ------- f7200e4 [Form] added method `guessPattern` to FormTypeGuesserInterface Discussion ---------- [Form] add guess pattern Bug fix: no Feature addition: yes Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: https://github.com/symfony/symfony/issues/3766 Todo: - Due to some trouble when rebase my previous PR i open a new one with Master merged Refs PR: https://github.com/symfony/symfony/pull/3927 --------------------------------------------------------------------------- by fabpot at 2012-04-23T10:25:57Z @vicb @bschussek ok for you? --------------------------------------------------------------------------- by bschussek at 2012-04-23T10:26:51Z please do also rephrase the commit message to something clearer, like [Form] added method `guessPattern` to FormTypeGuesserInterface --------------------------------------------------------------------------- by bschussek at 2012-04-23T10:27:35Z Otherwise this looks good :) --------------------------------------------------------------------------- by ruian at 2012-04-23T10:29:18Z every changes done",PHP
merged branch bschussek/issue4077 (PR #4085) Commits ------- d9e142b [Form] Restored and deprecated method `guessMinLength` in FormTypeGuesser Discussion ---------- [Form] Restored and deprecated method `guessMinLength` in FormTypeGuesser Bug fix: yes Feature addition: no Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: - Todo: - ![Travis Build Status](https://secure.travis-ci.org/bschussek/symfony.png?branch=issue4077) This is a follow-up PR to #4077 (see comments in #3927 for reference).,PHP
merged branch bschussek/issue4077 (PR #4085) Commits ------- d9e142b [Form] Restored and deprecated method `guessMinLength` in FormTypeGuesser Discussion ---------- [Form] Restored and deprecated method `guessMinLength` in FormTypeGuesser Bug fix: yes Feature addition: no Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: - Todo: - ![Travis Build Status](https://secure.travis-ci.org/bschussek/symfony.png?branch=issue4077) This is a follow-up PR to #4077 (see comments in #3927 for reference).,PHP
spawning food yay! though no ability to eat yet...,C++
"client: Initial drawing of ships & projectiles (works, yay! :)",Java
excited about the next step aka proj08?,Ruby
Add new function set .rm::REBOOT:YES,C++
"Add Samsung S Pen SDK binding sample (yes, with 2.0 version I could build it).",C#
Updated ID and Phrase Changed permalink to ID (resource ID) and data-helpful=yes|no to data-phrase=helpful(+ more),JavaScript
"yay, temperature counter",C
Got rid of Coasts. Yay lol - untested,JavaScript
LaTeX now supports tables (yay!),Python
Syntax error yay!,C++
completed assignment 5 + extra credit yay!,Objective-C
more debugging! yay!,C++
"Yes, more tinkering. new file: modules/localhttpd/files/cent-4/httpd.conf new file: modules/localhttpd/files/cent-4/logrotate-d-httpd new file: modules/localhttpd/files/cent-4/proxy.conf modified: modules/tcsettings/files/cent-5/tomcat-users.xml modified: modules/tomcat/templates/install-tomcat.sh.erb",Puppet
"Adjust SP before content is written below it. From Valgrind: I/valgrind( 1837): ==1838== Invalid write of size 4 I/valgrind( 1837): ==1838== at 0x4E312A4: sha1_block_data_order (sha1-armv4-large.s:109) I/valgrind( 1837): ==1838== Address 0xbdd6abb8 is just below the stack ptr. To suppress, use: --workaround-gcc296-bugs=yes This is probably just a cosmetic fix to make Valgrind happy. BUG: 5505776 Change-Id: Ice2fa65ab753a7c4cb92f531179db8b200f8b2c5",C
I wrote some stuff yay,C++
"even better, yes good",Python
"merged branch eriksencosta/locale (PR #3840) Commits ------- 31dde14 [Locale] updated StubIntlDateFormatter::format() behavior for PHP >= 5.3.4 Discussion ---------- [Locale] updated StubIntlDateFormatter::format() behavior for PHP >= 5.3.4 Bug fix: yes Feature addition: no Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: - Todo: - [![Build Status](https://secure.travis-ci.org/eriksencosta/symfony.png?branch=locale)](http://travis-ci.org/eriksencosta/symfony) --------------------------------------------------------------------------- by drak at 2012-04-08T23:20:20Z This looks like a feature addition as opposed to a bug fix and if so, should probably go in the master branch rather than 2.0. --------------------------------------------------------------------------- by stof at 2012-04-08T23:30:25Z @drak it is a bug fix as the stub is meant to have the same behavior than the real intl --------------------------------------------------------------------------- by drak at 2012-04-08T23:36:08Z ok, thanks for the clarification, I wasnt sure. --------------------------------------------------------------------------- by eriksencosta at 2012-04-08T23:44:22Z @stof is right. I myself fixed it in master and then remembered that bug fixes should be made in 2.0.",PHP
yes,JavaScript
"yay, the proof-of-concept works",Shell
yes you can,JavaScript
"Fixed application lockups during map navigation AppBar menu is shown by default – more accessible and less confusing for new users Reporting fixed for languages other than English and Hebrew (yes, we have users from other countries) Pressing Back button takes the car back to focus on map (and then shows the confirmation message). This is good if you want a button that will always bring you back to same state, no matter where you are in the app.",Objective-J
"Allow for tests to run in parallel (simultaneously from multiple checkouts) This is an interim solution and is by no means the final thing. It simply was possible to do in a short timeframe and cuts the test run time in half. If you have DSN envvars set, use at least -s -j8 for best results (the shuffling un-bunches similar tests, see discussion below) Two things are at play: First of all every SQLite database and every temp work directory is created separately using the pid of the *main* test process (there can be children) for disambiguation. Extra cleanup passes have been added to ensure t/var remains clean between runs. All other DSNs are reduced to their ->sqlt_type form and the result is used for a global lockfile. Said lockfile is kept in /tmp so that multiple testruns from multiple directories can be run against the same set of databases with no conflicts. Some of the tests are explicitly exempt from any locking and will run regardless of environment, for example t/storage/dbi_env.t The lockfiles are deliberately placed in File::Spec->tmpdir. This is done so that multiple dbic checkouts can run against the same set of DSNs without stepping on each other's toes. Some notes on why this is not a great idea, even though it works flawlessly under continuous test cycling: The problem is that our tests are not yet ordered in a spwecific way. This means that multiple tests competing for the same resource will inevitably lock all available test threads forming several bottlenecks along the path of execution. This issue will be adressed in a later patch, with the following considerations: - prove -l t/... must continue to work as is - test aggregation is something the test suite should try to avoid in general - after all DBIC is intended to be usable in CGI (yes, pure CGI) environments, so if the tests are getting heavy to run - this is an actual problem in need of fixing. Aggregation will instead sweep it under the rug - general reorganization of test groups / various path changes should only be attempted once we have a solid base for multi-db test runs",Perl
Yay,Java
"confirmation on delete (yes, bad ui pattern, I know)",Emacs Lisp
"merged branch eriksencosta/locale (PR #3840) Commits ------- 31dde14 [Locale] updated StubIntlDateFormatter::format() behavior for PHP >= 5.3.4 Discussion ---------- [Locale] updated StubIntlDateFormatter::format() behavior for PHP >= 5.3.4 Bug fix: yes Feature addition: no Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: - Todo: - [![Build Status](https://secure.travis-ci.org/eriksencosta/symfony.png?branch=locale)](http://travis-ci.org/eriksencosta/symfony) --------------------------------------------------------------------------- by drak at 2012-04-08T23:20:20Z This looks like a feature addition as opposed to a bug fix and if so, should probably go in the master branch rather than 2.0. --------------------------------------------------------------------------- by stof at 2012-04-08T23:30:25Z @drak it is a bug fix as the stub is meant to have the same behavior than the real intl --------------------------------------------------------------------------- by drak at 2012-04-08T23:36:08Z ok, thanks for the clarification, I wasnt sure. --------------------------------------------------------------------------- by eriksencosta at 2012-04-08T23:44:22Z @stof is right. I myself fixed it in master and then remembered that bug fixes should be made in 2.0.",PHP
"Removed commit testing stuff. Yay, it's done!",PHP
yay final commit pre-merge,Erlang
Add new function set OFF:YES in .rm and,C++
Changed the default behaviour of --enable-optimize to 'yes',C
"merged branch bschussek/issue3278 (PR #3860) Commits ------- 004c873 [Form] Fixed display of DateTimeType and TimeType when displayed as ""single_text"" and ""with_seconds"" is false Discussion ---------- [Form] Fixed display of [Date]TimeType when displayed as ""single_text"" and ""with_seconds"" is false Bug fix: yes Feature addition: no Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: #3278 Todo: - ![Travis Build Status](https://secure.travis-ci.org/bschussek/symfony.png?branch=issue3278)",PHP
"Generic classes and generic class methods work cross-crate Classes can have ty params now. So can methods inside classes. That was probably true before, but now it should still work if you call methods in a class that's defined in a different crate. Yay!",Rust
"merged branch bschussek/issue3839 (PR #3859) Commits ------- 61d792e [Form] Changed checkboxes in an expanded multiple-choice field to not include the choice index bc9bc4a [Form] Fixed behavior of expanded multiple-choice field when submitted without ticks 2e07256 [Form] Simplified choice list API 2645120 [Form] Fixed handling of expanded choice lists, checkboxes and radio buttons with empty values ("""") Discussion ---------- [Form] Fixed handling of empty values in checkbox/radio/choice type Bug fix: yes Feature addition: no Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: #3839, #3366 Todo: - ![Travis Build Status](https://secure.travis-ci.org/bschussek/symfony.png?branch=issue3839) This PR fixes the processing of checkboxes and radio buttons with empty ""value"" attributes as well as of expanded choice forms with empty values. Additionally, some unnecessary complexity has been removed of the new ChoiceList API. --------------------------------------------------------------------------- by stof at 2012-04-10T13:56:12Z You probably need to change some things in the CHANGELOG file too --------------------------------------------------------------------------- by bschussek at 2012-04-10T14:39:24Z No. This is an update of a previous post-2.0 PR, the CHANGELOG is still accurate. --------------------------------------------------------------------------- by stof at 2012-04-10T14:46:47Z well, doesn't it require changes to the description of previous changes related to the ChoiceList ? It does in the UPGRADE file so it is weird if the CHANGELOG does not require any change. --------------------------------------------------------------------------- by bschussek at 2012-04-10T14:56:05Z Feel free to check yourself :)",PHP
"merged branch bschussek/issue3839 (PR #3859) Commits ------- 61d792e [Form] Changed checkboxes in an expanded multiple-choice field to not include the choice index bc9bc4a [Form] Fixed behavior of expanded multiple-choice field when submitted without ticks 2e07256 [Form] Simplified choice list API 2645120 [Form] Fixed handling of expanded choice lists, checkboxes and radio buttons with empty values ("""") Discussion ---------- [Form] Fixed handling of empty values in checkbox/radio/choice type Bug fix: yes Feature addition: no Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: #3839, #3366 Todo: - ![Travis Build Status](https://secure.travis-ci.org/bschussek/symfony.png?branch=issue3839) This PR fixes the processing of checkboxes and radio buttons with empty ""value"" attributes as well as of expanded choice forms with empty values. Additionally, some unnecessary complexity has been removed of the new ChoiceList API. --------------------------------------------------------------------------- by stof at 2012-04-10T13:56:12Z You probably need to change some things in the CHANGELOG file too --------------------------------------------------------------------------- by bschussek at 2012-04-10T14:39:24Z No. This is an update of a previous post-2.0 PR, the CHANGELOG is still accurate. --------------------------------------------------------------------------- by stof at 2012-04-10T14:46:47Z well, doesn't it require changes to the description of previous changes related to the ChoiceList ? It does in the UPGRADE file so it is weird if the CHANGELOG does not require any change. --------------------------------------------------------------------------- by bschussek at 2012-04-10T14:56:05Z Feel free to check yourself :)",PHP
"Generic classes and generic class methods work cross-crate Classes can have ty params now. So can methods inside classes. That was probably true before, but now it should still work if you call methods in a class that's defined in a different crate. Yay!",Rust
"Added blocks for Victoria, Hallelujah, and Dayton industrial areas",JavaScript
yay for forgetting ;,Java
"Merge pull request #15 from clundie/release/1.1.1 Hrm, yes this is true. Thanks very much Chris!",Objective-C
yay! actually seeing the new series now!,JavaScript
The first game-specific question. Yay! Also adding stubs for future functionality.,JavaScript
"Pep8 second try. (This is related to #99) Modified : Line length 80 => 100 Feel free to (dis)agree : espacially in the line cutting, I'm not very proud by the way I did it :p I still need a feedback for the '\'. The code looks more complicated, but sometimes it's necessary. I'm prerry sure that the '\' ensure that the semantic is not modified.",Python
removing VERSION from svn (so yes: it *is* autogenerated) -- thanks to Rodney for prompting ... git-svn-id: https://svn.r-project.org/ESS/trunk@4735 0bbaf3bd-34e0-0310-bf65-c717079852d4,Emacs Lisp
vim: supertab update 1.1 -> 1.6 The annoying behaviour of complete menu getting in my way when just trying to insert tab is now gone. Yay!,VimL
"Some of the pages on the wiki should be deleted at some point, but maybe not in the next month. That's what this page is for. (and yes, it means in . . .",Emacs Lisp
"Merge ""Allow yes-like values to be interpreted as bool"" into milestone-proposed",Python
Update notes for submitted changes * Allow yes-like values to be interpreted as bool,Python
"Zebra striping FTW (and another fix) Don't muck with the line-height for the h2 span so it keeps on matching the other items at the top. Also, yay zebra striping!",PHP
CavesTheme loops correctly now. Yay for lmms.,C++
"Finally fixed my threading woes. It looked like I was going to have to record lock (recommended by the GNU C manual for my situation) or use mutexes, which would destroy most of the point of threading. However, if you explicitly create unique file descriptors from the same file, they have different file pointers running through the same file, so you can work them to their respective offsets without them conflicting, even if they happen to be passing through at the same time. Hell yes.",C++
"Show a placeholder image if none exists, where appropriate (yes I know the image is terrible)",PHP
added gunners. yay,Java
"Yay, comments in code!",Java
Added `sortable` application helper. Yay!,JavaScript
More work done on check command. Hurray!,Java
"First pass implementation of Entity state caching model, including ""prefresh"" optimization on instantiation of collection members, reducing roundtrips for iterating a collection to 1 from N+1 (yay!)",JavaScript
Yay for resource closing design pattern,Java
Yay for resource closing design pattern,Java
Slides Centered Yay!,Java
"yes comments, no dead code also, now display the origin user/repo for forks",JavaScript
removing VERSION from svn (so yes: it *is* autogenerated) -- thanks to Rodney for prompting ... git-svn-id: https://svn.r-project.org/ESS/trunk@4735 0bbaf3bd-34e0-0310-bf65-c717079852d4,Emacs Lisp
"Merge ""Allow yes-like values to be interpreted as bool""",Python
Update notes for submitted changes * Allow yes-like values to be interpreted as bool,Python
merged branch jalliot/header-bag (PR #3702) Commits ------- 15dd17e Simplified CONTENT_ headers retrieval Discussion ---------- Header bag Bug fix: yes Feature addition: no Backwards compatibility break: no Symfony2 tests pass: yes (actually no but I think this has nothing to do with this PR...) Fixes the following tickets: - Todo: -,PHP
"Yes, my master.",JavaScript
fixed all bugs with maps/search. yay,Java
Bumped version number! Yay!,Python
"Yay, it processes blank files correctly",Ruby
merged branch drak/flashinterface (PR #3719) Commits ------- cde1c52 [HttpFoundation] Add missing method in flash interface. Discussion ---------- [HttpFoundation] Add missing method in flash interface. Bug fix: yes Feature addition: no Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: #3711 Todo: -,PHP
"merged branch ajessu/phpserver (PR #3717) Commits ------- d243097 Run built-in server on dev environment Discussion ---------- Run built-in server on dev environment Bug fix: yes? Feature addition: no Backwards compatibility break: no Symfony2 tests pass: yes Change the router of the built-in server command to run on dev environment. The symfony standard edition doesn't have any `/` route by default (it's only available to dev), so by default, when ran, it gives a `404`, unless you explicitely add the `app_dev.php` front controller to the route. Also, this server is meant to be run on dev only, so no need to run it with the prod front controller by default.",PHP
"Merge ""Allow yes-like values to be interpreted as bool""",Python
no more xauth yay,Go
Comments! Yay!,C++
"YES, I GOT IT. I'M SURE.",C++
"Fixed a few issues. Issues fixed: * can't have NxM screen for n,m < 100 (Yes, I know that was stupid to fix.) * fixes an issue where bullets no longer came from the front of the ship.",Python
"Merge ""Allow yes-like values to be interpreted as bool""",Python
"- Add hadoop 1.0.0 - Add hadoop user to GIDs/UIDs (955) The Apache Hadoop software library is a framework that allows for the distributed processing of large data sets across clusters of computers using a simple programming model. WWW: http://hadoop.apache.org/ Approved by: culot@, jadawin@ (mentors) Feature safe: yes",C
"* Fixed a potential segfault with IPv6 option handling * Add a suffix to all our config files so that RA never stamps on IPv4 * All valgrind errors fixed on FreeBSD (with ./configure --debug=YES) * When started with an interface list, respect that with signal handling * Fix a potential route table corruption if we failed to add a route",C
"* Fixed a potential segfault with IPv6 option handling * Add a suffix to all our config files so that RA never stamps on IPv4 * All valgrind errors fixed on FreeBSD (with ./configure --debug=YES) * When started with an interface list, respect that with signal handling * Fix a potential route table corruption if we failed to add a route",C
"* Fixed a potential segfault with IPv6 option handling * Add a suffix to all our config files so that RA never stamps on IPv4 * All valgrind errors fixed on FreeBSD (with ./configure --debug=YES) * When started with an interface list, respect that with signal handling * Fix a potential route table corruption if we failed to add a route",C
Swap Yes/No boxes on Bromley (just copying whole template for now).,Perl
"Add initial support for booting from ZFS on sparc64. At least on Sun Fire V100, the firmware is known to be broken and not allowing to simultaneously open disk devices, causing attempts to boot from a mirror or RAIDZ to cause a crash. This will be worked around later. The firmwares of newer sun4u models don't seem to exhibit this problem though. Steps for ZFS booting: 1. create VTOC8 label # gpart create -s vtoc8 da0 2. add partitions, f.e.: # gpart add -t freebsd-zfs -s 60g da0 # gpart add -t freebsd-swap da0 resulting in something like: # gpart show => 0 143331930 da0 VTOC8 (68G) 0 125821080 1 freebsd-zfs (60G) 125821080 17510850 2 freebsd-swap (8.4G) 3. create zpool # zpool create bunker da0a or for mirror/RAIDZ (after preparing additional disks as in steps 1. + 2.): # zpool create bunker mirror da0a da1a # zpool create bunker raidz da0a da1a da2a ... 4. set bootfs # zpool set bootfs=bunker bunker 5. install zfsboot # zpool export bunker # gpart bootcode -p /boot/zfsboot da0 6. write zfsloader to the ZFS Boot Block (so far, there's no dedicated tool for this, so dd(1) has to be used for this purpose) When using mirror/RAIDZ, step 4. and the dd(1) invocation should be repeated for the additional disks in order to be able to boot from another disk in case of failure. # sysctl kern.geom.debugflags=0x10 # dd if=/boot/zfsloader of=/dev/da0a bs=512 oseek=1024 conv=notrunc # zpool import bunker 7. install system on ZFS filesystem Don't forget to set 'zfs_load=""YES""' and vfs.root.mountfrom=""zfs:bunker"" in loader.conf as well as 'zfs_enable=""YES""'in rc.conf. 8. copy zpool.cache to the ZFS filesystem cp -p /boot/zfs/zpool.cache /bunker/boot/zfs/zpool.cache 9. set mountpoint # zfs set mountpoint=/ bunker 10. Now, given that aliases for all disks in the zpool exists (check with the `devalias` command on the boot monitor prompt) and disk0 corresponds to da0 (likewise for additional disks), the system can be booted from the ZFS with: {1} ok boot disk0 PR: 165025 Submitted by: Gavin Mu",C
yay,PHP
"Add initial support for booting from ZFS on sparc64. At least on Sun Fire V100, the firmware is known to be broken and not allowing to simultaneously open disk devices, causing attempts to boot from a mirror or RAIDZ to cause a crash. This will be worked around later. The firmwares of newer sun4u models don't seem to exhibit this problem though. Steps for ZFS booting: 1. create VTOC8 label # gpart create -s vtoc8 da0 2. add partitions, f.e.: # gpart add -t freebsd-zfs -s 60g da0 # gpart add -t freebsd-swap da0 resulting in something like: # gpart show => 0 143331930 da0 VTOC8 (68G) 0 125821080 1 freebsd-zfs (60G) 125821080 17510850 2 freebsd-swap (8.4G) 3. create zpool # zpool create bunker da0a or for mirror/RAIDZ (after preparing additional disks as in steps 1. + 2.): # zpool create bunker mirror da0a da1a # zpool create bunker raidz da0a da1a da2a ... 4. set bootfs # zpool set bootfs=bunker bunker 5. install zfsboot # zpool export bunker # gpart bootcode -p /boot/zfsboot da0 6. write zfsloader to the ZFS Boot Block (so far, there's no dedicated tool for this, so dd(1) has to be used for this purpose) When using mirror/RAIDZ, step 4. and the dd(1) invocation should be repeated for the additional disks in order to be able to boot from another disk in case of failure. # sysctl kern.geom.debugflags=0x10 # dd if=/boot/zfsloader of=/dev/da0a bs=512 oseek=1024 conv=notrunc # zpool import bunker 7. install system on ZFS filesystem Don't forget to set 'zfs_load=""YES""' and vfs.root.mountfrom=""zfs:bunker"" in loader.conf as well as 'zfs_enable=""YES""'in rc.conf. 8. copy zpool.cache to the ZFS filesystem cp -p /boot/zfs/zpool.cache /bunker/boot/zfs/zpool.cache 9. set mountpoint # zfs set mountpoint=/ bunker 10. Now, given that aliases for all disks in the zpool exists (check with the `devalias` command on the boot monitor prompt) and disk0 corresponds to da0 (likewise for additional disks), the system can be booted from the ZFS with: {1} ok boot disk0 PR: 165025 Submitted by: Gavin Mu git-svn-id: svn+ssh://svn.freebsd.org/base/head@234898 ccf9f872-aa2e-dd11-9fc8-001c23d0bc1f",C
Searching YES,Ruby
"first draft of music page. Yes, feel free to steal our EP for now - we just want people to hear it",JavaScript
accept 'yes' and 'no' as values for boolean config options,Lua
"- add new ""PT Mono Bold"" font PR: 166537 Submitted by: Alexey Illarionov <littlesavage at rambler dot ru> (maintainer) Feature safe: yes",C
new achievements *yay*,Shell
Application tests work - renamed that long cassette to everything.yml - updated cassettes for facebook requests - made StatusExchange::Application tests pass with Rack::Test yay,JavaScript
Fixed the daisyworld computation - yay big numbers updated icon testing rig some support data,JavaScript
propery enables 'yes' option,Python
yay trucks! civilians get less stuck on objects,C#
got video working again! yay,JavaScript
anish's first commit! yay!!,Matlab
use echo instead of yes. dont forget to terminate echo command.,Objective-C
Yay for git!,C++
"merged branch ruimarinho/sort_by_time (PR #3745) Commits ------- dcf82d7 [Finder] Added sortBy options based on accessed, changed and modified times Discussion ---------- [Finder] Added sortBy options based on accessed, changed and modified times Bug fix: no Feature addition: yes Backwards compatibility break: no Symfony2 tests pass: yes",PHP
"Added empty files for Page Rank. Yes, I'm starting this late. No, you're not allowed to point fingers. Try doing my Capstone Project for me then we'll talk.",Java
"check if the service code has changed since the service was started. If yes, reload all services.",Ruby
jquery hiding and showing about text yay,Ruby
"[ticket/10270] Fixed a bug where fadedark wouldn't go. If the confirm box was submitted as yes, then the fadedark would stay until it was clicked. This commit fixes that. PHPBB3-10270",PHP
Added yes-no fields in config,PHP
Yay for Items,Java
Yay for Items,Java
update to 1.97.2; add a mirror Feature safe: yes,C
"small bug fix, and all test joints work! yay",HaXe
yay sliding troll,C++
"Windows installer fix. ACL2s requires that the installation directory not contain spaces, so I'm cheating and using the 8.3 compatible equivalent directory names (hardcoded to the path `C:\PROGRA~1\PROOFP~1\`). I'm not proud of this.",Java
"merged branch stof/autoloader_refactoring (PR #3756) Commits ------- f1f1494 Added an exception when passing an invalid object to ApcClassLoader f5cb167 [ClassLoader] Added a DebugClassLoader using composition 0e54a22 Updated the changelog eae772e [ClassLoader] Added an ApcClassLoader 4d1333f Changed the test autoloading to use the new autoloader 09850bd [ClassLoader] Added a simplified PSR-0 ClassLoader Discussion ---------- Autoloader refactoring Bug fix: no Feature addition: yes Backwards compatibility break: no Symfony2 tests pass: [![Build Status](https://secure.travis-ci.org/stof/symfony.png?branch=autoloader_refactoring)](http://travis-ci.org/stof/symfony) As discussed in #3623, I added a new ClassLoader instead of modifying the UniversalClassLoader, to be able to use the method names without BC concerns. The new class works the same than the composer autoloader regarding the handling of fallbacks, to be able to reuse namespace maps generated by composer. ```php <?php // autoload.php require_once __DIR__.'/vendor/symfony/class-loader/Symfony/Component/ClassLoader/ClassLoader.php'; $loader = new Symfony\Component\ClassLoader\ClassLoader(); $map = require __DIR__.'/vendor/.composer/autoload_namespaces.php'; $loader->addPrefixes($map); $loader->register(); ``` Differences with the composer class loader: - Composer's ``add`` method is named ``addPrefix`` in the Symfony ClassLoader - the methods related to the class map are removed as Symfony has a separate laoder for class maps - the ``addPrefixes`` method is added, accepting a namespace map. I also added a new ApcClassLoader which uses composition instead of inheriting from a class loader, which makes it far more easier to reuse (we could wrap a Composer autoloader with it for instance). ```php <?php $composerLoader = require __DIR__.'/vendor/.composer/autoload.php'; // no need to require the file manually as Composer already registered its autoloader $cachedLoader = new Symfony\Component\ClassLoader\ApcClassLoader('autoload.my_app', $composerLoader); $cachedLoader->register(); // unregister the Composer autoloader as we wrapped it in the ApcClassLoader $composerLoader->unregister(); ``` TODO: - refactor the Debug class loader to use composition too to be able to support different class loaders --------------------------------------------------------------------------- by fabpot at 2012-04-02T16:31:28Z Can you update the CHANGELOG and the UPGRADE file accordingly? --------------------------------------------------------------------------- by stof at 2012-04-02T16:47:43Z I added a note in the CHANGELOG. There is nothing to add in the UPGRADE file as the change is fully BC (I did not change the UniversalClassLoader at all so it can still be used). I'm working on the Debug loader right now so please wait a bit before merging --------------------------------------------------------------------------- by stof at 2012-04-02T17:12:11Z Here is a new DebugClassLoader using composition too. this way, it is able to support the UniversalClassLoader, the ApcUniversalClassLoader (without dropping the use of APC as done previously), the new ClassLoader, the new ApcClassLoader and even the composer autoloader. I'm not sure about the use of ``method_exists`` as it could break if an autoloader implements a protected ``findFile`` method (crappy PHP :cry:) but hardcoding the supported classes would be a pain and requiring an interface would make the autoloaders more difficult to use (as the interface would need to be required first) and would drop the support of the composer autoloader.",PHP
stop autolinking strings like foo...yes/no plus version bump,Ruby
"Lua event shutdown, yay",C++
"Lua event shutdown, yay",C
"merged branch stof/autoloader_refactoring (PR #3756) Commits ------- f1f1494 Added an exception when passing an invalid object to ApcClassLoader f5cb167 [ClassLoader] Added a DebugClassLoader using composition 0e54a22 Updated the changelog eae772e [ClassLoader] Added an ApcClassLoader 4d1333f Changed the test autoloading to use the new autoloader 09850bd [ClassLoader] Added a simplified PSR-0 ClassLoader Discussion ---------- Autoloader refactoring Bug fix: no Feature addition: yes Backwards compatibility break: no Symfony2 tests pass: [![Build Status](https://secure.travis-ci.org/stof/symfony.png?branch=autoloader_refactoring)](http://travis-ci.org/stof/symfony) As discussed in #3623, I added a new ClassLoader instead of modifying the UniversalClassLoader, to be able to use the method names without BC concerns. The new class works the same than the composer autoloader regarding the handling of fallbacks, to be able to reuse namespace maps generated by composer. ```php <?php // autoload.php require_once __DIR__.'/vendor/symfony/class-loader/Symfony/Component/ClassLoader/ClassLoader.php'; $loader = new Symfony\Component\ClassLoader\ClassLoader(); $map = require __DIR__.'/vendor/.composer/autoload_namespaces.php'; $loader->addPrefixes($map); $loader->register(); ``` Differences with the composer class loader: - Composer's ``add`` method is named ``addPrefix`` in the Symfony ClassLoader - the methods related to the class map are removed as Symfony has a separate laoder for class maps - the ``addPrefixes`` method is added, accepting a namespace map. I also added a new ApcClassLoader which uses composition instead of inheriting from a class loader, which makes it far more easier to reuse (we could wrap a Composer autoloader with it for instance). ```php <?php $composerLoader = require __DIR__.'/vendor/.composer/autoload.php'; // no need to require the file manually as Composer already registered its autoloader $cachedLoader = new Symfony\Component\ClassLoader\ApcClassLoader('autoload.my_app', $composerLoader); $cachedLoader->register(); // unregister the Composer autoloader as we wrapped it in the ApcClassLoader $composerLoader->unregister(); ``` TODO: - refactor the Debug class loader to use composition too to be able to support different class loaders --------------------------------------------------------------------------- by fabpot at 2012-04-02T16:31:28Z Can you update the CHANGELOG and the UPGRADE file accordingly? --------------------------------------------------------------------------- by stof at 2012-04-02T16:47:43Z I added a note in the CHANGELOG. There is nothing to add in the UPGRADE file as the change is fully BC (I did not change the UniversalClassLoader at all so it can still be used). I'm working on the Debug loader right now so please wait a bit before merging --------------------------------------------------------------------------- by stof at 2012-04-02T17:12:11Z Here is a new DebugClassLoader using composition too. this way, it is able to support the UniversalClassLoader, the ApcUniversalClassLoader (without dropping the use of APC as done previously), the new ClassLoader, the new ApcClassLoader and even the composer autoloader. I'm not sure about the use of ``method_exists`` as it could break if an autoloader implements a protected ``findFile`` method (crappy PHP :cry:) but hardcoding the supported classes would be a pain and requiring an interface would make the autoloaders more difficult to use (as the interface would need to be required first) and would drop the support of the composer autoloader.",PHP
yay,Python
"Users can now login, yay next step remote systems, happy days",JavaScript
"Changes to Materials Request functionality for DCL: 1) allow substitution of things like title, author, and patron name into the email templates to be sent out. 2) For magazine/newspaper articles could you add a box for “Number” as some journals have volume and number for their publications. Also add an * by the Date field for articles requests. 3) If user is a nonresident they should be stopped before they enter any information 4) Provide log in error message if library card number or PIN are incorrect/not valid. Currently, nothing happens. 5) Include non-resident info on first screen, and if possible deny non-residents access to form. Currently, non-residents can complete form and only receive the “Sorry…” message after submitting. 6) Change default on “Place a hold for me…” from No to Yes 7) Write out “Interlibrary Loan” rather than using “ILL” abbreviation 8) Offer log in option on “Track My Materials Requests” page rather than the message “You must be logged in to view your requests.""",PHP
yay,Ruby
"proud of ""drag and drop"" !",Ruby
yes! at least something,C
"Yay, first Xero authenticated request to a private resource",JavaScript
"yay, now you can upload certificates",JavaScript
"Cleaning up after the kids as well as making sure tppos teleports you to a loaded chunk. Tested all the way up to 30m by 100 by 30m (yes I said 30 million, anymore and Spoutcraft dies). Signed-off-by: Chris Sanders <NinjaZidane@hotmail.com>",Java
TODO list completed yay,Ruby
Added start=yes to defaults file,Ruby
"[zshrc] using good indentation Yes, it means hard tabs!",VimL
"[sawfish] Execute commands using `system' plus some semi related changes This commit replaces the use of `start-process' with calling `system'. The reason to do that is because librep kills all running processes as it terminates. This means that on Sawfish restart, all applications started from Sawfish are killed. By using `system' I can consistently add an ampersand to the end of each command so that a double fork with the middle process termination is performed so that the command can continue even when librep exits. This actually simplifies things as there is no longer need to specify commands as lists but rather as a single string. The benefit of the former were not used at all in the configuration file, so there's no need to worry about thouse. To make that change, `mn-exec-unless' function has been renamed to `mn-run-unless' and a new `mn-run' function has been added which calls `system' and runs command. In the meantime fewer other changes has been performed: A new W-Enter binding has been added to windows which pops window operations menu. This is nice since on my configuration of Kinesis keyboard, W-Enter is easy to press with just the left hand. The W-Button3-Click binding on the root window has ben changed to Button3-Click. The need to press win key was just a nuisance. The root menu has been mistake-proofed. Each option (other then “Customize”) pops a sub-menu with a single “Yes” option. This means that pressing one of the top level options by mistake won't kill Sawfish and everything else. XF86Audio* bindings has been removed since I no longer use a keyboard which has multimedia keys (and in fact never used them anyway). The W-l binding runs ""xlocker"" rather then locking xscreensaver. The idea is for ""xlocker"" command be a script in ~/bin which calls xlock. This change is because I've stopped using xscreensaver in favour of xlock.",Emacs Lisp
"got working, yay",C
yes gogogogog,Ruby
"0.1.5 : + Texts now possess a Depth. + Text creation and rendering has been re-done. They now use their own projection matrix (not dependant on cam pan or zoom), instead of being created with absolute positionning depending on window size. NO MORE ARTEFACTS!!! yay! ? To respect the new proj matrix, there is no more UseProjectionMatrix in the JSON files defining a shader. It has been replaced by a ProjectionMatrixType (0 for none, 1 for CameraProj, 2 for Gui2Dproj). ? Game window cant be resized anymore. ~ Fixed texts, which destroyed and allocated themselves everytime their string was changed. They now use the correct reallocation function. This bug made the memory manager saturate with constant free and alloc. ~ Fixed dynamic meshes, which had the same problem when their data was modified. They now use the realloc function properly.",C
yay,Java
The AI is working. Hurray,Haskell
"Dani's work involved no enhancement, yes? (Cool.) I see the need for Dirichlet b.c.s (i.e. in no_model strip) for enthalpy,SSA. Others?",C++
"Merge pull request #593 from Talvalin/issue_2492_gift_exchange_def Yay, looks great! One tip: it's helpful if you include the Google Code url for the issue in your pullreq description. Fix for issue 2492 - Tidy up code for gift_exchange and prompt_meme definitions",Ruby
"Remove USE_X11=yes, so that rrdtool (and thus xymon) can be installed on servers that don't use X. Ok'd by jakllsch@",C
"Fix type in README it should be prompt not confirm. For the storing data associated to a client example, it requires data to be sent, with confirm, it only brings up a yes or no dialog. But it requires data, so prompt is the correct function to call instead.",JavaScript
"Various changes to the Dismiss Unit prompt * Gave the dialog a title * Hardcoded trailing blanks previous found in translatable strings * Removed 'excited' exclamation marks from UI strings * Removed the silly ""My lord"" at the start; merits no further explanation git-svn-id: http://svn.gna.org/svn/wesnoth/trunk@53997 75b3775d-3801-0410-9e12-e2e43121521d",C++
Correction to forms.py. Apparently I got overly excited in a50f3307 (the initial transfer) and renamed the PROJECT_ROOT setting. In one place.,Python
"Stop being paranoid, yes, these dotfiles ARE meant to be published.",VimL
Your own place for web fonts. Yay\!,PHP
commit - yes,Objective-C
Add yes/no radioselect git-svn-id: https://svn.eionet.europa.eu/repositories/Naaya/trunk/eggs@18817 a0171fae-0946-0410-966d-b1775066cd26,Python
add bingo.lang.New class to create common instances,Java
YUI in python. yes please. -Dx,Python
ForumPP: add again=yes to urls in sms,PHP
"Commit before the presentation by Per, revert to this if errors before... yes yes",CoffeeScript
yay! binary bodies in frames!,C++
"Fix alphabetization of OME-XML primitive imports Yes, there are more important things to be working on now, thank you for asking. This was _really_ _bothering_ me.",Java
"merged branch proofek/fix-process-exception (PR #4111) Commits ------- 1c03a16 [Process] Fixed ProcessFailedException not populating exception message due to a missing sprintf parameter Discussion ---------- [Process] Fixed ProcessFailedException not populating exception message ... ...due to a missing sprintf parameter Bug fix: yes Feature addition: no Backwards compatibility break: no Symfony2 tests pass: http://travis-ci.org/#!/proofek/symfony/builds/1172817 Fixes the following tickets: - Todo: - Found the issue when started using Cilex with Process and raised an exception using ProcessFailedException. Not sure whether this will get into the main release, as I couldn't find that on 2.0 branch, so I am guessing it's quite a recent addition to Process component.",PHP
"merged branch proofek/fix-process-exception (PR #4111) Commits ------- 1c03a16 [Process] Fixed ProcessFailedException not populating exception message due to a missing sprintf parameter Discussion ---------- [Process] Fixed ProcessFailedException not populating exception message ... ...due to a missing sprintf parameter Bug fix: yes Feature addition: no Backwards compatibility break: no Symfony2 tests pass: http://travis-ci.org/#!/proofek/symfony/builds/1172817 Fixes the following tickets: - Todo: - Found the issue when started using Cilex with Process and raised an exception using ProcessFailedException. Not sure whether this will get into the main release, as I couldn't find that on 2.0 branch, so I am guessing it's quite a recent addition to Process component.",PHP
yay,Python
yes/,Shell
fixes for <syntax block=yes> case,Python
"Yes, ;gcc --version' is as stupidly formatted as I expected *sigh* avoid it!",Perl
fixes for <syntax block=yes> case,Python
fixes for default output in <syntax block=yes> case,Python
Add the log.py file...yay,Python
add conditional space before braces in <syntax block=yes> case,Python
"works, yay!",Perl
Yay! Got number 9 working!,JavaScript
All counterexamples are fixed. YAY!,Coq
"Centering the output As a side note, mongrel (1.1.5) and mongrel_cluster (1.0.5) Don't play nice with rails 2.3.11. Yes I'm dealing in ancient stuff. Lern2like it.",Ruby
yay oh-my-zsh as a submodule,VimL
yay updated oh-my-zsh,VimL
"merged branch drak/sessionmeta (PR #3718) Commits ------- 8a0e6d2 [HttpFoundation] Update changelog. 4fc04fa [HttpFoundation] Renamed MetaBag to MetadataBag 2f03b31 [HttpFoundation] Added the ability to change the session cookie lifetime on migrate(). 39141e8 [HttpFoundation] Add ability to force the lifetime (allows update of session cookie expiry-time) ec3f88f [HttpFoundation] Add methods to interface 402254c [HttpFoundation] Changed meta-data responsibility to SessionStorageInterface d9fd14f [HttpFoundation] Refactored for moved tests location. 29bd787 [HttpFoundation] Added some basic meta-data to Session Discussion ---------- [2.1][HttpFoundation] Added some basic meta-data to Session Bug fix: no Feature addition: yes Backwards compatibility break: no Symfony2 tests pass: yes References the following tickets: #2171 Todo: - Session data is stored as an encoded string against a single id. If we want to store meta-data about the session, that data has to be stored as part of the session data to ensure the meta-data can persist using any session save handler. This patch makes it much easier to determine the logic of session expiration. In general a session expiry can be dealt with by the gc handlers, however, in some applications more specific expiry rules might be required. Session expiry may also be more complex than a simple, session was idle for x seconds. For example, in Zikula there are three security settings, Low, Medium and High. The rules for session expiry are more complex as under the Medium setting, a session will expire after x minutes idle time, unless the rememberme option was ticked on login. If so, the session will not idle. This gives the user some control over their experience. Under the high security setting, then there is no option, sessions will expire after the idle time is reached and login the UI has the rememberme checkbox removed. The other advantage is that under this methodology, there can be a UI experience on expiry, like ""Sorry, your session expired due to being idle for 10 minutes"". Keeping in the spirit of Symfony2 Components, I am seeking to make session handling flexible enough to accommodate these general requirements without specifically covering expiration rules. It would mean that it would be up to the implementing application to specifcally check and expire session after starting it. Expiration might look something like this: $session->start(); if (time() - $session->getMetadataBag()->getLastUpdate() > $maxIdleTime) { $session->invalidate(); throw new SessionExpired(); } This commit also brings the ability to change the `cookie_lifetime` when migrating a session. This means one could move from a default of browser only session cookie to long-lived cookie when changing from a anonymous to a logged in user for example. $session->migrate($destroy, $lifetime); --------------------------------------------------------------------------- by drak at 2012-03-30T18:18:43Z @fabpot I have removed [WIP] status. --------------------------------------------------------------------------- by drak at 2012-03-31T13:34:57Z NB: This PR has been rebased and the tests relocated as per recent master changes. --------------------------------------------------------------------------- by drak at 2012-04-03T02:16:43Z @fabpot - ping",PHP
"merged branch drak/sessionmeta (PR #3718) Commits ------- 8a0e6d2 [HttpFoundation] Update changelog. 4fc04fa [HttpFoundation] Renamed MetaBag to MetadataBag 2f03b31 [HttpFoundation] Added the ability to change the session cookie lifetime on migrate(). 39141e8 [HttpFoundation] Add ability to force the lifetime (allows update of session cookie expiry-time) ec3f88f [HttpFoundation] Add methods to interface 402254c [HttpFoundation] Changed meta-data responsibility to SessionStorageInterface d9fd14f [HttpFoundation] Refactored for moved tests location. 29bd787 [HttpFoundation] Added some basic meta-data to Session Discussion ---------- [2.1][HttpFoundation] Added some basic meta-data to Session Bug fix: no Feature addition: yes Backwards compatibility break: no Symfony2 tests pass: yes References the following tickets: #2171 Todo: - Session data is stored as an encoded string against a single id. If we want to store meta-data about the session, that data has to be stored as part of the session data to ensure the meta-data can persist using any session save handler. This patch makes it much easier to determine the logic of session expiration. In general a session expiry can be dealt with by the gc handlers, however, in some applications more specific expiry rules might be required. Session expiry may also be more complex than a simple, session was idle for x seconds. For example, in Zikula there are three security settings, Low, Medium and High. The rules for session expiry are more complex as under the Medium setting, a session will expire after x minutes idle time, unless the rememberme option was ticked on login. If so, the session will not idle. This gives the user some control over their experience. Under the high security setting, then there is no option, sessions will expire after the idle time is reached and login the UI has the rememberme checkbox removed. The other advantage is that under this methodology, there can be a UI experience on expiry, like ""Sorry, your session expired due to being idle for 10 minutes"". Keeping in the spirit of Symfony2 Components, I am seeking to make session handling flexible enough to accommodate these general requirements without specifically covering expiration rules. It would mean that it would be up to the implementing application to specifcally check and expire session after starting it. Expiration might look something like this: $session->start(); if (time() - $session->getMetadataBag()->getLastUpdate() > $maxIdleTime) { $session->invalidate(); throw new SessionExpired(); } This commit also brings the ability to change the `cookie_lifetime` when migrating a session. This means one could move from a default of browser only session cookie to long-lived cookie when changing from a anonymous to a logged in user for example. $session->migrate($destroy, $lifetime); --------------------------------------------------------------------------- by drak at 2012-03-30T18:18:43Z @fabpot I have removed [WIP] status. --------------------------------------------------------------------------- by drak at 2012-03-31T13:34:57Z NB: This PR has been rebased and the tests relocated as per recent master changes. --------------------------------------------------------------------------- by drak at 2012-04-03T02:16:43Z @fabpot - ping",PHP
Fixed compilation errors Now it compiles! Yay!,C
"Merge branch 'drm-prime-dmabuf-initial' of git://people.freedesktop.org/~airlied/linux Pull dma-buf prime support from Dave Airlie: ""This isn't a majorly urgent thing to have, but we'd like to set the stage for working on dma-buf support in the drm drivers for the next merge window, so I'd like to push in the initial submission now so people have something that we can build on top of. The code just introduces the user interface and internal helper functions for drivers to use. We have driver support under development for i915, nouveau, udl on x86 and exynos, omapdrm on arm, which we would be aiming for the next merge window."" In the -rc1 announcement I asked for people who would use this to comment on it, and got severa ""Yes please"" from people for this and for HSI (that I merged earlier). So far crickets on pohmelfs and the DMA-mapping infrastructure. * 'drm-prime-dmabuf-initial' of git://people.freedesktop.org/~airlied/linux: drm: base prime/dma-buf support (v5)",C
"ripped old wireless/wap support (yes, there will be a modern mobile theme)",PHP
merged branch hhamon/form_extension_typo_fix (PR #3138) Commits ------- d0da2f9 [Bridge] [Twig] fixed typo in a comment of the Twig FormExtension extension. Discussion ---------- [Bridge] [Twig] fixed typo in a comment of the Twig FormExtension extension Bug fix: no Feature addition: no Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: - Todo: -,PHP
"Yes, website generation now FULLY OPERATIONAL.",Ruby
typo in Response. Sessions should be set and committed properly now. Yay!,PHP
"Make every person detail nullable. Yes, including name. Technically Core (at present) will always return at least the empty string for a name, but as it has no hard requirement that people have names, I'm going to leave the schema open.",JavaScript
little bit more darken bg. yes I am an addict,Ruby
More progress hurray,Objective-C
"re-binds auth to account manager, hide the debugging, and precariously using the session tracking right now to unify the account id experimentially... also allows facebook to work too YAY",JavaScript
100% coverage for lib/api.js. Yes.,JavaScript
"[v2] don't keep racy addr in a register for too long, use the shadow memory address when reporting a race. The last push/pop is killed. Yay git-svn-id: http://data-race-test.googlecode.com/svn/trunk@4155 93a3164d-3a44-0410-8ae5-4baa038b0729",C++
"Merge pull request #8 from RsrchBoy/topic/nitpicks great catch, I'm glad to get so many documentation patches. --John",Perl
Adding Pkmn! YAY!,Python
"Cleaned up eye.runner module. The actual grabbing of files, and then creating a proper list is a HECK of a lot cleaner now. Added the ForeignFunctionError and ModuleError to the eye.utility module. I will most likely rename ModuleError to something else. Updated eye.suite module to throw ForeignFunctionErrors if the DEFINITE required functions are not available. I still need to update/modify the eye.test module so that if the function call fails, it simply marks the test as a failure with the reason of the function not existing. I'm also going to have to handle when the Suite exceptions are thrown. I've also left a few notes for whenever python 3.3 comes out. Really excited for the `yield from` and `raise <exception> from None` syntax. It'll probably make throwing exceptions up a chain easier for library issues :P.",Python
"Updating README Yes, again.",JavaScript
"Immutibility Goes a long way Yes, It does, Especially in the new JMM",Java
i added a comment yay,C
i decided that the comment was pointless yay,C
"refs #410: migrate more templates, drop obsolete controller (yay!)",PHP
"first cut at a little explicit html to ""decorate"" the backup for local browsing * single image, paged-index, and index-line are each str.format() html files (yes, they'd probably be cleaner in jinja or something but then I have to *pick* one) * paged indices are kind of wrong, but I only have four pix backed up and don't know what the data.pagination looks like when it isn't empty * cheesy caching of the (first) page so I can spin this without hitting the website * stash all of the metadata in date-title.json, alongside the .jpg * stash the html, but replace spaces with dashes to avoid %20 quoting lots of work remains, if I actually keep *using* this, but I wanted something browsable now...",Python
"No more segfaults! Hurray. In addition, relative addreses resolved.",C
"merged branch drak/caed (PR #3783) Commits ------- d04638a [EventDispatcher] More logical positions for classes. Discussion ---------- [EventDispatcher] More logical positions for classes. Bug fix: no Feature addition: no Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: - Todo: - --------------------------------------------------------------------------- by stof at 2012-04-04T18:59:02Z ah sorry, I looked at the patch too fast. Only the interface is moved",PHP
"merged branch drak/caed (PR #3783) Commits ------- d04638a [EventDispatcher] More logical positions for classes. Discussion ---------- [EventDispatcher] More logical positions for classes. Bug fix: no Feature addition: no Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: - Todo: - --------------------------------------------------------------------------- by stof at 2012-04-04T18:59:02Z ah sorry, I looked at the patch too fast. Only the interface is moved",PHP
Moved CRS for google from 3785 (wrong) to 3857 (right). Now everything lines up. Hurray.,Scala
[bluray] Delete support for older libbluray xbmc will abort configure if an old libbluray is found and configure is auto or yes. To skip libbluray support in that case explicitly disable it.,C
"Added useTrimmedFrameForAnchorPoint property to CCSprite. When set to YES this property makes the trimmed frame the frame of reference for the contentSize and the anchorPoint. When using trimmed frames with different offsets and same original sizes, the anchor point will be off. Or when using different trimmed frames with different offsets. This is useful for animations that use the trimmed frame as frame of reference for transformations or expect the anchor point to remain the same between frames with different offsets. To test the new behavior, I've included two new sprite tests.",Objective-C
yay. bullets.,Clojure
we we we so excited,JavaScript
"Micro optimizations to set/get/delitem Yes I did benchmark this (scripts/benchmark), yes it was faster, and yes it was by a fairly small amount.",Python
"Store a hash of the API key (hash of a hash, yay) and move the SHA256 object around. This way if the database ever gets compromised, the API keys are still secure and hashed. The attacker won't be able to hit up the API on behalf of a user just by having the DB-representation of the key. This also moves SHA256.hash() into an 'objects' package so that it's available from controllers and the User model.",Scala
266% Faster yay,Haskell
"Why am I touching this again? Sidebar yay, also fixed up the RPG layout for no reason",PHP
Remove double initialization of spacecraft This was causing weird behaviors with duplicated PLobjects. Issue fixed which means that simulator now runs again. Yay!!! :),C
"realised functions are good, need to add evaluation function, but the logic makes a lot more sense now yay =-)",Python
Made laptop stickers stick around. yay --HG-- branch : modulebrowser,JavaScript
Fixed bug in permutation concatamer generation; now master will properly generate structures. yay,Python
YES,JavaScript
Added (simple) ADC login sequence + chat command Yay! Globster can now be used for sending spam messages to a hub!,Go
merged branch eriksencosta/locale-fixes-2.0 (PR #3947) Commits ------- b1ea552 [Locale] micro-optimization 663d218 [Locale] changed method name bb61e09 [Locale] use the correct way for Intl error Discussion ---------- [2.0][Locale] rebased PR 3765 plus few changes Bug fix: yes Feature addition: no Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: - Todo: - #3765 was right but was made in master. Cherry-picked and rebased for 2.0. Tests are passing.,PHP
Implement dashrep-yes-indicate-line-endings option,Perl
super makefile now! Yay!,Puppet
Fuck yes. Bundle the shit to one versionable file. * Update to new chaplin. * Bundle the whole thing into one file. * Remove example application.,CoffeeScript
Merge pull request #1 from hidetomo/master Case Sensitiveness (Thank you for sending me a sample pull request. I'm glad to take it in my repo ),JavaScript
YES BABY :D,PHP
yes workz,Java
"javascript-driven mustache-based dashboard widgets, yay!",JavaScript
"! Removed :arglist from everything except :op_asgn1. cleaned up a lot of formatting because it is so much cleaner! yay! [git-p4: depot-paths = ""//src/sexp_processor/dev/"": change = 7341]",Ruby
"Fixed short reading, yay! (little/big endian herp a derp) Signed-off-by: Ed Hanton <edh649@gmail.com>",C#
"Removed data method storage of CW.. now appends to DOM. Why? The .data() method was proving far too verbose and unwieldy in practice. Purer yes, but less useful.",CoffeeScript
"Fix user provisioning (again) - Set ""password last changed"" field - Only change password if 'changepw' is ""yes"" Where applicable, these changes were made to res_group as well.",C
ASSIGNMENT 4 DONE!!!!!!!!!!!!!!YES!!!!!!!!!!!!!!!!!!!!!!!!,Objective-C
force yes,Ruby
Adding PrivateTmp=yes to the cobblerd.service file for systemd,Python
"Because test.ogg did not exist, timidity was failing to boot and then all of the tests were failing. I'm glad that's fixed.",Python
its parsing collectd packets correctly now yay!,Clojure
Yay! Javascripts!,JavaScript
"Yay, whitespace",PHP
yes,JavaScript
Finished the Kosaragu algorithm. Yay!,C
Backend saves pages now. Yay.,JavaScript
"we probably want entitlements on initially, yes?",Objective-C
"split off ScriptedEntity from CustomEnemy this is a huge one. it probably breaks enemies completely, but it's the first step to scripted entities. extracted a bunch of the enemy api into a separate entity api, to leave only actually enemy-relevant stuff (like life) behind. yay I implemented a snoring sprite without npc!",C++
"Made core::pair<K, V> even easier to read. So, I had forgotten that as long as make<T> op make<U> worked, that the existence of a given function would be valid. So I was able to remove the std::is_same<key_type, K>::value calls everywhere, and simply use the operators::<op> that I had written. Unsurprisingly nothing changed, except that if a pair of type pair<int, int> is compared to a pair<float, float> it will perform the operation as if you were comparing float <op> int for each key/value. Man, this made me so excited. I was worried everything was going to become this giant pit of mud if I went down the 'graceful fallback' route.",C++
"Adding in a target for building a static library version. - New Target For Static Library - Expose Headers with Target Membership to public - In Build Settings, set Installation Directory to $(BUILT_PRODUCTS_DIR) - In Build Settings, set Skip Install to YES - In Build Settings, set Public Headers Folder Path to $(TARGET_NAME)",Objective-C
"Merge branch 'drm-fixes' of git://people.freedesktop.org/~airlied/linux Pull the intel i915 hibernation memory corruption fix from Dave Airlie: ""I tracked down the misc memory corruption after i915 hibernate to the blinking fbcon cursor, and realised the i915 driver wasn't doing the fbdev suspend/resume calls at all. nouveau and radeon have done these calls for a long time. This has been fairly well tested and is definitely the main culprit in hibernate not working."" Yay. * 'drm-fixes' of git://people.freedesktop.org/~airlied/linux: drm/i915: suspend fbdev device around suspend/hibernate",C
"Hopefully, this should finally fix windows compilation. Additionally, we no longer need cmake for Box2D - yay :-)",C
Fixed #43 Made the dropdown menu positioned via pure css instead of using javascript to constantly adjust its position. YAY PERFORMANCE!,JavaScript
"ANSI color codes for fun and profit Yes, we'll probably remove them in the next commit",Ruby
Fixed #43 Made the dropdown menu positioned via pure css instead of using javascript to constantly adjust its position. YAY PERFORMANCE! Signed-off-by: Igor Vaynberg <igor.vaynberg@gmail.com>,JavaScript
"Yay! Got appointments and scheduling working together, I believe. Appointments have to be at a valid time for a phys, and can't overlap with each other. Now I need some way to view available times...",Ruby
- Added console-interactive (yes!) fix_encoding method to gradually get rid of the bad 1255 encoding files.,Ruby
"vim bundle update night, yay powerline!",VimL
yay,Java
yay,Java
"Merge pull request #593 from Talvalin/issue_2492_gift_exchange_def Yay, looks great! One tip: it's helpful if you include the Google Code url for the issue in your pullreq description. Fix for issue 2492 - Tidy up code for gift_exchange and prompt_meme definitions",Ruby
yay! OSX pasteboard integration,Haskell
Imports working for modules in shell! yay,Java
"[sawfish] Execute commands using `system' plus some semi related changes This commit replaces the use of `start-process' with calling `system'. The reason to do that is because librep kills all running processes as it terminates. This means that on Sawfish restart, all applications started from Sawfish are killed. By using `system' I can consistently add an ampersand to the end of each command so that a double fork with the middle process termination is performed so that the command can continue even when librep exits. This actually simplifies things as there is no longer need to specify commands as lists but rather as a single string. The benefit of the former were not used at all in the configuration file, so there's no need to worry about thouse. To make that change, `mn-exec-unless' function has been renamed to `mn-run-unless' and a new `mn-run' function has been added which calls `system' and runs command. In the meantime fewer other changes has been performed: A new W-Enter binding has been added to windows which pops window operations menu. This is nice since on my configuration of Kinesis keyboard, W-Enter is easy to press with just the left hand. The W-Button3-Click binding on the root window has ben changed to Button3-Click. The need to press win key was just a nuisance. The root menu has been mistake-proofed. Each option (other then “Customize”) pops a sub-menu with a single “Yes” option. This means that pressing one of the top level options by mistake won't kill Sawfish and everything else. XF86Audio* bindings has been removed since I no longer use a keyboard which has multimedia keys (and in fact never used them anyway). The W-l binding runs ""xlocker"" rather then locking xscreensaver. The idea is for ""xlocker"" command be a script in ~/bin which calls xlock. This change is because I've stopped using xscreensaver in favour of xlock.",Emacs Lisp
dont let user close message until they do action and making yes/no bigger,ActionScript
adding yes option otherwise it gets stuck on the prompt,Shell
"Add another yes. Add link back to the yes template, to fill out the head section a bit.",CoffeeScript
"this project has now a working title: Virginia. 'Yes, Virginia, it can schedule all your data'",Java
cmake: bingo cpack and python build script in progress,C
YAY!,Java
"config based fonts on axis labels, yay",JavaScript
"SI-5690: no-selector match in function yields function the implicit beta-reduction performed by typedFunction on a Function(.., Match(EmptyTree, ...)) must of course only be done when the selector actually is empty... (yes, typedMatchAnonFun needs to be cleaned up, I know)",Scala
Getting the latest tweet now works. Yay!,Python
"SI-5690: no-selector match in function yields function the implicit beta-reduction performed by typedFunction on a Function(.., Match(EmptyTree, ...)) must of course only be done when the selector actually is empty... (yes, typedMatchAnonFun needs to be cleaned up, I know)",Scala
"Template file for generating complex curves using bc and fig4tex added Here is how this template file will be used when complex curves need to be drawn 1. The plot() and end_drawing() methods will be edited 2. bc -l figure.bc > figure.tex command issued 3. Copy-paste contents of figure.tex at the appropriate place in question.tex Yes, (3) implies manual intervention. But still, using bc generates a lot of the fig4tex code that one would otherwise have to write manually. Compared to that, copying and pasting is a piece of cake",Shell
Gradienter fikset - yay,Matlab
missed a small bug in the argument handler hurray for unit tests,C#
Fixed an overflow bug. Yes its not a clean commit. Working on being a better public git repo user.....,Java
YAY,Scala
Merge pull request #1 from Ronnie76er/new-branch YAY,Scala
File rename yay,Matlab
Deleted stale QUnit tests and my attempt at a test visualization suite (for now). Replaced with BDD style unit tests using Mocha+Chai. Lots more tests to add. The finished code sits waiting for the tests to be written first. Confusing? Yes.,JavaScript
"Start the stack pointer at the last byte of ram, not one byte after. This effectively reverts commit ec761a3e37e51f8c9cf3698be37cbfdfa1943b16. Yes, we don't clear the last byte of RAM, but this isn't a problem because the stack just writes over it on the first rcall anyway. Meanwhile, I'm not quite sure how it was working since then.",Assembly
I've done it again. Pat me on my back. Fuckin yay.,PHP
"merged branch bschussek/issue3994 (PR #4046) Commits ------- 246c885 [Form] Fixed: Default value of 'error_bubbling' is now determined by the 'single_control' option d3bb4d0 [Form] Renamed option 'primitive' to 'single_control' 167e64f [Form] Fixed: Field attributes are not rendered in the label anymore. Label attributes are now passed in ""label_attr"" 68018a1 [Form] Dropped useless test that is guaranteed by OptionsParser tests and that needs to be adapted very often 649752c [Form] Fixed: CSRF token was not displayed on empty complex forms c623fcf [Form] Fixed: CSRF protection did not run if token was missing eb75ab1 [Form] Fixed results of the FieldType+FormType merge. Discussion ---------- [Form] Fixed errors introduced in the FieldType+FormType merge Bug fix: yes Feature addition: no Backwards compatibility break: yes Symfony2 tests pass: yes Fixes the following tickets: #3994, #4000, #2294, #4118 Todo: - ![Travis Build Status](https://secure.travis-ci.org/bschussek/symfony.png?branch=issue3994) --------------------------------------------------------------------------- by Tobion at 2012-04-22T15:39:20Z `primitive` is a pretty abstract option name. It depends on the person what he considers primitive. Maybe more explicit naming or better documentation what it means. --------------------------------------------------------------------------- by bschussek at 2012-04-22T15:47:29Z Better suggestions? The distinction here is between primitive and complex forms, where primitive forms are such forms that can be represented by a single HTML tag. This obviously needs to be documented. --------------------------------------------------------------------------- by Tobion at 2012-04-22T15:49:45Z Maybe `single_widget` or something like that. --------------------------------------------------------------------------- by vicb at 2012-04-23T13:09:43Z @Tobion @bschussek would `elementary` be better than `primitive` ? --------------------------------------------------------------------------- by vicb at 2012-04-23T13:17:04Z and `compound \ composite` better than `complex` ? --------------------------------------------------------------------------- by bschussek at 2012-04-23T14:08:33Z @vicb I fail to see how elementary/compound is easier to understand than primitive/complex. Maybe single_widget, but what's the opposite of this case? multi_widget? --------------------------------------------------------------------------- by vicb at 2012-04-23T14:15:09Z Actually I am fine with anything... as long as it is documented. --------------------------------------------------------------------------- by bschussek at 2012-04-23T14:22:31Z Still I think that this unveals a more profound naming problem. How do we (also in the documentation) name forms with children (formerly ""forms"") and forms without children (formerly ""fields"")? Should we refer to them as * forms and fields? * complex and primitive forms? * ... We must first answer this question before we can find an intuitive option name. If the documentation always switches between different terminologies, neither will it be understandable nor will this option be easy to remember. --------------------------------------------------------------------------- by vicb at 2012-04-23T15:10:32Z > Still I think that this unveals a more profound naming problem. How do we (also in the documentation) name forms with children (formerly ""forms"") and forms without children (formerly ""fields"")? To make it clear, I would rather say forms that **can have** children and forms that **can not have** children (i.e. Empty collections have no children but they can have and this is reason why you have to introduce those options, right ? - that could be a good example for the doc). It will probably be better to refer to ""complex"" / ""primitive"" forms in the doc (and use the ""form"" / ""field"" terms to explain them). Note: I think @Tobion concern is that ""primitive"" / ""complex"" could be pejorative terms (this is why I have proposed ""elementary"" / ""compound""). --------------------------------------------------------------------------- by Tobion at 2012-04-23T16:00:54Z 1. primitive/complex is subjective (and could be pejorative too) 2. elementary/compound is more explicit so probably better than primitive/complex 3. I dislike this option in general. Does it make sense to change this option from a user perspective? I guess it's always the same as long as the widget structure stays the same. So it should be resolved at a higher level dynamically from the widget structure and not exposed to any configuration. 4. In documentation I would use the terms forms and fields. Because all people with HTML knowledge will understand that fields cannot have sub-fields whereas forms can. But since this distinction is not findable in code, it should be mentioned that all these are implemented as a form hierarchy. --------------------------------------------------------------------------- by mvrhov at 2012-04-23T16:02:00Z how about simple and complex? --------------------------------------------------------------------------- by bschussek at 2012-04-23T16:06:33Z @Tobion It does not make sense to change this option from the user perspective, still the overloading type has to propagate to FormType whether it is a form or a field, so that the default behaviour is correct. A second option how to implement this is to add a method `isField` to FormTypeInterface that can be overloaded and receives the options. I don't really like to introduce new methods here unless absolutely required. What about renaming the option ""primitive"" to ""is_field""? The blocks in the template would then be named ""form_widget_field"" and ""form_widget_form"". --------------------------------------------------------------------------- by tristanbes at 2012-04-25T14:01:06Z Oh, I should've seen this before, i thought I was doing something wrong. (empty collections gets an input field bug) Please big :UP: on this. When will it be merged ? @bschussek --------------------------------------------------------------------------- by Tobion at 2012-04-25T15:30:28Z +1 for ""is_field"" and ""form_widget_field"" but I would rather use ""form_widget_compound"" instead of ""form_widget_form"" which is quite strange. --------------------------------------------------------------------------- by bschussek at 2012-04-26T16:34:04Z @Tobion ""simple"" and ""compound"" then? --------------------------------------------------------------------------- by Tobion at 2012-04-26T16:49:58Z no ""field"" and ""compound"" --------------------------------------------------------------------------- by bschussek at 2012-04-26T17:17:02Z I don't like ""field"" for a simple reason: Consider the ""date"" type. We are typically speaking of the ""date"" field there. But technically, the ""date"" field is a compound field. So? --------------------------------------------------------------------------- by Tobion at 2012-04-26T21:17:37Z I don't understand the open question. You proposed ""is_field"" and ""form_widget_field"" yourself. So calling the template block ""form_widget_field"" is a comprehensible consequence of ""is_field"". I wouldn't call the date type with multiple inputs a field. --------------------------------------------------------------------------- by tristanbes at 2012-04-26T21:52:39Z We should take a decision cause right here i got all my forms that are broken because of the empty collection rendering as input field :-). I guess we are many in that situation. --------------------------------------------------------------------------- by bschussek at 2012-04-27T08:28:16Z I renamed ""primitive"" to ""single_control"" now to match with the HTML specification which names all input elements (input, select etc.) ""controls"". The opposite is now ""compound"". Meanwhile, I added a fix for #4118. @fabpot This is ready for merge now. --------------------------------------------------------------------------- by Tobion at 2012-04-27T10:22:49Z Hm, I know naming things is hard and sometimes not really important. But since users need to know which block to override, it is essential to make it clear. I think there is still one issue. The block is named `form_widget_single_control` in order, as you said, to abstract away if it's an input, select etc. But in fact it can only render `input` and nothing else. So this is misleading. So you could also simply name it `form_widget_input`. Apart from that I agree with everything.",PHP
"Add build_macros.xml to source distribution. Change handling of use.bcel so it actually works, we only use the bcel library if it's available and the property use.bcel has been set to something ant evaluates to true (true, yes, on). git-svn-id: https://igv.googlecode.com/svn/trunk@2402 17392f64-ead8-4cea-ae29-09b3ab513800",Java
"merged branch bschussek/issue3994 (PR #4046) Commits ------- 246c885 [Form] Fixed: Default value of 'error_bubbling' is now determined by the 'single_control' option d3bb4d0 [Form] Renamed option 'primitive' to 'single_control' 167e64f [Form] Fixed: Field attributes are not rendered in the label anymore. Label attributes are now passed in ""label_attr"" 68018a1 [Form] Dropped useless test that is guaranteed by OptionsParser tests and that needs to be adapted very often 649752c [Form] Fixed: CSRF token was not displayed on empty complex forms c623fcf [Form] Fixed: CSRF protection did not run if token was missing eb75ab1 [Form] Fixed results of the FieldType+FormType merge. Discussion ---------- [Form] Fixed errors introduced in the FieldType+FormType merge Bug fix: yes Feature addition: no Backwards compatibility break: yes Symfony2 tests pass: yes Fixes the following tickets: #3994, #4000, #2294, #4118 Todo: - ![Travis Build Status](https://secure.travis-ci.org/bschussek/symfony.png?branch=issue3994) --------------------------------------------------------------------------- by Tobion at 2012-04-22T15:39:20Z `primitive` is a pretty abstract option name. It depends on the person what he considers primitive. Maybe more explicit naming or better documentation what it means. --------------------------------------------------------------------------- by bschussek at 2012-04-22T15:47:29Z Better suggestions? The distinction here is between primitive and complex forms, where primitive forms are such forms that can be represented by a single HTML tag. This obviously needs to be documented. --------------------------------------------------------------------------- by Tobion at 2012-04-22T15:49:45Z Maybe `single_widget` or something like that. --------------------------------------------------------------------------- by vicb at 2012-04-23T13:09:43Z @Tobion @bschussek would `elementary` be better than `primitive` ? --------------------------------------------------------------------------- by vicb at 2012-04-23T13:17:04Z and `compound \ composite` better than `complex` ? --------------------------------------------------------------------------- by bschussek at 2012-04-23T14:08:33Z @vicb I fail to see how elementary/compound is easier to understand than primitive/complex. Maybe single_widget, but what's the opposite of this case? multi_widget? --------------------------------------------------------------------------- by vicb at 2012-04-23T14:15:09Z Actually I am fine with anything... as long as it is documented. --------------------------------------------------------------------------- by bschussek at 2012-04-23T14:22:31Z Still I think that this unveals a more profound naming problem. How do we (also in the documentation) name forms with children (formerly ""forms"") and forms without children (formerly ""fields"")? Should we refer to them as * forms and fields? * complex and primitive forms? * ... We must first answer this question before we can find an intuitive option name. If the documentation always switches between different terminologies, neither will it be understandable nor will this option be easy to remember. --------------------------------------------------------------------------- by vicb at 2012-04-23T15:10:32Z > Still I think that this unveals a more profound naming problem. How do we (also in the documentation) name forms with children (formerly ""forms"") and forms without children (formerly ""fields"")? To make it clear, I would rather say forms that **can have** children and forms that **can not have** children (i.e. Empty collections have no children but they can have and this is reason why you have to introduce those options, right ? - that could be a good example for the doc). It will probably be better to refer to ""complex"" / ""primitive"" forms in the doc (and use the ""form"" / ""field"" terms to explain them). Note: I think @Tobion concern is that ""primitive"" / ""complex"" could be pejorative terms (this is why I have proposed ""elementary"" / ""compound""). --------------------------------------------------------------------------- by Tobion at 2012-04-23T16:00:54Z 1. primitive/complex is subjective (and could be pejorative too) 2. elementary/compound is more explicit so probably better than primitive/complex 3. I dislike this option in general. Does it make sense to change this option from a user perspective? I guess it's always the same as long as the widget structure stays the same. So it should be resolved at a higher level dynamically from the widget structure and not exposed to any configuration. 4. In documentation I would use the terms forms and fields. Because all people with HTML knowledge will understand that fields cannot have sub-fields whereas forms can. But since this distinction is not findable in code, it should be mentioned that all these are implemented as a form hierarchy. --------------------------------------------------------------------------- by mvrhov at 2012-04-23T16:02:00Z how about simple and complex? --------------------------------------------------------------------------- by bschussek at 2012-04-23T16:06:33Z @Tobion It does not make sense to change this option from the user perspective, still the overloading type has to propagate to FormType whether it is a form or a field, so that the default behaviour is correct. A second option how to implement this is to add a method `isField` to FormTypeInterface that can be overloaded and receives the options. I don't really like to introduce new methods here unless absolutely required. What about renaming the option ""primitive"" to ""is_field""? The blocks in the template would then be named ""form_widget_field"" and ""form_widget_form"". --------------------------------------------------------------------------- by tristanbes at 2012-04-25T14:01:06Z Oh, I should've seen this before, i thought I was doing something wrong. (empty collections gets an input field bug) Please big :UP: on this. When will it be merged ? @bschussek --------------------------------------------------------------------------- by Tobion at 2012-04-25T15:30:28Z +1 for ""is_field"" and ""form_widget_field"" but I would rather use ""form_widget_compound"" instead of ""form_widget_form"" which is quite strange. --------------------------------------------------------------------------- by bschussek at 2012-04-26T16:34:04Z @Tobion ""simple"" and ""compound"" then? --------------------------------------------------------------------------- by Tobion at 2012-04-26T16:49:58Z no ""field"" and ""compound"" --------------------------------------------------------------------------- by bschussek at 2012-04-26T17:17:02Z I don't like ""field"" for a simple reason: Consider the ""date"" type. We are typically speaking of the ""date"" field there. But technically, the ""date"" field is a compound field. So? --------------------------------------------------------------------------- by Tobion at 2012-04-26T21:17:37Z I don't understand the open question. You proposed ""is_field"" and ""form_widget_field"" yourself. So calling the template block ""form_widget_field"" is a comprehensible consequence of ""is_field"". I wouldn't call the date type with multiple inputs a field. --------------------------------------------------------------------------- by tristanbes at 2012-04-26T21:52:39Z We should take a decision cause right here i got all my forms that are broken because of the empty collection rendering as input field :-). I guess we are many in that situation. --------------------------------------------------------------------------- by bschussek at 2012-04-27T08:28:16Z I renamed ""primitive"" to ""single_control"" now to match with the HTML specification which names all input elements (input, select etc.) ""controls"". The opposite is now ""compound"". Meanwhile, I added a fix for #4118. @fabpot This is ready for merge now. --------------------------------------------------------------------------- by Tobion at 2012-04-27T10:22:49Z Hm, I know naming things is hard and sometimes not really important. But since users need to know which block to override, it is essential to make it clear. I think there is still one issue. The block is named `form_widget_single_control` in order, as you said, to abstract away if it's an input, select etc. But in fact it can only render `input` and nothing else. So this is misleading. So you could also simply name it `form_widget_input`. Apart from that I agree with everything.",PHP
yes,PHP
"[PATCH 3/4] move cred_guard_mutex from task_struct to signal_struct From: KOSAKI Motohiro Date: Sun Oct 24 2010 - 23:28:47 EST Next message: KOSAKI Motohiro: ""[resend][PATCH 4/4] oom: don't ignore rss in nascent mm"" Previous message: KOSAKI Motohiro: ""[resend][PATCH 2/4] Revert ""oom: deprecate oom_adj tunable"""" In reply to: David Rientjes: ""Re: [resend][PATCH 2/4] Revert ""oom: deprecate oom_adj tunable"""" Next in thread: Roland McGrath: ""Re: [resend][PATCH 3/4] move cred_guard_mutex from task_struct to signal_struct"" Messages sorted by: [ date ] [ thread ] [ subject ] [ author ] Changelog o since v1 - function comment also change current->cred_guard_mutex to current->signal->cred_guard_mutex. --------------------------------------------------------------------------- Oleg Nesterov pointed out we have to prevent multiple-threads-inside-exec itself and we can reuse ->cred_guard_mutex for it. Yes, concurrent execve() has no worth. Let's move ->cred_guard_mutex from task_struct to signal_struct. It naturally prevent multiple-threads-inside-exec. Cc: stable@xxxxxxxxxx Reviewed-by: Oleg Nesterov <oleg@xxxxxxxxxx> Cc: Roland McGrath <roland@xxxxxxxxxx> Signed-off-by: KOSAKI Motohiro <kosaki.motohiro@xxxxxxxxxxxxxx> --- And one more commit also present in the patch! Fix Settings memory display issue commit 81d60bcc8c9729d1afe08b2b3970bb1d940957d5 1 parent 46b465db3c dorimanx authored a day ago ====================== Showing 1 changed file with 21 additions and 0 deletions. M kernel/fork.c 21 ..... Txt kernel/fork.c View file @ 81d60bc @@ -666,6 +666,27 @@ struct mm_struct *get_task_mm(struct task_struct *task) } EXPORT_SYMBOL_GPL(get_task_mm); +struct mm_struct *mm_access(struct task_struct *task, unsigned int mode) +{ + struct mm_struct *mm; + int err; + + err = mutex_lock_killable(&task->signal->cred_guard_mutex); + if (err) + return ERR_PTR(err); + + mm = get_task_mm(task); + if (mm && mm != current->mm && + !ptrace_may_access(task, mode) && + !capable(CAP_SYS_RESOURCE)) { + mmput(mm); + mm = ERR_PTR(-EACCES); + } + mutex_unlock(&task->signal->cred_guard_mutex); + + return mm; +} + /* Please note the differences between mmput and mm_release. * mmput is called whenever we stop holding onto a mm_struct, * error success whatever. =================",C
Updating to have lots of icons! yay? Also added a license and updated some GTK file paths and icon images.,C
Yay. Now on git.,Java
Added some buttons. yay,JavaScript
now yes the last one,PHP
"fix issue #4 Phantomjs provides an option --ignore-ssl-errors. Now it's possible to use -I for setting this option to 'yes'. When doing so, it's now possible to test also SSL sites with an invalid SSL certificate or other SSL related issues. increase version to 0.1.5",Ruby
"Updating integration tests to use new API, also the tets pass (at least on my Mac) yay.",JavaScript
fixed problem with creeps sneaking through towers! and also made pathfinding even more efficient. YAY!,C++
omg yes doesn't crash on title change,Objective-C
metaviewport tag content attribute user-scalable yes|no is observed.,JavaScript
yes,Lua
"Yay, population retriever works!",Python
delete yes; edit no,Java
delete yes; edit no,Java
Yay! My states work!!!,C#
"net.c: Added basic TLS support + updated hub.c to use it Yay, I can connect to ADCS hubs again!",C
"Added new TYPO3 Version Official Announcement : http://typo3.org/news/article/typo3-470-released/ Dear TYPO3 enthusiasts, the TYPO3 Core Team and the TYPO3 Community are proud to announce the release of TYPO3 version 4.7 ""standards and accessibility"". As always, backward compatibility has remained an important requirement but again, as started already with ""TYPO3 4.6 --rebase"", deprecated code has been removed as announced before. The most important innovations at a glance: - HTML5 Rendering for CSS Styled Content - Compliance with Accessibility Guidelines - New ""Government Package"" available For more details about the release, please read up on: - http://typo3.org/news/article/typo3-470-released/ (News) - http://typo3.org/download/release-notes/typo3-4-7-release-notes/ (Release Notes) - http://wiki.typo3.org/TYPO3_4.7 (Technical Release Notes) You can download the packages from: - http://typo3.org/download/ <http://typo3.org/download/packages/> MD5 checksums: 849445ad455cd8b99cf16336cfd6ea42 blankpackage-4.7.0.tar.gz f761ae06eb10b3c78e864c02ff8e5dee blankpackage-4.7.0.zip 4dfbb48315620ead950467716b643df6 dummy-4.7.0.tar.gz 432a72095123a890a27bd8abf67d69a0 dummy-4.7.0.zip 4d12f77c7c23a7ad933f197382110244 governmentpackage-4.7.0.tar.gz 26d047f7cdf504e7729a991b83c3e52a governmentpackage-4.7.0.zip a80bf051234ba775e3ee163428a0436f introductionpackage-4.7.0.tar.gz b6bccd01c7f99eb181cdd9ccbfd064c6 introductionpackage-4.7.0.zip db91d285ee79a8c68ebad3eeefa0e143 typo3_src+dummy-4.7.0.zip b030bce602f1ab7b7d15f35dcc93da66 typo3_src-4.7.0.tar.gz 42baed6db65d6cb538049dc5718a0592 typo3_src-4.7.0.zip Enjoy our newest release and celebrate it at our release-parties: - http://wiki.typo3.org/Release_Party/TYPO3_4.7 regards Steffen Ritter --- Steffen Ritter Release Manager TYPO3 4.7 TYPO3 .... inspiring people to share! Get involved: http://typo3.org _______________________________________________ TYPO3-announce mailing list TYPO3-announce@lists.typo3.org http://lists.typo3.org/cgi-bin/mailman/listinfo/typo3-announce",C
"virt: Support for indirect image_name definition This patch adds a support to specify the disk image by re + select instead of the image_name. Params: indirect_image_select: Index of the disk from list matching disks image_name: regular expression (ls $image_name) Usage: images += "" stg"" image_name_stg = ""/dev/sd*"" image_raw_device_stg = yes image_format_stg = raw drive_index_stg = 3 drive_format_stg = scsi-block indirect_image_select_stg = -1 Signed-off-by: Lukas Doktor <ldoktor@redhat.com>",Python
"Added new TYPO3 Version Official Announcement : http://typo3.org/news/article/typo3-470-released/ Dear TYPO3 enthusiasts, the TYPO3 Core Team and the TYPO3 Community are proud to announce the release of TYPO3 version 4.7 ""standards and accessibility"". As always, backward compatibility has remained an important requirement but again, as started already with ""TYPO3 4.6 --rebase"", deprecated code has been removed as announced before. The most important innovations at a glance: - HTML5 Rendering for CSS Styled Content - Compliance with Accessibility Guidelines - New ""Government Package"" available For more details about the release, please read up on: - http://typo3.org/news/article/typo3-470-released/ (News) - http://typo3.org/download/release-notes/typo3-4-7-release-notes/ (Release Notes) - http://wiki.typo3.org/TYPO3_4.7 (Technical Release Notes) You can download the packages from: - http://typo3.org/download/ <http://typo3.org/download/packages/> MD5 checksums: 849445ad455cd8b99cf16336cfd6ea42 blankpackage-4.7.0.tar.gz f761ae06eb10b3c78e864c02ff8e5dee blankpackage-4.7.0.zip 4dfbb48315620ead950467716b643df6 dummy-4.7.0.tar.gz 432a72095123a890a27bd8abf67d69a0 dummy-4.7.0.zip 4d12f77c7c23a7ad933f197382110244 governmentpackage-4.7.0.tar.gz 26d047f7cdf504e7729a991b83c3e52a governmentpackage-4.7.0.zip a80bf051234ba775e3ee163428a0436f introductionpackage-4.7.0.tar.gz b6bccd01c7f99eb181cdd9ccbfd064c6 introductionpackage-4.7.0.zip db91d285ee79a8c68ebad3eeefa0e143 typo3_src+dummy-4.7.0.zip b030bce602f1ab7b7d15f35dcc93da66 typo3_src-4.7.0.tar.gz 42baed6db65d6cb538049dc5718a0592 typo3_src-4.7.0.zip Enjoy our newest release and celebrate it at our release-parties: - http://wiki.typo3.org/Release_Party/TYPO3_4.7 regards Steffen Ritter --- Steffen Ritter Release Manager TYPO3 4.7 TYPO3 .... inspiring people to share! Get involved: http://typo3.org _______________________________________________ TYPO3-announce mailing list TYPO3-announce@lists.typo3.org http://lists.typo3.org/cgi-bin/mailman/listinfo/typo3-announce",C
"show git clone URL in header if run with `-s` (yes, I am a horrible web designer)",Python
"Yay, we're displaying tweets...",Ruby
Merge pull request #358 from modilabs/bump-pyxform pyxform to 0.9.4.3. yay!,Python
patch model is working yay,Python
hallelujah is done!,Perl
"Make symmetry finder work with disordered structures. (Yes, I am good....) Add a script to determine spacegroup from a cif or POSCAR.",Python
* Setup playground for The Joy of Clojure. clojure-mode and Swank Clojure / SLIME working.. bingo!,Haskell
"Cleanse has arity 2, check for yes in second arg",Ruby
"Yes, I know they're empty, I'm doing research.",C++
reorder works yay! Signed-off-by: Patrick Dukes <pdukes3@gmail.com>,C
floors and ceilings yay,JavaScript
floors and ceilings yay,JavaScript
"Reduce screen size to phone, rather than tablet, Android device. Yes, that breaks EVERYTHING.",Python
YES! Fixed the memory leak AND now preview mode is totally in memory! No crashes on higher resolution images and about a 20% speed increase on CPU when using preview mode,C++
"No more isSheltr, but yes isMedical",JavaScript
"moved the levels to their own folder, yay organization",C
Yay for random commits to pom!,Java
haddock yay,Haskell
merged branch dlsniper/small-wdt-fix (PR #4063) Commits ------- e1cf54c Small fixes for the WDT Discussion ---------- [WebProfilerBundle] Small fixes for the WDT Bug fix: yes Feature addition: no Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: - Todo: - These are some very small HTML fixes for the new WDT. Tests are passing but Travis is acting strange at the moment.,PHP
yes,JavaScript
yes,JavaScript
yes,JavaScript
"merged branch fabpot/inline (PR #709) Commits ------- 07f13df fixed typo 0f623a1 added the parent as an argument to the embed tag (removes the need to use extends) fab21d8 renamed the inline tag to embed 1b54780 tweaked examples 955726a changed the inline examples to not use even/odd to avoid confustion fb07f3a renamed indice to index fafde80 added more info in the docs 2fa8224 added the inline tag Discussion ---------- added the inline tag At Sensio, we manage websites with many mostly-static pages that share almost the same structure (with different content of course), but with some subtle differences. After trying many different possibilities (external templates, inheritance, macros, and some ugly ones that I won't even tell you about ;)) to structure our templates, we came to the conclusion that we needed a new concept. This new concept is implemented via a new tag, `inline`, which I want to include in Twig 1.8 (not for the upcoming 1.7 which is due this week). But before merging this code into master, I want to gather some feedback from the community. One of my questions being: Will you use this new possibility? I won't tell you more here as the tag is fully documented in the diff. --------------------------------------------------------------------------- by oojacoboo at 2012-04-23T17:58:59Z odd/even? What other potential uses do you see? I think I can see a couple, but generally speaking, unless it's a content site (ie. blog), the odd/even isn't very useful. Reusing blocks even with minor customizations on a per page level is highly needed for our development processes, but an odd/even scenario is certainly not. Maybe I'm missing something here. What about passing attributes to a block or something? --------------------------------------------------------------------------- by fabpot at 2012-04-23T18:02:51Z @oojacoboo odd/even is just an example. Of course, this is not a real use case, this was just an attempt to find an example. --------------------------------------------------------------------------- by stof at 2012-04-23T18:03:53Z @oojacoboo there is no reference to odd/even in the code, only in the doc --------------------------------------------------------------------------- by simensen at 2012-04-23T18:20:10Z I think that it would be useful in some cases. I can't think of any places I could use it *right now* but I know I've had to jump through hoops on more than a few occasions to get things to work correctly. Being able to keep functionality like this in mind at the design stage might have made things easier in a few of those cases. --------------------------------------------------------------------------- by lyrixx at 2012-04-23T18:21:34Z I think it's a good idea. --------------------------------------------------------------------------- by tyomo4ka at 2012-04-23T18:25:07Z I think it will be great. Each time when I need to include templat that simple extends another one and replace one small block I think: ""Why I should to create new template for it?"". Thanks, @fabpot --------------------------------------------------------------------------- by bmatzner at 2012-04-23T18:28:23Z Right on. +1 --------------------------------------------------------------------------- by cranberyxl at 2012-04-23T18:40:17Z I believe the concept is a good one, but the example using even and odd will confuse frontend developers because it's usually used in the context of loops and table striping. even changing it to styleA.twig and styleB.twig would be more understandable. --------------------------------------------------------------------------- by lyrixx at 2012-04-23T19:01:32Z @cranberyxl +1 --------------------------------------------------------------------------- by fabpot at 2012-04-23T19:24:21Z ok, I've just changed the examples to not used even/odd. --------------------------------------------------------------------------- by jorgelbg at 2012-04-23T19:27:53Z I think that the inline tag is a valid concept, but still I can't get it landed on a real case! --------------------------------------------------------------------------- by sirowl at 2012-04-23T19:35:07Z As a webdesigner with a steady foundation in CSS I find the term inline very confusing, I had to consult a developer to actually understand what was the idea of the tag as I so heavily associated it with CSS's terminology of inline. The CSS terminololigy got me on the wrong track in terms of what the tag was supposed to be used for. I have no good suggestion for a name for it, but inline could probably get very confusing for a lot of webdesigners making use of twig. --------------------------------------------------------------------------- by fabpot at 2012-04-23T19:41:48Z @sirowl `inline` was the best term I could come up with but I'm open to any other suggestion. --------------------------------------------------------------------------- by sirowl at 2012-04-23T19:47:30Z The best I could come up with is embed, as it is an embedded document of sorts.. or something along those lines. --------------------------------------------------------------------------- by bschussek at 2012-04-23T19:48:54Z I like `embed`. --------------------------------------------------------------------------- by bmatzner at 2012-04-23T19:55:37Z Hi Fabien, inline makes sense to me, although I understand @sirowl's comment, but I even find the concept quite comparable to the CSS display:block/display:inline logic. @sirowl's suggestion of ""embed"" would be just as fine, as it's just a matter of learning what this particular tag refers to. The ambiguation against the import tag is probably the most crucial, explaining the advantages of ""inline"" (or whatever) over doing an import --------------------------------------------------------------------------- by Baachi at 2012-04-23T20:03:26Z I lke ```embed```, too. --------------------------------------------------------------------------- by Nami-Doc at 2012-04-23T20:11:42Z I like `embed`, but `inline` is fine too. --------------------------------------------------------------------------- by tijuan at 2012-04-23T20:36:39Z I like the feature I like embed --------------------------------------------------------------------------- by pulse00 at 2012-04-23T20:56:41Z +1 for `embed` --------------------------------------------------------------------------- by mickaelandrieu at 2012-04-24T00:35:01Z I like embed, inline for me is an CSS behavior --------------------------------------------------------------------------- by matheo at 2012-04-24T04:29:05Z +1 for `embed` --------------------------------------------------------------------------- by fabpot at 2012-04-24T05:35:06Z I've just renamed the `inline` tag to `embed`. --------------------------------------------------------------------------- by sirowl at 2012-04-24T06:55:17Z @fabpot agreed, much more clear to me now. Look forward to using it. --------------------------------------------------------------------------- by pvanliefland at 2012-04-24T07:20:35Z I would like to use this feature as well --------------------------------------------------------------------------- by tristanbes at 2012-04-24T07:38:57Z So if I take another example, to help me understand better I do have a common structure stated as follows : ``` <body> <div class=""row""> <div class=""main""> <div id=""homepage""> {% block content %} </div> </div> </div> </body> ``` Let's say for the other pages, the `id=""homepage""` is replaced by `id=""innerPage""` `id=""specialLayout""` So far I created 3 base template with those changes, so with the new `embed` tag, does this concept fits here or I misunderstood the function of `embed` feature ? --------------------------------------------------------------------------- by ruian at 2012-04-24T07:47:38Z @tristanbes with `embed`, you can ""include"" another twig template and modify directly these differents `block`. If you want to understand you can read `embed` tests https://github.com/fabpot/Twig/blob/0f623a11129ce28a897dbd5b812241d8b3ea9730/test/Twig/Tests/Fixtures/tags/embed/ --------------------------------------------------------------------------- by samuelmichaud at 2012-04-24T08:02:42Z Yes ! I will definitely use this ! Thanks --------------------------------------------------------------------------- by michelsalib at 2012-04-24T08:05:47Z As @samuelmichaud said we have some uses cases (such as menu generation, breadcrumbs or quick action embedding). So this feature makes total sense.",PHP
"warp.mni is logical, not yes",Matlab
yes,Java
Implemented mapping functionality. This was done in a really hacky way though and I am not proud of it.,JavaScript
checkbox yes no enhancement,Java
"Growth working, sort of. Going to add ofxBox2d, want to commit this (semi-broken) code before I lose the old working code. Yay projects you work on alone!",C
checkbox yes no enhancement,Java
don't initialize hasMore to YES,Objective-C
ah yes.,JavaScript
Support RROONGA_USE_GROONGA_X64=yes to install 64bit groonga win32 binary,Ruby
"Yay, documentation.",JavaScript
"1) Added ImageProcessor class to resize company logos, 50x50 and 150x150 are being used 2) Added try catch block for the resizing image exception ""Numbers of source Raster bands and source color space components do not match"", in this case use the original image from CrunchBase 3) Re-css-ed the jsp pages display .. And we are DONE! YAY!",JavaScript
+ buzzword bingo,PHP
"merged branch eriksencosta/locale (PR #3840) Commits ------- 31dde14 [Locale] updated StubIntlDateFormatter::format() behavior for PHP >= 5.3.4 Discussion ---------- [Locale] updated StubIntlDateFormatter::format() behavior for PHP >= 5.3.4 Bug fix: yes Feature addition: no Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: - Todo: - [![Build Status](https://secure.travis-ci.org/eriksencosta/symfony.png?branch=locale)](http://travis-ci.org/eriksencosta/symfony) --------------------------------------------------------------------------- by drak at 2012-04-08T23:20:20Z This looks like a feature addition as opposed to a bug fix and if so, should probably go in the master branch rather than 2.0. --------------------------------------------------------------------------- by stof at 2012-04-08T23:30:25Z @drak it is a bug fix as the stub is meant to have the same behavior than the real intl --------------------------------------------------------------------------- by drak at 2012-04-08T23:36:08Z ok, thanks for the clarification, I wasnt sure. --------------------------------------------------------------------------- by eriksencosta at 2012-04-08T23:44:22Z @stof is right. I myself fixed it in master and then remembered that bug fixes should be made in 2.0.",PHP
minor change to peerguardian yes ubuntu/debian users...i feel bad for the shit you have to deal with,Shell
"Yes, that's right! Shorthand commands! Also - added a cmeta for removing meta values.",Java
"* Yes, your query is failing. Check both the ""Hope Ian"" and Hope Ian A"" Author objects. Neither have the Full_name tag populated. * Query response no prints ""no data returned for these cases. * closes #216",Perl
Profiles updated too The profile editor has been updated to include the three new fields for users. YAY!,Ruby
error2_lvalue returns operator string rather than operand string... YES,Java
"yes, i don't know why i called it 'doc' either",Python
Positioning the navigation buttons properly. Hurray for scrubbing!,Ruby
"added tests for xslt, yes xslt",Haskell
- Support more environment values meaning true: 1 yes enable on true - Added specs to cover this - Added spec to ensure that if the truthy-value list ever changes that the specs fail - this should help prevent backwards incompatibility.,Ruby
Finish demo app yay! :D,Ruby
Bingo,JavaScript
yes,JavaScript
JBIDE-11672 openshift properties now shows port forwarding yes/no git-svn-id: https://svn.jboss.org/repos/jbosstools/trunk@40570 a97e2381-89e5-4abb-bab3-167db6db766c,Java
YAY IT WORKS primarily. Signed-off-by: Harrison Houghton <actorclavilis@gmail.com>,Java
"Uppercase ""Yes"" class caused both answers to be visible all classes must be lowercase",PHP
yay,Java
Tests are complete. Everything gets tested. Yay.,Ruby
"All day wasted on fighting with stack just to find out that I have to move everything I need in kernel_main() to registers. Success achieved, but I'm not very proud of it.",C++
"Forcing color prompt and conditionally setting prompt ($PS1) - Setting force_color_prompt=yes - The color of the prompt ($PS1 variable) is set depending on which user is logged in (red for root, green for normal users, light purple for normal users who are connecting over ssh).",Shell
yes,Dart
yes,Dart
"Implement `blimpy ssh <name>` with minimal testing Yes yes, I know, shame on me. But it's hard as shit to write automated tests for this. Fixes #13",Ruby
yes,Dart
yes,Dart
yes,Dart
yes,Dart
yes,Dart
yes,Dart
yes,Dart
yes,Dart
yes,Dart
yes,Dart
yes,Dart
yes,Dart
yes,Dart
yes,Dart
yes,Dart
yes,Dart
yes,Dart
"Yay! Debug validation runs working! Note to self (which also happened to fix the yuckiest bug in this project): 1) Issue width of ""N"" does not mean that there will be up to N instructions of a particular operation type in EX pipeline stage at any cycle. 2) Issue width of ""N"" simply means that up to N instructions can be issued in a given cycle. It does not matter which operation type those instructions are. We have only N universal Function Units. Signed-off-by: Salil <slashforu@gmail.com>",C
yes,Dart
yes,Dart
yes,Dart
Yay for operator precedence,D
yes,Dart
version 0.1.0 push yay rake tasks,Ruby
yes,Dart
yes,Dart
yes,Dart
yes,Dart
yes,Dart
yes,Dart
yes,Dart
yes,Dart
yes,Dart
yes,Dart
"OK, SBT is not working. Loading is written, but cannot be tested. yay...",Scala
yes,Dart
Moved the Neil Mitchell tests into ./yes. Now they are run with ./run-tests all.,Haskell
"hell yes, motherfuckers. tree library appears to be basically working now.",Common Lisp
yay,Java
"Curse targetting self shouldn't be blocked by Protect - yes, this is sort of a workaround; will deal with modifying targets later",JavaScript
yay,Ruby
yes,Dart
yes,Dart
yes,Dart
yes,Dart
yes,Dart
IT WERKS YAY,Assembly
yes,Dart
yes,Dart
yes,Dart
yes,Dart
yes,Dart
yes,Dart
"Many changes to Program.cs, Added ToString methods! Yes that's right, ToString! Ballin'. Added a ""GetInput"" method to Character so that you can use that to grab input from the user and have it be error checked cleanly. Kinda cool. Next thing I'm working on is having the user decide if they want to attack an enemy and things of that nature.",C#
yes,Dart
Yay!,JavaScript
yay,Java
Add global presume yes for yum process so that the tee can normally executes.,Shell
yay,Java
More snipmate cleanup... yay!,VimL
"sendmail: use host rather than NIS domain name for HELO According to RFC 5321 the argument to HELO ""contains the fully-qualified domain name of the SMTP client"" or its IP address if no FQDN is available. BusyBox sendmail uses the NIS domain name instead which, in many cases, is likely to be the default ""(none)"". [vda: yes, I checked my machine and its uts.domainname was indeed ""(none)""] Using the host name is more likely to satisfy the intent of the RFC while allowing the otherwise unused safe_getdomainname function to be removed. Signed-off-by: Ron Yorston <rmy@tigress.co.uk> Signed-off-by: Denys Vlasenko <vda.linux@googlemail.com>",C
fixed myth no 7 which had yes and no the wrong way around,PHP
Fixed segfault: Thanks StackOverflowvalgrind --leak-check=yes --dsymutil=yes mafPairwiseSyntenyDecay -speciesMain=allMis1 -speciesOther=anoCar2 anoCar2.allMis1.rbest.maf.gz (http://stackoverflow.com/questions/10362241/c-seg-fault-issue),C
yes! pythonbrew,Shell
"Show activity indicator when pulling while source is loading. When ""egoRefreshTableHeaderDataSourceIsLoading:"" returns YES, pulling now displays the activity indicator instead of ""Pull down to refresh..."".",Objective-C
Yay! Setting state-specific properties are now undoable with StyleCommand.,JavaScript
"massive rewrite of the autoscript system: - all autoscripted game functions have been condensed into two general functions: trigAbility() and stackResolve() - autoscript tags are parsed more efficiently into the global cache - init and cost classes have a different format now: initactivate1 (used to be activateinit1) - cardcount now reads cost and x markers from stackcard, and normal markers from card - .cost[cost, type] has been removed from the general autoscript processing and triggers independently. --- the Type parameters have changed somewhat: 'ask' prompts a yes/no box, 'num' prompts an integer field, anything else runs through cardcount(). added support for auto-add marker and auto-create token (not ready yet) Added .life[qty] to autoscript system.",Python
Yay! Failure is not the option! Made success to 'skip' ultra hard failure from sax push parser test.,Ruby
New jar hurray,Java
New jar hurray,Java
"last bits to wire in and test all the synclets, they work, YAY",JavaScript
More changes! Yay!,Ruby
merged branch alessandro1997/issue-3848 (PR #3849) Commits ------- 78d6f3f [Filesystem] Written missing tests. 1998f3f [Filesystem] Added silence operator to rename(). 7ce5a52 [Filesystem] Fixed docs for rename(). 3f2865b [Filesystem] rename() throws RuntimeException on error (fixes #3848). Discussion ---------- [Filesystem] rename() throws RuntimeException on error. Bug fix: no Feature addition: yes Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: #3848 --------------------------------------------------------------------------- by alessandro1997 at 2012-04-09T19:32:23Z I have a doubt: I can't write any tests since the rename() function generates a warning if an error occurs. Should I use the silence operator or what else? Maybe @stof could enlighten me?,PHP
"Removed Hard coding & updated ReadMe Removed Hard coding where you had no db access (now db is on web, we can work whenever yay!) and updated ReadMe",Java
"Added jquery-ui, a logo, and a progress bar. Yay!",C++
"Cleaned up the README to something vaguely attractive, yay markdown",Python
Yay multithreading.,JavaScript
Yay :D,JavaScript
Yay experimenting :D,JavaScript
Yay Debugging\!,JavaScript
BOA: Use _PHP_MODERN_ONLY=YES by default (Robert),Shell
BOA: Use _PHP_MODERN_ONLY=YES by default (Robert),Shell
build #31 (yes i know build #30 never made it out...),C
"Update to Dovecot 2.1.4. + Added mail_temp_scan_interval setting and changed its default value from 8 hours to 1 week. + Added pop3-migration plugin for easily doing a transparent IMAP+POP3 migration to Dovecot: http://wiki2.dovecot.org/Migration/Dsync + doveadm user: Added -m parameter to show some of the mail settings. - Proxying SSL connections crashed in v2.1.[23] - fts-solr: Indexing mail bodies was broken. - director: Several changes to significantly improve error handling - doveadm import didn't import messages' flags - mail_full_filesystem_access=yes was broken - Make sure IMAP clients can't create directories when accessing nonexistent users' mailboxes via shared namespace. - Dovecot auth clients authenticating via TCP socket could have failed with bogus ""PID already in use"" errors.",C
Fixed the android build. Implemented the calls to create the AggSvg pixmap. Tested the app on an android and it works! yay! Svg parsing is done! =D Now some performance tests :),C++
Set proper install path and set skip_install YES,Objective-C
Yay for linux.,C++
"yes, i didn't have them sorted properly",VimL
merged branch hhamon/command_description_fixes (PR #3871) Commits ------- b4f0a04 [TwigBundle] fixed twig:lint command description. 809933f [FrameworkBundle] fixed translation:update command description. Discussion ---------- Command description fixes Bug fix: no Feature addition: no Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: - Todo: -,PHP
"Generic classes and generic class methods work cross-crate Classes can have ty params now. So can methods inside classes. That was probably true before, but now it should still work if you call methods in a class that's defined in a different crate. Yay!",Rust
added SSL support! yay!,Shell
Merge pull request #1969 from vishalduggal/timob-8559 [TIMOB-8559]Ensure windows in nav group have parentVisible=YES,Objective-C
yes,Ruby
bug19610 - Obsolete getStatements() comments in repositoryconnection.py Removed obsolete comments from repositoryconnection.py and repository.py. Pointed the user to the documentation locations both on the web and the local installation instead. Moved some comments into docstrings for functions. Tests added for: None make test-suite run? yes - nosetests were run Change-Id: I8243f676a0fafc6759a0bf11ae16b3783c49f0cd Reviewed-on: https://gerrit.franz.com:9080/889 Reviewed-by: Kevin Layer <layer@franz.com> Tested-by: Kevin Layer <layer@franz.com>,Python
"rfe11229 - Add support for user masquerading to python client Added support for user masquerading to Python client by adding RepositoryConnection.runAsUser(username). In order to test the functionality, user, role, and filter management were also added. Added a test called test_users_roles_filters which tests all added functions. Tests added for: rfe11229 make test-suite run? yes - make python-prepush <documentation> rfe11229 See doc strings in the diffs of allegrographserver.py and repositoryconnection.py for documentation information. </documentation> Change-Id: I3a8e863fc8ab381f7affd9490dccfa4b3b88fc20 Reviewed-on: https://gerrit.franz.com:9080/1862 Reviewed-by: John O'Rourke <jor@franz.com> Reviewed-by: Ahmon Dancy <dancy@franz.com> Tested-by: Kevin Layer <layer@franz.com>",Python
"rfe11122 - Add ""delete duplicates"" API function to python client Added deleteDuplicates call with mode argument and tests to the Python client. Tests added for: rfe11122 make test-suite run? yes - python prepush <documentation> RepositoryConnection.deleteDuplicates: Delete all duplicates in the store. Must commit. mode - ""spog"" or ""spo"" For details see: http://www.franz.com/agraph/support/documentation/current/http-protocol.html#delete-statements-duplicates </documentation> Change-Id: Ie4c3f3e831279360475ae32cd14fd82dfbd9a6f4 Reviewed-on: https://gerrit.franz.com:9080/1801 Reviewed-by: Ahmon Dancy <dancy@franz.com> Reviewed-by: John O'Rourke <jor@franz.com> Tested-by: Kevin Layer <layer@franz.com>",Python
rfe10489 - add encoded ids to python client and tests Added registered encoded id handling to python client and events test. Use the -x argument on the Python events test to use registered encoded ids during the test. This commit needs the following applied to agraph: rfe10532 - https://gerrit.franz.com:9080/1281 rfe10562 - https://gerrit.franz.com:9080/1311 Tests added for: rfe10489 make test-suite run? yes Change-Id: I18ed1e3990e1c4fe9ccae26743441ead9db1479e Reviewed-on: https://gerrit.franz.com:9080/1285 Reviewed-by: John O'Rourke <jor@franz.com> Reviewed-by: Ahmon Dancy <dancy@franz.com> Tested-by: Kevin Layer <layer@franz.com>,Python
"Merge pull request #32 from Singly/instagram Instagram Connector is updated, YAY",JavaScript
added language ops (why wasn't this in there before?) and can construct lifted enums yay,Scala
Yes/No instead of true/false for shower visit,Ruby
"lets just avoid no and yes as keys in YAML, too many issues. Thanks! [ci skip]",Ruby
"Yes, untested server api code",Ruby
One real life functional test working yay,JavaScript
Change order of yes/no/abstain,Python
"calculating joins properly. yay. q0 nearly complete, my merge is failing",C++
yes.,JavaScript
"mon: command to disable localized pgs for a pool ceph osd pool disable_lpgs <poolname> --yes-i-really-mean-it Grr, these should be off by default. We can't adjust them down. And currently any pool adjustment triggers pg creation, which will create these guys up through max_osd (but not, mind you, when max_osd changes). And a bug in the OSDs makes them think that creation is a split and get confused. Signed-off-by: Sage Weil <sage@newdream.net>",C++
"Yay, we're constructing a tree of our own, hopefully with proper line info, let's display it now.",Scala
Cart can be edited yay,Ruby
yes,JavaScript
Corrects fragment handling in page type. The corrected test case pointed out this error. Hurray for testcases!,PHP
"Added final crosssection graph, yay!",C++
"merged branch dlsniper/patch-1 (PR #3447) Commits ------- eb58dd1 Removed useless parameter from Memcached::set() Discussion ---------- Removed useless parameter from Memcached::set() which makes users unable to set session expiry time. Bug fix: yes Feature addition: no Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: - Todo: - The parameter count is wrong so it makes setting session expiration useless. --------------------------------------------------------------------------- by stof at 2012-02-25T16:06:16Z Already fixed in 15c6ba93f --------------------------------------------------------------------------- by stof at 2012-02-25T16:06:46Z ah sorry, it was the profiler storage",PHP
"[syntax] Now, our parser accepts all the existing MIPL test programs, Yay!",Java
Moved to new arrow drawing (works yay),Python
"Added maven-erlang-plugin support - yay! Some tests are commented out, arbitrary code loading using ""../"" does not (and should probably not) work, and there we're some remoting using ""localhost"" (proven to be difficult on Mac OS X) that stalled. It's on the fix-list, but should be patched on the upstream branch.",Erlang
"Added maven-erlang-plugin support - yay! Some tests are commented out, arbitrary code loading using ""../"" does not (and should probably not) work, and there we're some remoting using ""localhost"" (proven to be difficult on Mac OS X) that stalled. It's on the fix-list, but should be patched on the upstream branch.",Erlang
First seems-to-work version! Yay!,JavaScript
Core: more cleanup yay!,C++
yay,Ruby
Yes i am that anal lol,Python
"Translate between AppKit additions for NSVerticalGlphyFormAttributeName (10.7) and other platforms without (iOS and <10.7). There is a parity between the appkit addition and the actual core text attribute, so it is technically translatable between these operating systems. However, this does require that MNCoder be compiled with a 10.7 SDK with a min deployment target of 10.6 for Mac OS X. Will still compile on iOS. (Yes I know the #if statements are ugly, but this is the only way that will allow the same code to compile on both iOS and Mac OS X)",Objective-C
Adding GAE/Bingo status to MixPanel user properties.,Python
Yes!!! Things are working again!,Ruby
"FIX: remove ""materials for war"" as a valid storyline until directeve can close the yes/no dialog or the bug with that window gets fixed so we can dismiss it forever again.",C#
yay ditionarys and orperiaons and again done,Python
Generated yay,JavaScript
"Using Paul's clipboard handling code, now supports files, urls, and clipboard images better. yay",C#
"Converted ALL the transmitted data to JSON Made the codebox update the clients with your code. Yay! NOTE: This is NOT the final implementation! I'll be adding some kind of tracking. Tell ya what though, it is bloody fast even sending relatively large chunks of data!",JavaScript
"use a 'wait' screen for the is this your computer question, needs styling and yes and no buttons to do the right thing",JavaScript
"[osx] fix release build and packaging, yes I really, really tested this to make sure it works",C
"yay, fixed comments so they go correctly. Wow that was dumb",Ruby
SET_SELL_TRIGGER is working! yay,Python
We can now play a sound (press 'a') without interupting video display/analysis! Hurray! pluckGeneratorThreaded class implimented to replace pluckGenerator.*,C
Merge pull request #4 from inamiy/master doesn't properly work when allowsMultipleSelection=YES & allowsMultipleSelectionDuringEditing=NO,Objective-C
"yes, it works!",Perl
"offer ""Yes to all"" and ""No to all"" when decompiling a bunch of pyc files",C++
Yay for alphabetical order!,Java
"changed the name of the abort variable, change obstacles pointers, yes...I am still fixing compiler errors at this point in the history",C++
This is a test \n \n yes,Python
Half of one model test passes. Um. Yay.,JavaScript
"Added 3d snake game to play on cube. Yes, I'm bored. But thats only for you to do the real work *wink wink*…",Java
"Trigger behaviors, yay",Python
"Yawn, license stuff. Yay GPL, I suppose.",JavaScript
Yes we are using an real OS,Python
Merge pull request #23 from MoSheriff/master The audio manager is working. Yay. Credit(and potential blame) to Mike.,C++
"portage_workdir_hacktool: bugfix, sourceit --cold o support a --cold argument to sourceit which sets cold_vars=yes o fix cold_vars -- the instances variables come from the defaults, not vice-versa",Shell
"merged branch drak/session_gc (PR #3659) Commits ------- cdba4cf [FrameworkBundle] Change XSD to allow string replacements on session args. 52f7955 [FrameworkBundle] Remove default from gc_* session configuration keys. 749593d [FrameworkBundle] Allow configuration of session garbage collection for session 'keep-alive'. Discussion ---------- [2.1][FrameworkBundle] Allow configuration of session garbage collection Bug fix: no Feature addition: yes Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: #2171 Todo: - --------------------------------------------------------------------------- by drak at 2012-03-21T21:56:20Z @fabpot - this PR is ready for merge. It basically allows configuration of some session ini values that are necessary in controlling the session behaviour. --------------------------------------------------------------------------- by dlsniper at 2012-03-21T22:57:18Z @drak shouldn't all the options here: https://github.com/symfony/symfony/blob/master/src/Symfony/Component/HttpFoundation/Session/Storage/NativeSessionStorage.php#L266 be available for configuration, or am I just reading the source wrong and they already are? In this case should I make a separate PR to cover the rest or could you do it in this one? --------------------------------------------------------------------------- by fabpot at 2012-03-23T14:56:22Z @drak: the discussion is the ticket is very interesting and I think it should be part of a cookbook in the documentation. Can you take care of that before I merge this PR? Thanks. --------------------------------------------------------------------------- by drak at 2012-03-25T15:32:59Z @fabpot - yes - it's on the todo list. Will update this PR when done. --------------------------------------------------------------------------- by drak at 2012-03-26T19:45:13Z @fabpot - this is ready for merging, the documentation is done (the PR is in but I'll tweak it, but no need to wait to merge this PR). I will also add something extra to cookbook (I wrote docs for the component).",PHP
added compiled javascripts. yes.,JavaScript
yes,Ruby
changed Provider yes/no fields to boolean fields,Java
yay premake,Lua
"+ Deprecated assert_block!! Yay!!! [git-p4: depot-paths = ""//src/minitest/dev/"": change = 7256]",Ruby
yes i am terrible with encodings,Ruby
Fixed prepare requring yes for yum,Python
use dynamic lua library where SHARED_LUA=yes,C
"rfe10778. Don't set mark in fi:lisp-find-definition When using fi:lisp-find-definition, setting a mark before moving point to the found definition can potentially cause bad and unexpected interactions with certain emacs modes, namely Delete Selection Mode and Transient Mark Mode. Are there user visible changes in this commit? yes Are tests included for new features? no new features Tests run: none <release-note> rfe10778 fi:lisp-find-definition no longer sets a mark before moving point to the found definition. Doing so can potentially cause bad and unexpected interactions with certain emacs modes, namely Delete Selection Mode and Transient Mark Mode. </release-note> Change-Id: Ib95e7897b376d084af311fe9cbe5340717f81b48",Emacs Lisp
"sys-apps/portage: The Great Decruftification! Remove various patchcruft and stuff that belongs elsewhere. Yes, I actually created bugs for them (for which I'll surely be flamed :) )",Shell
"Package library now *calls* package.searchpatch(). Yes, you can override it now to implement your own search order, without manually patching require. Signed-off-by: sd <sd@fucksheep.org>",C
Yay! Finally getting some good stuff and results!!! Oh wait it's still just a WIP.,JavaScript
install ting virker yay,JavaScript
yes,Java
allow compiling with amalgamation=yes,C
yay. multiple traces work,Clojure
Fix Gnome bugzilla bug 646317 (https://bugzilla.gnome.org/show_bug.cgi?id=646317). This patch addresses a bug in gnome-terminal in which it returns an invalid exit status causing some environments (e.g. e17) to complain (http://trac.enlightenment.org/e/ticket/823). Approved by: mezz on gnome Obtained from: Gnome bugzilla bug 646317 (https://bugzilla.gnome.org/show_bug.cgi?id=646317) Feature safe: yes,C
"Fix the remaining atomic tests, all of which were wrong for the case where a compare-and-exchange failed (it should update the expected value to the current value, and the tests were checking that it didn't...). Results of the atomics part of the test suite on FreeBSD with clang trunk and the atomic.c from compiler-rt (currently kludged into the test, not installed properly): **************************************************** Results for /root/libc++/test/atomics: using clang version 3.1 (trunk 153415) Target: x86_64-unknown-freebsd10.0 Thread model: posix with -std=c++0x -stdlib=libc++ -pthread /tmp/atomic.o ---------------------------------------------------- sections without tests : 0 sections with failures : 0 sections without failures: 14 + ---- total number of sections : 14 ---------------------------------------------------- number of tests failed : 0 number of tests passed : 52 + ---- total number of tests : 52 **************************************************** Yay!",C++
"Fix the remaining atomic tests, all of which were wrong for the case where a compare-and-exchange failed (it should update the expected value to the current value, and the tests were checking that it didn't...). Results of the atomics part of the test suite on FreeBSD with clang trunk and the atomic.c from compiler-rt (currently kludged into the test, not installed properly): **************************************************** Results for /root/libc++/test/atomics: using clang version 3.1 (trunk 153415) Target: x86_64-unknown-freebsd10.0 Thread model: posix with -std=c++0x -stdlib=libc++ -pthread /tmp/atomic.o ---------------------------------------------------- sections without tests : 0 sections with failures : 0 sections without failures: 14 + ---- total number of sections : 14 ---------------------------------------------------- number of tests failed : 0 number of tests passed : 52 + ---- total number of tests : 52 **************************************************** Yay! git-svn-id: https://llvm.org/svn/llvm-project/libcxx/trunk@154095 91177308-0d34-0410-b5e6-96231b3b80d8",C++
"Fix the remaining atomic tests, all of which were wrong for the case where a compare-and-exchange failed (it should update the expected value to the current value, and the tests were checking that it didn't...). Results of the atomics part of the test suite on FreeBSD with clang trunk and the atomic.c from compiler-rt (currently kludged into the test, not installed properly): **************************************************** Results for /root/libc++/test/atomics: using clang version 3.1 (trunk 153415) Target: x86_64-unknown-freebsd10.0 Thread model: posix with -std=c++0x -stdlib=libc++ -pthread /tmp/atomic.o ---------------------------------------------------- sections without tests : 0 sections with failures : 0 sections without failures: 14 + ---- total number of sections : 14 ---------------------------------------------------- number of tests failed : 0 number of tests passed : 52 + ---- total number of tests : 52 **************************************************** Yay! git-svn-id: https://llvm.org/svn/llvm-project/libcxx/trunk@154095 91177308-0d34-0410-b5e6-96231b3b80d8",C++
test after build = YES,Objective-C
"merged branch drak/caed (PR #3783) Commits ------- d04638a [EventDispatcher] More logical positions for classes. Discussion ---------- [EventDispatcher] More logical positions for classes. Bug fix: no Feature addition: no Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: - Todo: - --------------------------------------------------------------------------- by stof at 2012-04-04T18:59:02Z ah sorry, I looked at the patch too fast. Only the interface is moved",PHP
"finished `bundle install` there are problem with sqlite3. The workaround was: sudo ln -s /usr/bin/install /bin/install yes, it's rather silly. the Makefile that generated by mkcfg is pointing install to /bin/install that doesn't exist. The actual directory of install command is in /usr/bin. And this linking is solved it.",Ruby
Lang fixes! YAY,PHP
Yay,VimL
Merge pull request #49 from gbrindisi/prompt Added basic yes/no prompt module,Python
"merged branch jjbohn/feature/property-path-hasser (PR #3549) Commits ------- b6ac1aa [FORM] Give PropertyPath ability to read hassers Discussion ---------- [Form] Give PropertyPath ability to read hassers Bug fix: no Feature addition: yes Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: - Todo: - Using a `hasser` instead of `isser` for Boolean values is pretty common. I've found myself using `issers` a handful of times just to make an interface play nice with the form component, but the code reads funny now. I don't think we should be accounting for every possible `getter` variation, but I think this one is common enough that it warrants a discussion. --------------------------------------------------------------------------- by fabpot at 2012-03-11T08:25:31Z I tend to agree with with. What do you think @bschussek? --------------------------------------------------------------------------- by kriswallsmith at 2012-03-16T22:42:28Z I'm not so sure. There are lots of reasons to write a *hasser* that accepts an argument (i.e. `User::hasRole($role)`). Doesn't seem as clean as *issers* and *getters*. --------------------------------------------------------------------------- by vicb at 2012-03-16T22:49:14Z > There are lots of reasons to write a hasser that accepts an argument May be can check for 0 args as we are already using reflexion ? --------------------------------------------------------------------------- by kriswallsmith at 2012-03-16T22:55:43Z In that case we should check that there are either 0 arguments or only optional arguments and also consider adding the same logic to the other varieties. --------------------------------------------------------------------------- by jjbohn at 2012-03-16T23:37:47Z Passing arguments seems like a pretty big departure for PropertyPath. How would you annotate that? I'm not sure I see a common use case for needing arguments when mapping data to and from forms. --------------------------------------------------------------------------- by stof at 2012-03-16T23:50:22Z @jjbohn it is not about passing arguments but about using the hasser only if it does not have required arguments --------------------------------------------------------------------------- by jjbohn at 2012-03-17T01:54:18Z Ah. I see. I have a tendency to read @kriswallsmith comments wrong :D. I could see that but iirc, there's not any current check like this on the other accessors. Happy to add it though if there's a consensus. --------------------------------------------------------------------------- by fabpot at 2012-03-17T11:24:34Z What's the point is checking the hasser/getter/isser arguments. It's up to the developer to check if he can use them or not. Let's not complexify the code for this. --------------------------------------------------------------------------- by kriswallsmith at 2012-03-17T15:37:39Z My concern is that someone writes a hasser method on their model that is not intended for use with the form component but it's called anyway, leading to WTFs. --------------------------------------------------------------------------- by stof at 2012-04-03T22:28:21Z @fabpot what's your decision about this ? @jjbohn you need to rebase your PR. It conflicts with master as tests have been moved --------------------------------------------------------------------------- by bschussek at 2012-04-05T14:53:55Z @kriswallsmith is right. The check for 1 === $method->getNumberOfRequiredParameters() can (and should) easily be added to all of the if-clauses here. Apart from that, I'm okay with adding this.",PHP
"merged branch jjbohn/feature/property-path-hasser (PR #3549) Commits ------- b6ac1aa [FORM] Give PropertyPath ability to read hassers Discussion ---------- [Form] Give PropertyPath ability to read hassers Bug fix: no Feature addition: yes Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: - Todo: - Using a `hasser` instead of `isser` for Boolean values is pretty common. I've found myself using `issers` a handful of times just to make an interface play nice with the form component, but the code reads funny now. I don't think we should be accounting for every possible `getter` variation, but I think this one is common enough that it warrants a discussion. --------------------------------------------------------------------------- by fabpot at 2012-03-11T08:25:31Z I tend to agree with with. What do you think @bschussek? --------------------------------------------------------------------------- by kriswallsmith at 2012-03-16T22:42:28Z I'm not so sure. There are lots of reasons to write a *hasser* that accepts an argument (i.e. `User::hasRole($role)`). Doesn't seem as clean as *issers* and *getters*. --------------------------------------------------------------------------- by vicb at 2012-03-16T22:49:14Z > There are lots of reasons to write a hasser that accepts an argument May be can check for 0 args as we are already using reflexion ? --------------------------------------------------------------------------- by kriswallsmith at 2012-03-16T22:55:43Z In that case we should check that there are either 0 arguments or only optional arguments and also consider adding the same logic to the other varieties. --------------------------------------------------------------------------- by jjbohn at 2012-03-16T23:37:47Z Passing arguments seems like a pretty big departure for PropertyPath. How would you annotate that? I'm not sure I see a common use case for needing arguments when mapping data to and from forms. --------------------------------------------------------------------------- by stof at 2012-03-16T23:50:22Z @jjbohn it is not about passing arguments but about using the hasser only if it does not have required arguments --------------------------------------------------------------------------- by jjbohn at 2012-03-17T01:54:18Z Ah. I see. I have a tendency to read @kriswallsmith comments wrong :D. I could see that but iirc, there's not any current check like this on the other accessors. Happy to add it though if there's a consensus. --------------------------------------------------------------------------- by fabpot at 2012-03-17T11:24:34Z What's the point is checking the hasser/getter/isser arguments. It's up to the developer to check if he can use them or not. Let's not complexify the code for this. --------------------------------------------------------------------------- by kriswallsmith at 2012-03-17T15:37:39Z My concern is that someone writes a hasser method on their model that is not intended for use with the form component but it's called anyway, leading to WTFs. --------------------------------------------------------------------------- by stof at 2012-04-03T22:28:21Z @fabpot what's your decision about this ? @jjbohn you need to rebase your PR. It conflicts with master as tests have been moved --------------------------------------------------------------------------- by bschussek at 2012-04-05T14:53:55Z @kriswallsmith is right. The check for 1 === $method->getNumberOfRequiredParameters() can (and should) easily be added to all of the if-clauses here. Apart from that, I'm okay with adding this.",PHP
"merged branch jjbohn/feature/property-path-hasser (PR #3549) Commits ------- b6ac1aa [FORM] Give PropertyPath ability to read hassers Discussion ---------- [Form] Give PropertyPath ability to read hassers Bug fix: no Feature addition: yes Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: - Todo: - Using a `hasser` instead of `isser` for Boolean values is pretty common. I've found myself using `issers` a handful of times just to make an interface play nice with the form component, but the code reads funny now. I don't think we should be accounting for every possible `getter` variation, but I think this one is common enough that it warrants a discussion. --------------------------------------------------------------------------- by fabpot at 2012-03-11T08:25:31Z I tend to agree with with. What do you think @bschussek? --------------------------------------------------------------------------- by kriswallsmith at 2012-03-16T22:42:28Z I'm not so sure. There are lots of reasons to write a *hasser* that accepts an argument (i.e. `User::hasRole($role)`). Doesn't seem as clean as *issers* and *getters*. --------------------------------------------------------------------------- by vicb at 2012-03-16T22:49:14Z > There are lots of reasons to write a hasser that accepts an argument May be can check for 0 args as we are already using reflexion ? --------------------------------------------------------------------------- by kriswallsmith at 2012-03-16T22:55:43Z In that case we should check that there are either 0 arguments or only optional arguments and also consider adding the same logic to the other varieties. --------------------------------------------------------------------------- by jjbohn at 2012-03-16T23:37:47Z Passing arguments seems like a pretty big departure for PropertyPath. How would you annotate that? I'm not sure I see a common use case for needing arguments when mapping data to and from forms. --------------------------------------------------------------------------- by stof at 2012-03-16T23:50:22Z @jjbohn it is not about passing arguments but about using the hasser only if it does not have required arguments --------------------------------------------------------------------------- by jjbohn at 2012-03-17T01:54:18Z Ah. I see. I have a tendency to read @kriswallsmith comments wrong :D. I could see that but iirc, there's not any current check like this on the other accessors. Happy to add it though if there's a consensus. --------------------------------------------------------------------------- by fabpot at 2012-03-17T11:24:34Z What's the point is checking the hasser/getter/isser arguments. It's up to the developer to check if he can use them or not. Let's not complexify the code for this. --------------------------------------------------------------------------- by kriswallsmith at 2012-03-17T15:37:39Z My concern is that someone writes a hasser method on their model that is not intended for use with the form component but it's called anyway, leading to WTFs. --------------------------------------------------------------------------- by stof at 2012-04-03T22:28:21Z @fabpot what's your decision about this ? @jjbohn you need to rebase your PR. It conflicts with master as tests have been moved --------------------------------------------------------------------------- by bschussek at 2012-04-05T14:53:55Z @kriswallsmith is right. The check for 1 === $method->getNumberOfRequiredParameters() can (and should) easily be added to all of the if-clauses here. Apart from that, I'm okay with adding this.",PHP
"Merge pull request #1 from OscarGodson/master OscarGodson Cleaned up the README, yay!",JavaScript
Merge pull request #23 from MoSheriff/master The audio manager is working. Yay. Credit(and potential blame) to Mike.,C++
"Niceify-ing it (Yes, that's a word)",C++
Forgot the MULT:YES tag... whoops! Issue#: TEST-71 git-svn-id: https://pcgen.svn.sourceforge.net/svnroot/pcgen/Trunk/pcgen@16646 b6a209e6-650d-0410-972b-dadffa731f64,Java
"Merged the stars/constellations data with the planet data. Now everything is structured nicely, and things are quick because everything is precomputed! Yay.",JavaScript
apt-get assume yes for setup-ubuntu,Shell
"yay, can now run tests and clear them :D",Emacs Lisp
yay,PHP
"debug still yes, other no",JavaScript
updates: Firefox now works with Hybi-13 (yay!),Java
updates: Firefox now works with Hybi-13 (yay!),Java
Remove Strategy altogether Yay!,Ruby
"merged branch jjbohn/feature/property-path-hasser (PR #3549) Commits ------- b6ac1aa [FORM] Give PropertyPath ability to read hassers Discussion ---------- [Form] Give PropertyPath ability to read hassers Bug fix: no Feature addition: yes Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: - Todo: - Using a `hasser` instead of `isser` for Boolean values is pretty common. I've found myself using `issers` a handful of times just to make an interface play nice with the form component, but the code reads funny now. I don't think we should be accounting for every possible `getter` variation, but I think this one is common enough that it warrants a discussion. --------------------------------------------------------------------------- by fabpot at 2012-03-11T08:25:31Z I tend to agree with with. What do you think @bschussek? --------------------------------------------------------------------------- by kriswallsmith at 2012-03-16T22:42:28Z I'm not so sure. There are lots of reasons to write a *hasser* that accepts an argument (i.e. `User::hasRole($role)`). Doesn't seem as clean as *issers* and *getters*. --------------------------------------------------------------------------- by vicb at 2012-03-16T22:49:14Z > There are lots of reasons to write a hasser that accepts an argument May be can check for 0 args as we are already using reflexion ? --------------------------------------------------------------------------- by kriswallsmith at 2012-03-16T22:55:43Z In that case we should check that there are either 0 arguments or only optional arguments and also consider adding the same logic to the other varieties. --------------------------------------------------------------------------- by jjbohn at 2012-03-16T23:37:47Z Passing arguments seems like a pretty big departure for PropertyPath. How would you annotate that? I'm not sure I see a common use case for needing arguments when mapping data to and from forms. --------------------------------------------------------------------------- by stof at 2012-03-16T23:50:22Z @jjbohn it is not about passing arguments but about using the hasser only if it does not have required arguments --------------------------------------------------------------------------- by jjbohn at 2012-03-17T01:54:18Z Ah. I see. I have a tendency to read @kriswallsmith comments wrong :D. I could see that but iirc, there's not any current check like this on the other accessors. Happy to add it though if there's a consensus. --------------------------------------------------------------------------- by fabpot at 2012-03-17T11:24:34Z What's the point is checking the hasser/getter/isser arguments. It's up to the developer to check if he can use them or not. Let's not complexify the code for this. --------------------------------------------------------------------------- by kriswallsmith at 2012-03-17T15:37:39Z My concern is that someone writes a hasser method on their model that is not intended for use with the form component but it's called anyway, leading to WTFs. --------------------------------------------------------------------------- by stof at 2012-04-03T22:28:21Z @fabpot what's your decision about this ? @jjbohn you need to rebase your PR. It conflicts with master as tests have been moved --------------------------------------------------------------------------- by bschussek at 2012-04-05T14:53:55Z @kriswallsmith is right. The check for 1 === $method->getNumberOfRequiredParameters() can (and should) easily be added to all of the if-clauses here. Apart from that, I'm okay with adding this.",PHP
"Yay, more features",Python
"yay, boost switch",C
"Yes, that is a real file. It's right here. How did you miss it?",Shell
Define the macros HAVE_GL/HAVE_SDL/HAVE_X11/HAVE_GLX to 1 instead of 'yes',C
"- Avoid creating an empty directory. [1] - Remove USE_KDE4, it's useless. - Use bsd.port.mk instead of its pre and post variants. - Bump PORTREVISION. PR: 166546 [1] Feature safe: yes",C
"merged branch bschussek/issue3738 (PR #3807) Commits ------- 6584721 [Form] Improved labels generated by default from form names 6e0b03a [Form] Fixed label of prototype in CollectionType fc342d1 Merge remote branch 'umpirsky/collection-name' into issue3738 f91660d Added test for prototype label. Discussion ---------- [Form] Fixed default label generated for the CollectionType prototype Bug fix: yes Feature addition: no Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: #3738, #3739 Todo: - ![Travis Build Status](https://secure.travis-ci.org/bschussek/symfony.png?branch=issue3738) (the fact that the build fails seems to origin from the broken master)",PHP
"merged branch chmielot/3446-empty-multiple-entity-choice (PR #3734) Commits ------- a430f3d [#3446] [Form] Fix getChoicesForValues of EntityChoiceList on empty values Discussion ---------- [Form] Fix reverseTransform on multiple entity form type Bug fix: yes Feature addition: no Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: #3446, #3727 Todo: - --------------------------------------------------------------------------- by stof at 2012-04-03T23:05:55Z @bschussek ping --------------------------------------------------------------------------- by stof at 2012-04-03T23:06:45Z This is an alternate implementation for #3727 --------------------------------------------------------------------------- by chmielot at 2012-04-04T13:47:27Z OK, this is another possibility to fix this issue with working tests. What do you think about this? --------------------------------------------------------------------------- by chmielot at 2012-04-04T13:51:27Z OK, just done. --------------------------------------------------------------------------- by stof at 2012-04-04T13:51:39Z @beberlei @bschussek ping --------------------------------------------------------------------------- by bschussek at 2012-04-06T18:50:37Z @fabpot :+1:",PHP
"merged branch chmielot/3446-empty-multiple-entity-choice (PR #3734) Commits ------- a430f3d [#3446] [Form] Fix getChoicesForValues of EntityChoiceList on empty values Discussion ---------- [Form] Fix reverseTransform on multiple entity form type Bug fix: yes Feature addition: no Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: #3446, #3727 Todo: - --------------------------------------------------------------------------- by stof at 2012-04-03T23:05:55Z @bschussek ping --------------------------------------------------------------------------- by stof at 2012-04-03T23:06:45Z This is an alternate implementation for #3727 --------------------------------------------------------------------------- by chmielot at 2012-04-04T13:47:27Z OK, this is another possibility to fix this issue with working tests. What do you think about this? --------------------------------------------------------------------------- by chmielot at 2012-04-04T13:51:27Z OK, just done. --------------------------------------------------------------------------- by stof at 2012-04-04T13:51:39Z @beberlei @bschussek ping --------------------------------------------------------------------------- by bschussek at 2012-04-06T18:50:37Z @fabpot :+1:",PHP
Now using generic traits. Yay.,C
yay! dispatching to views,Java
Export the BATCH=yes as well to make sure this works,C
"merged branch ruimarinho/http_digest (PR #3781) Commits ------- fc41d4f [Security] [HttpDigest] Fixes a configuration error caused by an invalid 'key' child node configuration Discussion ---------- [Security] [HttpDigest] Fixes a configuration error caused by an invalid ""key"" child node configuration Bug fix: yes Feature addition: no Backwards compatibility break: no Symfony2 tests pass: ![Build status](https://secure.travis-ci.org/ruimarinho/symfony.png?branch=http_digest)",PHP
merged branch hhamon/route_collection_better_exception_message (PR #3801) Commits ------- 04ae7cc [Routing] fixed exception message. f7647f9 [Routing] improved exception message when giving an invalid route name. Discussion ---------- Route collection better exception message Bug fix: no Feature addition: no Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: - Todo: -,PHP
"merged branch ruimarinho/icu-48-fix (PR #3748) Commits ------- 8689e9c [WIP] [Locale] Fixes NumberFormatter tests failing when using ICU 4.8 or 4.8.1 Discussion ---------- [WIP] [Locale] Fixes NumberFormatter tests failing when using ICU 4.8 or 4.8.1.1 Bug fix: yes Feature addition: no Backwards compatibility break: no Symfony2 tests pass: no Todo: fix DateFormatter The ICU CLDR 2.0 data has been updated on ICU 4.8 and the same data set is used on version 4.8.1.1. The problem is related to [this commit](http://bugs.icu-project.org/trac/changeset?reponame=&new=31307%40icu%2Ftrunk%2Fsource%2Fdata%2Fcurr%2Fen.txt&old=31074%40icu%2Ftrunk%2Fsource%2Fdata%2Fcurr%2Fen.txt) which has since been updated with new data and subsequently shipped with version 49. The `DateFormatter` tests are still failing - see this [gist](https://gist.github.com/2004d40e5167286028ea). Suggestions are welcomed on how to handle this part. Test results with PHP 5.4.0 with ICU 4.8.1.1 on OSX: ```` FAILURES! Tests: 5917, Assertions: 12749, Failures: 26, Incomplete: 11, Skipped: 47. ``` with this WIP patch: ``` FAILURES! Tests: 5917, Assertions: 12749, Failures: 13, Incomplete: 11, Skipped: 47. ```",PHP
"merged branch jjbohn/feature/property-path-hasser (PR #3549) Commits ------- b6ac1aa [FORM] Give PropertyPath ability to read hassers Discussion ---------- [Form] Give PropertyPath ability to read hassers Bug fix: no Feature addition: yes Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: - Todo: - Using a `hasser` instead of `isser` for Boolean values is pretty common. I've found myself using `issers` a handful of times just to make an interface play nice with the form component, but the code reads funny now. I don't think we should be accounting for every possible `getter` variation, but I think this one is common enough that it warrants a discussion. --------------------------------------------------------------------------- by fabpot at 2012-03-11T08:25:31Z I tend to agree with with. What do you think @bschussek? --------------------------------------------------------------------------- by kriswallsmith at 2012-03-16T22:42:28Z I'm not so sure. There are lots of reasons to write a *hasser* that accepts an argument (i.e. `User::hasRole($role)`). Doesn't seem as clean as *issers* and *getters*. --------------------------------------------------------------------------- by vicb at 2012-03-16T22:49:14Z > There are lots of reasons to write a hasser that accepts an argument May be can check for 0 args as we are already using reflexion ? --------------------------------------------------------------------------- by kriswallsmith at 2012-03-16T22:55:43Z In that case we should check that there are either 0 arguments or only optional arguments and also consider adding the same logic to the other varieties. --------------------------------------------------------------------------- by jjbohn at 2012-03-16T23:37:47Z Passing arguments seems like a pretty big departure for PropertyPath. How would you annotate that? I'm not sure I see a common use case for needing arguments when mapping data to and from forms. --------------------------------------------------------------------------- by stof at 2012-03-16T23:50:22Z @jjbohn it is not about passing arguments but about using the hasser only if it does not have required arguments --------------------------------------------------------------------------- by jjbohn at 2012-03-17T01:54:18Z Ah. I see. I have a tendency to read @kriswallsmith comments wrong :D. I could see that but iirc, there's not any current check like this on the other accessors. Happy to add it though if there's a consensus. --------------------------------------------------------------------------- by fabpot at 2012-03-17T11:24:34Z What's the point is checking the hasser/getter/isser arguments. It's up to the developer to check if he can use them or not. Let's not complexify the code for this. --------------------------------------------------------------------------- by kriswallsmith at 2012-03-17T15:37:39Z My concern is that someone writes a hasser method on their model that is not intended for use with the form component but it's called anyway, leading to WTFs. --------------------------------------------------------------------------- by stof at 2012-04-03T22:28:21Z @fabpot what's your decision about this ? @jjbohn you need to rebase your PR. It conflicts with master as tests have been moved --------------------------------------------------------------------------- by bschussek at 2012-04-05T14:53:55Z @kriswallsmith is right. The check for 1 === $method->getNumberOfRequiredParameters() can (and should) easily be added to all of the if-clauses here. Apart from that, I'm okay with adding this.",PHP
"merged branch drak/session_flashmessages (PR #3267) Commits ------- 5ae76f1 [HttpFoundation] Update documentation. 910b5c7 [HttpFoudation] CS, more tests and some optimization. b0466e8 [HttpFoundation] Refactored BC Session class methods. 84c2e3c [HttpFoundation] Allow flash messages to have multiple messages per type. Discussion ---------- [2.1][HttpFoundation] Multiple session flash messages Bug fix: no Feature addition: yes Backwards compatibility break: yes, but this already happened in #2583. BC `Session` methods remain unbroken. Symfony2 tests pass: yes Fixes the following tickets: #1863 References the following tickets: #2714, #2753, #2510, #2543, #2853 Todo: - This PR alters flash messages so that it is possible to store more than one message per flash type using the `add()` method or by passing an array of messages to `set()`. __NOTES ABOUT BC__ This PR maintains BC behaviour with the `Session` class in that the old Symfony 2.0 methods will continue to work as before. --------------------------------------------------------------------------- by drak at 2012-02-13T06:28:33Z I think this is ready for review @fabpot @lsmith77 --------------------------------------------------------------------------- by lsmith77 at 2012-02-14T19:30:39Z the FlashBag vs. AutoExpireFlashBag behavior and setup difference should probably also be explained in the upgrading log --------------------------------------------------------------------------- by drak at 2012-02-15T04:43:14Z @lsmith77 Those differences are explained already in the changelog * Added `FlashBag`. Flashes expire when retrieved by `get()` or `all()`. This makes the implementation ESI compatible. * Added `AutoExpireFlashBag` (default) to replicate Symfony 2.0.x auto expire behaviour of messages auto expiring after one page page load. Messages must be retrived by `get()` or `all()`. --------------------------------------------------------------------------- by Crell at 2012-02-19T17:35:34Z Drak asked me to weigh in here with use cases. Drupal currently has a similar session-stored-messaging system in place that I'd like to be able to replace with Flash messages. We frequently have multiple messages within a single request, however, so this change is critical to our being able to do so. For instance, when saving an article in Drupal there is, by default, a ""yay, you saved an article!"" type message that gets displayed. If you also have the site configured to send email when a post is updated, you may see a ""email notifications sent"" message (depending on your access level). If you have a Solr server setup for search, and you're in debug mode, there will also be a ""record ID X added to Solr, it should update in 2 minutes"" message. And if there's a bug somewhere, you'll also get, as an error message rather than notice message, a ""Oops, E_NOTICE on line 54"" message. Form validation is another case. If you have multiple errors in a single form, we prefer to list all of them. So if you screw up 4 times on a form, you may get 4 different error messages showing what you screwed up so you can fix it in one go instead of several. Now sure, one could emulate that by building a multi-message layer on top of single-layer messages, but, really, why? ""One is a special case of many"", and there are many many cases where you'll want to post multiple messages. Like, most of Drupal. :-) --------------------------------------------------------------------------- by lsmith77 at 2012-03-06T20:55:51Z @fabpot is there any information you still need before merging this? do you want more discussion in which case you might want to take this to the mailing list .. --------------------------------------------------------------------------- by drak at 2012-03-08T18:54:13Z Another plus for this PR is that it requires no extra lines of code in templates etc to display the flashes, see https://github.com/symfony/symfony/pull/3267/files#diff-1 --------------------------------------------------------------------------- by drak at 2012-03-15T06:38:21Z Rebased against current `master`, should be mergeable again.. --------------------------------------------------------------------------- by evillemez at 2012-03-17T03:08:41Z +1 to this, I have an extended version of HttpFoundation just for this... would love to get rid of it.",PHP
"merged branch bschussek/issue3661 (PR #3821) Commits ------- e0ce6b4 [Form] Fixed required value guessed by ValidatorTypeGuesser Discussion ---------- [Form] Fixed required value guessed by ValidatorTypeGuesser Bug fix: yes Feature addition: no Backwards compatibility break: no* Symfony2 tests pass: yes Fixes the following tickets: #3661 Todo: - ![Travis Build Status](https://secure.travis-ci.org/bschussek/symfony.png?branch=issue3661) The documentation states that a field is set to required if constrained with NotBlank or NotNull and to not required otherwise. Due to a bug this was not the case and fields were always required. This is now fixed. The consequence is that some fields that were required before by default are not required anymore. The only difference is that the HTML5 ""required"" attribute disappears, because server-side validation did not occur before anyway.",PHP
"merged branch bschussek/issue3661 (PR #3821) Commits ------- e0ce6b4 [Form] Fixed required value guessed by ValidatorTypeGuesser Discussion ---------- [Form] Fixed required value guessed by ValidatorTypeGuesser Bug fix: yes Feature addition: no Backwards compatibility break: no* Symfony2 tests pass: yes Fixes the following tickets: #3661 Todo: - ![Travis Build Status](https://secure.travis-ci.org/bschussek/symfony.png?branch=issue3661) The documentation states that a field is set to required if constrained with NotBlank or NotNull and to not required otherwise. Due to a bug this was not the case and fields were always required. This is now fixed. The consequence is that some fields that were required before by default are not required anymore. The only difference is that the HTML5 ""required"" attribute disappears, because server-side validation did not occur before anyway.",PHP
SIL Compiler complete with interpretation!! SIM Code Generation to be completed. Yipee ki yay!!,C
"Windows: Always normalize paths to Windows-style It appears that `pwd` returns the POSIX-style or the DOS-style path depending which style the previous `cd` used. To normalize, enforce `pwd -W` in scripts. From the original e-mail exchange: On Thu, Mar 22, 2012 at 11:13:37AM +0100, Sebastian Schuberth wrote: > On Wed, Mar 21, 2012 at 22:21, Johannes Sixt <j6t@kdbg.org> wrote: > > > I build git and run its tests outside the msysgit environment. Does that > > explain the difference? (And I use CMD.) > > It does not make a difference for me. I started cmd.exe at > c:\msysgit\git\t, added c:\msysgit\bin temporarily to PATH, and ran > ""sh t5526-fetch-submodules.sh -i -v"", and the test still fails. Yes it probably does. Johannes said that he runs the tests outside of the msysgit folder. That way there is only one path the submodule script gets reported and not two like '/c/msysgit/git' and '/git'. That would explain to me why it is passing. I am afraid that the only solution is to patch msys itself to report the long absolute path when passing window style paths to cd. Currently when I do cd c:/msysgit/git I will end up in '/git' instead of the long path. I found that there is a -W option to pwd in msys bash which makes it always return the real windows path. A normalization in that direction is unique and thus might be more robust. Have a look at the attached patch. With this at least t5526 passes. I was not able to run the whole testsuite properly at the moment. I can have a look at that tomorrow. What do you think? Cheers Heiko Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>",C
"merged branch jakzal/SetCookieWithMultipleCookiesBugFix (PR #3823) Commits ------- 7f92833 [BrowserKit] Fixed cs. df3da28 [BrowserKit] Using assertNull instead of assertEquals. 87890d3 [BrowserKit] Fixed CookieJar issue being unable to parse multiple cookies from Set-Cookie. Discussion ---------- [BrowserKit] Fixed CookieJar being unable to parse multiple cookies Fix proposition for #3109 My fix splits value of *Set-Cookie* header by comma. Than it checks each extracted part if it starts with a cookie-name (token). If check is positive cookie is added to the list. Otherwise it's appended to the previous value. First element is always added to the list. [rfc6265](http://tools.ietf.org/html/rfc6265) defines cookie-name with token: cookie-name = token token = <token, defined in [RFC2616], Section 2.2> token is defined in [rfc2616](http://tools.ietf.org/html/rfc2616#section-2.2) as follows: token = 1*<any CHAR except CTLs or separators> CHAR = <any US-ASCII character (octets 0 - 127)> separators = ""("" | "")"" | ""<"" | "">"" | ""@"" | "","" | "";"" | "":"" | ""\"" | <""> | ""/"" | ""["" | ""]"" | ""?"" | ""="" | ""{"" | ""}"" | SP | HT That means cookie-name can be built out of following set of characters: *! # $ % & ' * + - . ^ _ ` | ~ 0-9 A-Z a-z* Bug fix: yes Feature addition: no Backwards compatibility break: no Symfony2 tests pass: yes",PHP
"merged branch jakzal/SetCookieWithMultipleCookiesBugFix (PR #3823) Commits ------- 7f92833 [BrowserKit] Fixed cs. df3da28 [BrowserKit] Using assertNull instead of assertEquals. 87890d3 [BrowserKit] Fixed CookieJar issue being unable to parse multiple cookies from Set-Cookie. Discussion ---------- [BrowserKit] Fixed CookieJar being unable to parse multiple cookies Fix proposition for #3109 My fix splits value of *Set-Cookie* header by comma. Than it checks each extracted part if it starts with a cookie-name (token). If check is positive cookie is added to the list. Otherwise it's appended to the previous value. First element is always added to the list. [rfc6265](http://tools.ietf.org/html/rfc6265) defines cookie-name with token: cookie-name = token token = <token, defined in [RFC2616], Section 2.2> token is defined in [rfc2616](http://tools.ietf.org/html/rfc2616#section-2.2) as follows: token = 1*<any CHAR except CTLs or separators> CHAR = <any US-ASCII character (octets 0 - 127)> separators = ""("" | "")"" | ""<"" | "">"" | ""@"" | "","" | "";"" | "":"" | ""\"" | <""> | ""/"" | ""["" | ""]"" | ""?"" | ""="" | ""{"" | ""}"" | SP | HT That means cookie-name can be built out of following set of characters: *! # $ % & ' * + - . ^ _ ` | ~ 0-9 A-Z a-z* Bug fix: yes Feature addition: no Backwards compatibility break: no Symfony2 tests pass: yes",PHP
Pizza? YES PLOX!,Perl
"merged branch jakzal/SetCookieWithMultipleCookiesBugFix (PR #3823) Commits ------- 7f92833 [BrowserKit] Fixed cs. df3da28 [BrowserKit] Using assertNull instead of assertEquals. 87890d3 [BrowserKit] Fixed CookieJar issue being unable to parse multiple cookies from Set-Cookie. Discussion ---------- [BrowserKit] Fixed CookieJar being unable to parse multiple cookies Fix proposition for #3109 My fix splits value of *Set-Cookie* header by comma. Than it checks each extracted part if it starts with a cookie-name (token). If check is positive cookie is added to the list. Otherwise it's appended to the previous value. First element is always added to the list. [rfc6265](http://tools.ietf.org/html/rfc6265) defines cookie-name with token: cookie-name = token token = <token, defined in [RFC2616], Section 2.2> token is defined in [rfc2616](http://tools.ietf.org/html/rfc2616#section-2.2) as follows: token = 1*<any CHAR except CTLs or separators> CHAR = <any US-ASCII character (octets 0 - 127)> separators = ""("" | "")"" | ""<"" | "">"" | ""@"" | "","" | "";"" | "":"" | ""\"" | <""> | ""/"" | ""["" | ""]"" | ""?"" | ""="" | ""{"" | ""}"" | SP | HT That means cookie-name can be built out of following set of characters: *! # $ % & ' * + - . ^ _ ` | ~ 0-9 A-Z a-z* Bug fix: yes Feature addition: no Backwards compatibility break: no Symfony2 tests pass: yes",PHP
"merged branch stof/autoloader_refactoring (PR #3756) Commits ------- f1f1494 Added an exception when passing an invalid object to ApcClassLoader f5cb167 [ClassLoader] Added a DebugClassLoader using composition 0e54a22 Updated the changelog eae772e [ClassLoader] Added an ApcClassLoader 4d1333f Changed the test autoloading to use the new autoloader 09850bd [ClassLoader] Added a simplified PSR-0 ClassLoader Discussion ---------- Autoloader refactoring Bug fix: no Feature addition: yes Backwards compatibility break: no Symfony2 tests pass: [![Build Status](https://secure.travis-ci.org/stof/symfony.png?branch=autoloader_refactoring)](http://travis-ci.org/stof/symfony) As discussed in #3623, I added a new ClassLoader instead of modifying the UniversalClassLoader, to be able to use the method names without BC concerns. The new class works the same than the composer autoloader regarding the handling of fallbacks, to be able to reuse namespace maps generated by composer. ```php <?php // autoload.php require_once __DIR__.'/vendor/symfony/class-loader/Symfony/Component/ClassLoader/ClassLoader.php'; $loader = new Symfony\Component\ClassLoader\ClassLoader(); $map = require __DIR__.'/vendor/.composer/autoload_namespaces.php'; $loader->addPrefixes($map); $loader->register(); ``` Differences with the composer class loader: - Composer's ``add`` method is named ``addPrefix`` in the Symfony ClassLoader - the methods related to the class map are removed as Symfony has a separate laoder for class maps - the ``addPrefixes`` method is added, accepting a namespace map. I also added a new ApcClassLoader which uses composition instead of inheriting from a class loader, which makes it far more easier to reuse (we could wrap a Composer autoloader with it for instance). ```php <?php $composerLoader = require __DIR__.'/vendor/.composer/autoload.php'; // no need to require the file manually as Composer already registered its autoloader $cachedLoader = new Symfony\Component\ClassLoader\ApcClassLoader('autoload.my_app', $composerLoader); $cachedLoader->register(); // unregister the Composer autoloader as we wrapped it in the ApcClassLoader $composerLoader->unregister(); ``` TODO: - refactor the Debug class loader to use composition too to be able to support different class loaders --------------------------------------------------------------------------- by fabpot at 2012-04-02T16:31:28Z Can you update the CHANGELOG and the UPGRADE file accordingly? --------------------------------------------------------------------------- by stof at 2012-04-02T16:47:43Z I added a note in the CHANGELOG. There is nothing to add in the UPGRADE file as the change is fully BC (I did not change the UniversalClassLoader at all so it can still be used). I'm working on the Debug loader right now so please wait a bit before merging --------------------------------------------------------------------------- by stof at 2012-04-02T17:12:11Z Here is a new DebugClassLoader using composition too. this way, it is able to support the UniversalClassLoader, the ApcUniversalClassLoader (without dropping the use of APC as done previously), the new ClassLoader, the new ApcClassLoader and even the composer autoloader. I'm not sure about the use of ``method_exists`` as it could break if an autoloader implements a protected ``findFile`` method (crappy PHP :cry:) but hardcoding the supported classes would be a pain and requiring an interface would make the autoloaders more difficult to use (as the interface would need to be required first) and would drop the support of the composer autoloader.",PHP
"Move conflicts, YAY me.",JavaScript
Yay testing\!,JavaScript
Yay :D,JavaScript
Displays bingo board with semi-working menu bar.,Python
Adding new class MainDisplay. Yes it looks terrible.,Java
Fixed assessment multiple edits issue Added MessageBox inbuilt YES NO CANCEL buttons instead Override and Update buttons. Ready to Deploy #863 Change-Id: Ib293d486271d506fca16f06d5bbc1ef7bfdc2910 Reviewed-on: http://review.source.gogoego.com/3967 Reviewed-by: Carl Scott <carl.scott@solertium.com> Tested-by: Carl Scott <carl.scott@solertium.com>,Java
Yay small changes that I thought I committed,JavaScript
Yes it is,PHP
"Fix SIGFPE in pkg register when 'SHLIBS: yes' is set in pkg.conf (analyse_elf) Extract some data to do with dynamic libraries from shdr within the loop scanning all ELF sections, while shdr still refers to the .DYNAMIC section. (analyse_elf) Don't try and read data from the notes section if no notes section was found. (analyse_elf) No need to read shlibs and autodeps configuration settings from pkg.conf in this function. (test_depends) Call dlclose() when returning early because of not doing autodeps processing. (pkgdb_register_pkg) Delete duplicated block of code.",C
- moved to apt-get since is more quicker - `--assume-yes` by default,VimL
Allow making of the yes-model from an alphabet instead of a model.,C
"Removed eproject recipe, yay! I like project-root better.",Perl
Add --yes option,Scala
hurray,C++
yay,JavaScript
"[Build] Change the build system to use xbuild instead of makefiles The actual compilation process now happens with xbuild. The root makefile just issues an ""xbuild Main.sln"" call. If you type 'make' in a subdirectory you will issue an 'xbuild foo.csproj' for that dir and every subdir. This is slightly slower than building Main.sln directly if many subdirs are being built. 'make dist' is now implemented with a call to 'git archive' which means our tarball really does contain everything we need to build monodevelop (yay!). Makefile integration is now disabled (it's unnecessary). We now put test assemblies in build/test too to avoid polluting build/bin and build/Addins",C#
default yum answers to yes,Shell
"make it globally configurable whether to use mag or not default is yes for all ahrs algos, except float_dcm where the default is not to use the mag to disable the mag, explicitly configure USE_MAGNETOMETER to zero. e.g.: <subsystem name""ahrs"" type=""int_cmpl_quat""> <configure name=""USE_MAGNETOMETER"" value=""0""/> </subsystem)",C
"Animated background tiles, yay!",JavaScript
"This makes the build fail as it should now, yay!",Java
"yay for more organization, yay for a shiny readme",JavaScript
"Merge branch 'drm-prime-dmabuf-initial' of git://people.freedesktop.org/~airlied/linux Pull dma-buf prime support from Dave Airlie: ""This isn't a majorly urgent thing to have, but we'd like to set the stage for working on dma-buf support in the drm drivers for the next merge window, so I'd like to push in the initial submission now so people have something that we can build on top of. The code just introduces the user interface and internal helper functions for drivers to use. We have driver support under development for i915, nouveau, udl on x86 and exynos, omapdrm on arm, which we would be aiming for the next merge window."" In the -rc1 announcement I asked for people who would use this to comment on it, and got severa ""Yes please"" from people for this and for HSI (that I merged earlier). So far crickets on pohmelfs and the DMA-mapping infrastructure. * 'drm-prime-dmabuf-initial' of git://people.freedesktop.org/~airlied/linux: drm: base prime/dma-buf support (v5)",C
This is getting very interesting right now. I'm excited.,JavaScript
"IntegerUs! Yes, why not?! There's already a DecimalUs there... Also, using data-meiomask-option isn't easily feasible in a xslt file (parser thinks its an attribute value template). A possible fix is to assume that the value of the meiomask-option is an object body, but it will break everything :P",JavaScript
"Added class=""submit"" to create new mat button Updated asset paths to new syntax and removed .erb Yay!",Ruby
"Merge pull request #104 from placeboArts/master Added class=""submit"" to create new mat button Updated asset paths to new syntax and removed .erb Yay!",Ruby
"Yay! Fixed Source multi packets reading. However, code currently is very ""raw"" and requires very big cleanup. Also started working on source rcon protocol implementation.",PHP
"Yay! Fixed Source multi packets reading. However, code currently is very ""raw"" and requires very big cleanup. Also started working on source rcon protocol implementation.",PHP
Fixed rocketjump not happening and got the client prediction working. Yay.,Python
Fixed rocketjump not happening and got the client prediction working. Yay.,Python
Merge pull request #176 from infracaninophile/master Fix SIGFPE when SHLIBS: yes is set in pkg.conf,C
yay java,Java
"merged branch Tobion/command-name (PR #3285) Commits ------- 447d468 restore previous testing style with static fixtures for console 11585c3 fix Command:asXml to use processed help 304e13d replaced command names with supported placeholders in help texts Discussion ---------- using the placeholder in command help texts Replaced the command names with the already supported placeholders `%command.name%` and `%command.full_name%`. Thus preventing typos in future commands based on the existing ones. --------------------------------------------------------------------------- by fabpot at 2012-02-09T06:26:07Z That breaks the unit tests. --------------------------------------------------------------------------- by Tobion at 2012-02-09T17:05:06Z fixed --------------------------------------------------------------------------- by stof at 2012-02-09T17:43:47Z can you rebase your branch please ? it conflicts with master --------------------------------------------------------------------------- by stof at 2012-02-09T17:44:11Z the reason is simple: SwiftmailerBundle is gone :) --------------------------------------------------------------------------- by Tobion at 2012-02-09T23:23:23Z done --------------------------------------------------------------------------- by fabpot at 2012-02-11T23:47:10Z Can you squash your commit before I merge this PR? Thanks. --------------------------------------------------------------------------- by Tobion at 2012-02-12T13:57:14Z I'm unable to squash it into 1 commit because of the uptream commits inside. I hope it's fine now. If not someone needs to help me. --------------------------------------------------------------------------- by stof at 2012-02-12T14:27:38Z ``git rebase -i upstream/master`` should allow you rebasing things and squashing them toghter (changing the action for the second commit to ``squash``) --------------------------------------------------------------------------- by Tobion at 2012-02-12T14:47:29Z first i tried with git rebase -i head~4 (4 commits), but this showed many more external commits. second I tried git reset --soft with a clean commit, but still no success. then I used your proposal. and there are always conflicts of stuff that is not part of my PR. now the diff is messed up... this is frustrating --------------------------------------------------------------------------- by stof at 2012-02-12T14:58:43Z The only reason why the diff is messed is because you messed it when resolving the conflicts by choosing the wrong result for the output. Please fix things as it means that merging your PR would revert changes done previosuly --------------------------------------------------------------------------- by stof at 2012-02-12T15:00:18Z Basically, you reverted most of the changes done in Symfony the few last days. --------------------------------------------------------------------------- by Tobion at 2012-02-12T15:10:59Z I used `git checkout --theirs .` when resolving. Whats the correct way? --------------------------------------------------------------------------- by stof at 2012-02-12T15:13:21Z Well, I generally resolve the conflicts myself instead of asking git to use one version, as generally the final code is not one of the versions by a mix of both versions (as both sides are likely to have done useful changes) --------------------------------------------------------------------------- by Tobion at 2012-02-12T15:15:02Z Yes but the conflicts are in files I never touched and that are not part of my changes. I cannot resolve hundreds of files by hand. --------------------------------------------------------------------------- by Tobion at 2012-02-12T15:41:31Z Finally it worked. I used git reset head~1 and then discarded all foreign changes. There you go. --------------------------------------------------------------------------- by Tobion at 2012-02-14T14:06:04Z @fabpot ping --------------------------------------------------------------------------- by Tobion at 2012-02-20T18:20:50Z @fabpot ping --------------------------------------------------------------------------- by stof at 2012-03-02T22:14:49Z @Tobion the branch needs to be rebased. It conflicts with master --------------------------------------------------------------------------- by Tobion at 2012-03-21T04:22:10Z All done. I don't want to squash commits because they are self-contained fixes and changes that might be needed for future references (like the dynamic tests for -`>run()`).",PHP
"merged branch Tobion/command-name (PR #3285) Commits ------- 447d468 restore previous testing style with static fixtures for console 11585c3 fix Command:asXml to use processed help 304e13d replaced command names with supported placeholders in help texts Discussion ---------- using the placeholder in command help texts Replaced the command names with the already supported placeholders `%command.name%` and `%command.full_name%`. Thus preventing typos in future commands based on the existing ones. --------------------------------------------------------------------------- by fabpot at 2012-02-09T06:26:07Z That breaks the unit tests. --------------------------------------------------------------------------- by Tobion at 2012-02-09T17:05:06Z fixed --------------------------------------------------------------------------- by stof at 2012-02-09T17:43:47Z can you rebase your branch please ? it conflicts with master --------------------------------------------------------------------------- by stof at 2012-02-09T17:44:11Z the reason is simple: SwiftmailerBundle is gone :) --------------------------------------------------------------------------- by Tobion at 2012-02-09T23:23:23Z done --------------------------------------------------------------------------- by fabpot at 2012-02-11T23:47:10Z Can you squash your commit before I merge this PR? Thanks. --------------------------------------------------------------------------- by Tobion at 2012-02-12T13:57:14Z I'm unable to squash it into 1 commit because of the uptream commits inside. I hope it's fine now. If not someone needs to help me. --------------------------------------------------------------------------- by stof at 2012-02-12T14:27:38Z ``git rebase -i upstream/master`` should allow you rebasing things and squashing them toghter (changing the action for the second commit to ``squash``) --------------------------------------------------------------------------- by Tobion at 2012-02-12T14:47:29Z first i tried with git rebase -i head~4 (4 commits), but this showed many more external commits. second I tried git reset --soft with a clean commit, but still no success. then I used your proposal. and there are always conflicts of stuff that is not part of my PR. now the diff is messed up... this is frustrating --------------------------------------------------------------------------- by stof at 2012-02-12T14:58:43Z The only reason why the diff is messed is because you messed it when resolving the conflicts by choosing the wrong result for the output. Please fix things as it means that merging your PR would revert changes done previosuly --------------------------------------------------------------------------- by stof at 2012-02-12T15:00:18Z Basically, you reverted most of the changes done in Symfony the few last days. --------------------------------------------------------------------------- by Tobion at 2012-02-12T15:10:59Z I used `git checkout --theirs .` when resolving. Whats the correct way? --------------------------------------------------------------------------- by stof at 2012-02-12T15:13:21Z Well, I generally resolve the conflicts myself instead of asking git to use one version, as generally the final code is not one of the versions by a mix of both versions (as both sides are likely to have done useful changes) --------------------------------------------------------------------------- by Tobion at 2012-02-12T15:15:02Z Yes but the conflicts are in files I never touched and that are not part of my changes. I cannot resolve hundreds of files by hand. --------------------------------------------------------------------------- by Tobion at 2012-02-12T15:41:31Z Finally it worked. I used git reset head~1 and then discarded all foreign changes. There you go. --------------------------------------------------------------------------- by Tobion at 2012-02-14T14:06:04Z @fabpot ping --------------------------------------------------------------------------- by Tobion at 2012-02-20T18:20:50Z @fabpot ping --------------------------------------------------------------------------- by stof at 2012-03-02T22:14:49Z @Tobion the branch needs to be rebased. It conflicts with master --------------------------------------------------------------------------- by Tobion at 2012-03-21T04:22:10Z All done. I don't want to squash commits because they are self-contained fixes and changes that might be needed for future references (like the dynamic tests for -`>run()`).",PHP
"Created basic network package, using JSON format. length also sent, not sure if need this, probably yes. improved server and client side.",JavaScript
"Implemented a global WebView. Yes, this sounds like a bad idea. No it isn't.",Objective-C
Passing tests yay,Java
FUCK YES! Zooming finally works. After five hours Doesn't look like much does it?,Java
yes,JavaScript
add expect syntax of yes/no,Shell
set CONFIG_MSM_HW3D to yes,C
"yes, deactivated tagged logging in production as well, trottel",JavaScript
"Revert ""Don't iconify the conversation window twice."" This reverts commit 2996cabd6f9c4cff9f3bfe8aa2578fd17b207821. indeed, IIRC the gtk docs say calling iconify() before show() should present the window iconified. turns out it's not always true hence the second call to iconify() (this one that should be wrong, actually) we need them both (yes, this is AN HAX! :D)",Python
finished login sequence. YAY,Java
"Explicit imports in horizons.i18n My brain as well as my vim-pyflakes were telling me that was going to raise an NameError, but apparantly this works. <marienz> squiddy: yes, imported modules from a package are available as attributes of that package If you think about it, it does make sense somehow. Change it anyway, this is too weird and will break when moving code.",Python
"Cleaned up incrementation Discovered the += operator, yay!",Python
changed delaysContentTouches to YES so you can scroll with the field.,Objective-C
"bit of preparation for porting cone and cylinder: yes, both can be done with triangle strips (and then special treatment of cone tip isn't needed) git-svn-id: https://freeglut.svn.sourceforge.net/svnroot/freeglut/trunk@1212 7f0cb862-5218-0410-a997-914c9d46530a",C
BOA: Allow to skip Aegir Master Instance upgrade on Barracuda upgrade and force this as skip=YES on major OS upgrade (Robert),Shell
"Referral forms are hidden unless ""yes"" is selected",Ruby
set CONFIG_MSM_HW3D to yes,C
"New version of vectors Changed the interface, now for creating a vector you do: #define VECTOR_TYPE int #define VECTOR_PREFIX int #include ""vector.h"" #undef VECTOR_TYPE #undef VECTOR_PREFIX Yes you need to specify the prefix, it's called ""mangling-DIY"". We could have deduced the prefix from the type, but what if: #define VECTOR_TYPE struct foo #include ""vector.h"" #undef VECTOR_TYPE Now the generated functions are visible in a debugger. And we don't need to finish all the line by ""\"" ouf !",C
"Whoops (yes, again).",Ruby
"Yeah. The auto completer works. But yes, i know that you could change to directory if it goes after the completer ;-)",Python
"merged branch drak/session_gc (PR #3659) Commits ------- cdba4cf [FrameworkBundle] Change XSD to allow string replacements on session args. 52f7955 [FrameworkBundle] Remove default from gc_* session configuration keys. 749593d [FrameworkBundle] Allow configuration of session garbage collection for session 'keep-alive'. Discussion ---------- [2.1][FrameworkBundle] Allow configuration of session garbage collection Bug fix: no Feature addition: yes Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: #2171 Todo: - --------------------------------------------------------------------------- by drak at 2012-03-21T21:56:20Z @fabpot - this PR is ready for merge. It basically allows configuration of some session ini values that are necessary in controlling the session behaviour. --------------------------------------------------------------------------- by dlsniper at 2012-03-21T22:57:18Z @drak shouldn't all the options here: https://github.com/symfony/symfony/blob/master/src/Symfony/Component/HttpFoundation/Session/Storage/NativeSessionStorage.php#L266 be available for configuration, or am I just reading the source wrong and they already are? In this case should I make a separate PR to cover the rest or could you do it in this one? --------------------------------------------------------------------------- by fabpot at 2012-03-23T14:56:22Z @drak: the discussion is the ticket is very interesting and I think it should be part of a cookbook in the documentation. Can you take care of that before I merge this PR? Thanks. --------------------------------------------------------------------------- by drak at 2012-03-25T15:32:59Z @fabpot - yes - it's on the todo list. Will update this PR when done. --------------------------------------------------------------------------- by drak at 2012-03-26T19:45:13Z @fabpot - this is ready for merging, the documentation is done (the PR is in but I'll tweak it, but no need to wait to merge this PR). I will also add something extra to cookbook (I wrote docs for the component).",PHP
"merged branch drak/session_gc (PR #3659) Commits ------- cdba4cf [FrameworkBundle] Change XSD to allow string replacements on session args. 52f7955 [FrameworkBundle] Remove default from gc_* session configuration keys. 749593d [FrameworkBundle] Allow configuration of session garbage collection for session 'keep-alive'. Discussion ---------- [2.1][FrameworkBundle] Allow configuration of session garbage collection Bug fix: no Feature addition: yes Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: #2171 Todo: - --------------------------------------------------------------------------- by drak at 2012-03-21T21:56:20Z @fabpot - this PR is ready for merge. It basically allows configuration of some session ini values that are necessary in controlling the session behaviour. --------------------------------------------------------------------------- by dlsniper at 2012-03-21T22:57:18Z @drak shouldn't all the options here: https://github.com/symfony/symfony/blob/master/src/Symfony/Component/HttpFoundation/Session/Storage/NativeSessionStorage.php#L266 be available for configuration, or am I just reading the source wrong and they already are? In this case should I make a separate PR to cover the rest or could you do it in this one? --------------------------------------------------------------------------- by fabpot at 2012-03-23T14:56:22Z @drak: the discussion is the ticket is very interesting and I think it should be part of a cookbook in the documentation. Can you take care of that before I merge this PR? Thanks. --------------------------------------------------------------------------- by drak at 2012-03-25T15:32:59Z @fabpot - yes - it's on the todo list. Will update this PR when done. --------------------------------------------------------------------------- by drak at 2012-03-26T19:45:13Z @fabpot - this is ready for merging, the documentation is done (the PR is in but I'll tweak it, but no need to wait to merge this PR). I will also add something extra to cookbook (I wrote docs for the component).",PHP
Creating NuGet package for release....YAY 1.0,C#
"Yes! Goodbye FileApi!""",C++
YES! Fixed this terrible extra byte copy per distributed query that we always had to do! We're flying high here! I think I'm going to head home and have dinner now... Hopefully there won't be any failing test cases...,C++
"merged branch drak/session_gc (PR #3659) Commits ------- cdba4cf [FrameworkBundle] Change XSD to allow string replacements on session args. 52f7955 [FrameworkBundle] Remove default from gc_* session configuration keys. 749593d [FrameworkBundle] Allow configuration of session garbage collection for session 'keep-alive'. Discussion ---------- [2.1][FrameworkBundle] Allow configuration of session garbage collection Bug fix: no Feature addition: yes Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: #2171 Todo: - --------------------------------------------------------------------------- by drak at 2012-03-21T21:56:20Z @fabpot - this PR is ready for merge. It basically allows configuration of some session ini values that are necessary in controlling the session behaviour. --------------------------------------------------------------------------- by dlsniper at 2012-03-21T22:57:18Z @drak shouldn't all the options here: https://github.com/symfony/symfony/blob/master/src/Symfony/Component/HttpFoundation/Session/Storage/NativeSessionStorage.php#L266 be available for configuration, or am I just reading the source wrong and they already are? In this case should I make a separate PR to cover the rest or could you do it in this one? --------------------------------------------------------------------------- by fabpot at 2012-03-23T14:56:22Z @drak: the discussion is the ticket is very interesting and I think it should be part of a cookbook in the documentation. Can you take care of that before I merge this PR? Thanks. --------------------------------------------------------------------------- by drak at 2012-03-25T15:32:59Z @fabpot - yes - it's on the todo list. Will update this PR when done. --------------------------------------------------------------------------- by drak at 2012-03-26T19:45:13Z @fabpot - this is ready for merging, the documentation is done (the PR is in but I'll tweak it, but no need to wait to merge this PR). I will also add something extra to cookbook (I wrote docs for the component).",PHP
Significant updates to ARFF output and configuration. ARFF output can now be controlled with arbitrary configuration files (based on protk2.config) specified with the `--config` option. Smoothing fixes. Improved search-based truth values (YES if any of options specified with `--searchfor`. Searching also searches based on midpoint of elements instead of start and end.,Python
"merged branch cedriclombardot/feat-propel-explain (PR #3616) Commits ------- 9ef5e95 Add connection name in the propel data collector Discussion ---------- Add connection name in the propel data collector Bug fix: no Feature addition: yes, This will allow to explain a propel query on a specific connection Backwards compatibility break: no Symfony2 tests pass: yes - Require PR propelorm/Propel#315 - Related to PR propelorm/PropelBundle#129 cc @willdurand --------------------------------------------------------------------------- by willdurand at 2012-03-16T18:17:26Z @fabpot please, let me merge Propel related PRs before that one, thanks! --------------------------------------------------------------------------- by willdurand at 2012-03-26T08:38:36Z @fabpot good to go from my point of view",PHP
yes,JavaScript
merged branch jalliot/header-bag (PR #3702) Commits ------- 15dd17e Simplified CONTENT_ headers retrieval Discussion ---------- Header bag Bug fix: yes Feature addition: no Backwards compatibility break: no Symfony2 tests pass: yes (actually no but I think this has nothing to do with this PR...) Fixes the following tickets: - Todo: -,PHP
yay layers,JavaScript
"merged branch cedriclombardot/feat-propel-explain (PR #3616) Commits ------- 9ef5e95 Add connection name in the propel data collector Discussion ---------- Add connection name in the propel data collector Bug fix: no Feature addition: yes, This will allow to explain a propel query on a specific connection Backwards compatibility break: no Symfony2 tests pass: yes - Require PR propelorm/Propel#315 - Related to PR propelorm/PropelBundle#129 cc @willdurand --------------------------------------------------------------------------- by willdurand at 2012-03-16T18:17:26Z @fabpot please, let me merge Propel related PRs before that one, thanks! --------------------------------------------------------------------------- by willdurand at 2012-03-26T08:38:36Z @fabpot good to go from my point of view",PHP
yay?,Objective-C
Added quick&dirty syntetic tags for `virt:yes` for virtual machines and `virt:no` for those who aren't.,Python
"Pep8 first try Fixed : Line length Fixed : Space terminated lines Fixed : Remove empty lines with spaces Fixed : Typo requirement Feel free to (dis)agree : espacially in the line cutting, I'm not very proud by the way I did it :p Is it better to use the '\' character every time with have to split a line? For example : between args of a function, during a statement...",Python
"Don't disable user interaction of attributed label userInteractionEnabled will be set to YES if label contains links, but will be not set to NO, if there is no links. This allows using label with gesture recognizers.",Objective-C
yay! GO ME,Objective-C
"Add support for saying 'yes' to all cargo capacity warning windows. This allows materials for war, and any other mission that would give that warning window. Re-enabled the storyline: Materials for War This patch also adds WarpOutStation (to an instaundock bm) support for generic combat storyline missions",C#
Yay it builds.,C++
new platforms...yay,Java
Fuck yes,Java
"Removing things I haven't used in years. Also, I know Markdown now, yay.",VimL
"Hey, actual passing tests for subscribing to things, and the code in the controller is smaller, yes",Ruby
"cleaning up/refactoring - WIP. Yes, some tests are broken",C#
"merged branch drak/kernel_dicb (PR #3909) Commits ------- 82bbf3b [HttpKernel] Allow override of ContainerBuilder instance used to build container Discussion ---------- [HttpKernel] Allow override of ContainerBuilder class in Kernel Bug fix: no Feature addition: yes Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: - Todo: - The ContainerBuilder class is hard coded into the `buildContainer()` method and is therefor not extensible. --------------------------------------------------------------------------- by fabpot at 2012-04-13T04:54:28Z I would definitely prefer a `getContainerBuilder()` that returns a container builder. But why would you want to do that? --------------------------------------------------------------------------- by drak at 2012-04-13T05:12:13Z @fabpot - The use case is to override the behaviour of the compilation that is performed by the kernel on the container. There is no way to override the compile() method called on the builder because the class is created hard in `Kernel::buildContainer()`. This was the simplest way to change it without other cascading changes. If we had a method which returned a container builder instance, would it just be something that creates a container builder, or acts as a getter on a property? The reason I ask is there is no real need to have a container builder persisting in a property, so a method that just returns a `new ContainerBuilder()` would also work but then we have to deal with the constructor as there is no way to set a ParameterBag on a container and `Kernel::buildContainer()` needs that. Basically, my reasoning is that since this particular container is just a throwaway, it seems ok to control the class name that was used to create the throwaway builder. So are you suggesting doing this instead? protected function getContainerBuilder() { return new ContainerBuilder(new ParameterBag($this->getKernelParameters())); } --------------------------------------------------------------------------- by fabpot at 2012-04-13T05:22:20Z Yes this was my suggestion. But are you sure you cannot solve your problems with compiler passes? --------------------------------------------------------------------------- by drak at 2012-04-13T05:38:29Z @fabpot, yes, this particular issue can't be solved by compiler passes. I'll adapt the PR. --------------------------------------------------------------------------- by drak at 2012-04-13T05:46:03Z @fabpot, amended as per your suggestion.",PHP
"merged branch drak/kernel_dicb (PR #3909) Commits ------- 82bbf3b [HttpKernel] Allow override of ContainerBuilder instance used to build container Discussion ---------- [HttpKernel] Allow override of ContainerBuilder class in Kernel Bug fix: no Feature addition: yes Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: - Todo: - The ContainerBuilder class is hard coded into the `buildContainer()` method and is therefor not extensible. --------------------------------------------------------------------------- by fabpot at 2012-04-13T04:54:28Z I would definitely prefer a `getContainerBuilder()` that returns a container builder. But why would you want to do that? --------------------------------------------------------------------------- by drak at 2012-04-13T05:12:13Z @fabpot - The use case is to override the behaviour of the compilation that is performed by the kernel on the container. There is no way to override the compile() method called on the builder because the class is created hard in `Kernel::buildContainer()`. This was the simplest way to change it without other cascading changes. If we had a method which returned a container builder instance, would it just be something that creates a container builder, or acts as a getter on a property? The reason I ask is there is no real need to have a container builder persisting in a property, so a method that just returns a `new ContainerBuilder()` would also work but then we have to deal with the constructor as there is no way to set a ParameterBag on a container and `Kernel::buildContainer()` needs that. Basically, my reasoning is that since this particular container is just a throwaway, it seems ok to control the class name that was used to create the throwaway builder. So are you suggesting doing this instead? protected function getContainerBuilder() { return new ContainerBuilder(new ParameterBag($this->getKernelParameters())); } --------------------------------------------------------------------------- by fabpot at 2012-04-13T05:22:20Z Yes this was my suggestion. But are you sure you cannot solve your problems with compiler passes? --------------------------------------------------------------------------- by drak at 2012-04-13T05:38:29Z @fabpot, yes, this particular issue can't be solved by compiler passes. I'll adapt the PR. --------------------------------------------------------------------------- by drak at 2012-04-13T05:46:03Z @fabpot, amended as per your suggestion.",PHP
"Operator= renamed into assign() Damn! Stupid C++ rules! They do not allow to use a class with copy assignment as member of union (see #2). To sutisfy this requirement, operator= was renamed to assign(). C++ is glad now, but the code got more ugly.",C++
merged branch Tobion/generator-cache (PR #3892) Commits ------- 03d30fd [Routing] remove duplicated cache of compiled routes Discussion ---------- [Routing] remove duplicated cache of compiled routes The UrlGenerator caches compiled routes for generating URLs. But the Route class caches it's compiled route itself as long as it does not get modified. So compiled routes are cached twice which makes no sense in my opinion. Test pass: yes BC break: no,PHP
merged branch drak/eventsubscriber_notice (PR #3900) Commits ------- 57dd914 [EventDispatcher] Fixed E_NOTICES with multiple eventnames per subscriber with mixed priorities Discussion ---------- [EventDispatcher] Fixed E_NOTICES with multiple eventnames per subscriber Bug fix: yes Feature addition: no Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: - Todo: - This fixes a case that was not covered by the existing tests.,PHP
"merged branch Tobion/generator-dumper (PR #3894) Commits ------- 382b083 [Routing] improved generated class by PhpGeneratorDumper 27a05f4 [Routing] small optimization of PhpGeneratorDumper Discussion ---------- [Routing] improved PhpGeneratorDumper Test pass: yes BC break: no The first commit only replaces arrays with strings and makes some cosmetic changes, so that it's more readable. This makes the `PhpGeneratorDumper` consistent in style with `PhpMatcherDumper` that I fixed recently and should slightly improve performance of the generation of the class. The second commit changes the output of the `PhpGeneratorDumper->dump` and tries to optimize the resulting class that is used to generate URLs. It's best explained with an example. Before my changes: ```php class ProjectUrlGenerator extends Symfony\Component\Routing\Generator\UrlGenerator { static private $declaredRouteNames = array( 'Test' => true, 'Test2' => true, ); /** * Constructor. */ public function __construct(RequestContext $context) { $this->context = $context; } public function generate($name, $parameters = array(), $absolute = false) { if (!isset(self::$declaredRouteNames[$name])) { throw new RouteNotFoundException(sprintf('Route ""%s"" does not exist.', $name)); } $escapedName = str_replace('.', '__', $name); list($variables, $defaults, $requirements, $tokens) = $this->{'get'.$escapedName.'RouteInfo'}(); return $this->doGenerate($variables, $defaults, $requirements, $tokens, $parameters, $name, $absolute); } private function getTestRouteInfo() { return array(array ( 0 => 'foo',), array (), array (), array ( 0 => array ( 0 => 'variable', 1 => '/', 2 => '[^/]+?', 3 => 'foo', ), 1 => array ( 0 => 'text', 1 => '/testing', ),)); } private function getTest2RouteInfo() { return array(array (), array (), array (), array ( 0 => array ( 0 => 'text', 1 => '/testing2', ),)); } } ``` After my changes in second commit: ```php class ProjectUrlGenerator extends Symfony\Component\Routing\Generator\UrlGenerator { static private $declaredRoutes = array( 'Test' => array ( 0 => array ( 0 => 'foo', ), 1 => array ( ), 2 => array ( ), 3 => array ( 0 => array ( 0 => 'variable', 1 => '/', 2 => '[^/]+?', 3 => 'foo', ), 1 => array ( 0 => 'text', 1 => '/testing', ), ),), 'Test2' => array ( 0 => array ( ), 1 => array ( ), 2 => array ( ), 3 => array ( 0 => array ( 0 => 'text', 1 => '/testing2', ), ),), ); /** * Constructor. */ public function __construct(RequestContext $context) { $this->context = $context; } public function generate($name, $parameters = array(), $absolute = false) { if (!isset(self::$declaredRoutes[$name])) { throw new RouteNotFoundException(sprintf('Route ""%s"" does not exist.', $name)); } list($variables, $defaults, $requirements, $tokens) = self::$declaredRoutes[$name]; return $this->doGenerate($variables, $defaults, $requirements, $tokens, $parameters, $name, $absolute); } } ``` As you can see, there is no need to escape the route name and invoke a special method anymore. Instead the route properties are included in the static route array directly, that existed anyway. Is also easier to read as defined routes and their properties are in the same place.",PHP
merged branch drak/eventsubscribersnotice (PR #3902) Commits ------- e199049 [EventDispatcher] Fixed edge case not covered by tests that generated E_NOTICES Discussion ---------- [EventDispatcher] Fixed edge case not covered by tests. Bug fix: yes Feature addition: no Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: - Todo: - Fixes case not covered by tests.,PHP
merged branch drak/eventsubscribersnotice (PR #3902) Commits ------- e199049 [EventDispatcher] Fixed edge case not covered by tests that generated E_NOTICES Discussion ---------- [EventDispatcher] Fixed edge case not covered by tests. Bug fix: yes Feature addition: no Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: - Todo: - Fixes case not covered by tests.,PHP
merged branch drak/eventsubscribersnotice (PR #3902) Commits ------- e199049 [EventDispatcher] Fixed edge case not covered by tests that generated E_NOTICES Discussion ---------- [EventDispatcher] Fixed edge case not covered by tests. Bug fix: yes Feature addition: no Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: - Todo: - Fixes case not covered by tests.,PHP
merged branch drak/eventsubscribersnotice (PR #3902) Commits ------- e199049 [EventDispatcher] Fixed edge case not covered by tests that generated E_NOTICES Discussion ---------- [EventDispatcher] Fixed edge case not covered by tests. Bug fix: yes Feature addition: no Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: - Todo: - Fixes case not covered by tests.,PHP
YAY,Java
merged branch hhamon/command_description_fixes (PR #3871) Commits ------- b4f0a04 [TwigBundle] fixed twig:lint command description. 809933f [FrameworkBundle] fixed translation:update command description. Discussion ---------- Command description fixes Bug fix: no Feature addition: no Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: - Todo: -,PHP
practice some *markdown* yes.,Shell
Merge pull request #49 from cp16net/readme-update4 update readme with reclone=yes and kick-start/build-image mysql,Python
"Add translations for dialog (yes,no,cancel)",Perl
[bluray] Delete support for older libbluray xbmc will abort configure if an old libbluray is found and configure is auto or yes. To skip libbluray support in that case explicitly disable it.,C
yay for outline done,JavaScript
yay css,PHP
Moves the valid EPUB stuff from jdh branch to master YAY! VALID EPUB!!!,PHP
"merged branch bschussek/remove-form-validator (PR #3797) Commits ------- 6df7a72 [Form] Deprecated FormValidatorInterface and moved implementations to event listeners Discussion ---------- [Form] Removed FormValidatorInterface and notion of form validators Bug fix: no Feature addition: no Backwards compatibility break: yes Symfony2 tests pass: yes Fixes the following tickets: - Todo: - ![Travis Build Status](https://secure.travis-ci.org/bschussek/symfony.png?branch=remove-form-validator) This cleanup has been lying on a disk for a while, so here it goes. The FormValidatorInterface has been removed in order to reduce the complexity of the Form API. The same expressivity can be achieved by using POST_BIND event listeners. The POST_VALIDATE event introduced in e6577debf6892afeb2d10eb8a3a0fae0d55c9545 can be replaced by a POST_BIND listener with low priority. --------------------------------------------------------------------------- by bschussek at 2012-04-11T15:19:24Z Rebased on master. --------------------------------------------------------------------------- by bschussek at 2012-04-12T12:46:14Z @fabpot Can this be merged?",PHP
yay css,PHP
yay css,PHP
Added conditional folder erasing feature - only cleans up backups folder if $BACKUPSCRIPTCOMPATIBLE is set to yes in the config file.,Shell
yay css,PHP
yay css,PHP
yay css,PHP
"yes, ready for prev/next locations",JavaScript
yay css,PHP
yay css,PHP
yay css,PHP
yay css,PHP
yay css,PHP
yay css,PHP
have a working example. yay.,CoffeeScript
FS-4110 --resolve yes this block is wrong we can't guess the right presence id here,C
"lets just avoid no and yes as keys in YAML, too many issues. Thanks! [ci skip]",Ruby
"Yes, your highness. [ #28010275 ]",JavaScript
merged branch jmikola/doctrine-unique-proxies (PR #3933) Commits ------- 41bdf26 [DoctrineBridge] Initialize proxies in UniqueEntityValidator Discussion ---------- [DoctrineBridge] Initialize proxies in UniqueEntityValidator Bug fix: yes Feature addition: no Backwards compatibility break: no Symfony2 tests pass: [![Build Status](https://secure.travis-ci.org/jmikola/symfony.png?branch=master)](http://travis-ci.org/jmikola/symfony) Fixes the following tickets: #3163 --------------------------------------------------------------------------- by stof at 2012-04-13T18:17:57Z I think you should use ``$em->initializeObject($value)`` instead (which is a no-op for other objects) --------------------------------------------------------------------------- by jmikola at 2012-04-13T18:24:22Z @stof: Thanks for the suggestion. I wasn't aware of that method.,PHP
Spawners work! Yay!,C++
First ever test. Yay \o/,Python
merged branch jmikola/doctrine-unique-proxies (PR #3933) Commits ------- 41bdf26 [DoctrineBridge] Initialize proxies in UniqueEntityValidator Discussion ---------- [DoctrineBridge] Initialize proxies in UniqueEntityValidator Bug fix: yes Feature addition: no Backwards compatibility break: no Symfony2 tests pass: [![Build Status](https://secure.travis-ci.org/jmikola/symfony.png?branch=master)](http://travis-ci.org/jmikola/symfony) Fixes the following tickets: #3163 --------------------------------------------------------------------------- by stof at 2012-04-13T18:17:57Z I think you should use ``$em->initializeObject($value)`` instead (which is a no-op for other objects) --------------------------------------------------------------------------- by jmikola at 2012-04-13T18:24:22Z @stof: Thanks for the suggestion. I wasn't aware of that method.,PHP
"merged branch vicb/profiler/listener_2.0 (PR #3935) Commits ------- 01fcb08 [HttpKernel] Fix the ProfilerListener (fix #3620) Discussion ---------- [HttpKernel] Fix the ProfilerListener (fix #3620) Bug fix: yes Feature addition: no Backwards compatibility break: no Symfony2 tests pass: [![Build Status](https://secure.travis-ci.org/vicb/symfony.png?branch=profiler/listener_2.0)](http://travis-ci.org/vicb/symfony) Fixes the following tickets: #3620, PR #3618 Many thanks to @guilhermeblanco for helping with the tests. --------------------------------------------------------------------------- by vicb at 2012-04-13T20:10:15Z For ref: that's basically a backport of #3920 for 2.0",PHP
Yay!,Java
'yay',JavaScript
Took a look at Eric's configuration for some good stuff and nice colors. Yay :) !,VimL
"ObjectCacher: add a bunch of perfcounters Hurray, we can collect cache statistics! Signed-off-by: Greg Farnum <gregory.farnum@dreamhost.com>",C++
"Added support for yes/no dialogs, closes #20",Ruby
yay! it compiles,Haskell
"Yay, emacs daemon and emacsclient in my wrapper.",Lua
"nouveau: rework and simplify nv04/nv05 driver a bit TEXTURED_TRIANGLE and MULTITEX_TRIANGLE are both a bit special in that if you use any other graph object in the meantime they'll forget their state and spew a lovely METHOD_CNT error at you when you try to draw. The pre-newlib driver has a flush_notify() hook which does this state re-emit, and a number of random workarounds like extra flushes and state dirtying after various operations to solve this issue. I'm taking a slightly different approach to things instead, which has the nice side-effect of removing the divergent code-paths for ttri/mtri, the flush/dirty workarounds and the need for flush_notify. Also gives a few FPS boost in OA, yay.",C
"still a toy helper, but the radio counting is correct, yay",Python
Yay!,FORTRAN
yay,Java
"ladder climbing needs to be a little more accurate. mikey gets centered on ladder when climbing. barrel falls down level, and randomly goes down ladders. YAY",ActionScript
"well yes, if you write non portable code, you should expect non portability...",Python
"well yes, if you write non portable code, you should expect non portability...",Python
yay,FORTRAN
"More whitespace changes. Yes, I am pedantic.",Assembly
"More whitespace changes. Yes, I am pedantic.",Assembly
Iterators: COMPLETE YaY :),PHP
"added empty file and category [dev-lang], yay",Shell
yes,JavaScript
yay css,PHP
yay css,PHP
yay css,PHP
yay css,PHP
"merged branch Tobion/httpkernel-test (PR #3906) Commits ------- c331f4a HttpKernel test fix on windows Discussion ---------- HttpKernel test fix on windows The changes in `StopwatchEventTest` are only for consistency with the other tests in this file. --------------------------------------------------------------------------- by drak at 2012-04-13T04:16:19Z @fabpot - This seems to be an eternal problem with the these particular tests. I wonder if there is a better way to do this. How about a simple greater than condition to show time has elapsed? --------------------------------------------------------------------------- by Tobion at 2012-04-13T04:33:04Z The tests are fine. I didn't change them. Just made it more consistent. --------------------------------------------------------------------------- by drak at 2012-04-13T04:49:20Z Yes, but if you look at the history of these tests files, they are constantly being tweaked for whatever reason (and they often fail on windows builds randomly). This is a clear indication the tests are not robust and a different approach is probably warranted if it can be found. --------------------------------------------------------------------------- by drak at 2012-04-13T04:52:53Z @Tobion - regarding the commit message, what does ""fix"" refer to if the tests are fine? --------------------------------------------------------------------------- by Tobion at 2012-04-13T04:56:39Z The test in `KernelTest` did not pass for me. That's fixed.",PHP
yay css,PHP
merged branch asm89/configurable-session-save-path (PR #3912) Commits ------- c0e7ee9 [FrameworkBundle] Make session save path configurable Discussion ---------- [FrameworkBundle] Make session save path configurable Bug fix: no Feature addition: yes Backwards compatibility break: no Symfony2 tests pass: [![Build Status](https://secure.travis-ci.org/asm89/symfony.png?branch=configurable-session-save-path)](http://travis-ci.org/asm89/symfony) Makes it possible to configure the session save path. It still defaults to saving sessions in the kernel cache dir. This might not be appropriate if you want to keep your user sessions after deploying your application. As promised to @fabpot I will also do a PR on the docs explaining why this might be useful. --------------------------------------------------------------------------- by drak at 2012-04-13T10:16:17Z It might be good to default this value to `%kernel.cache_dir%/sessions`. --------------------------------------------------------------------------- by stloyd at 2012-04-13T10:30:58Z @drak https://github.com/symfony/symfony/pull/3912/files#L0R184 --------------------------------------------------------------------------- by drak at 2012-04-13T10:31:57Z @stloyd need my eyes checked :-P,PHP
yay css,PHP
yay css,PHP
merged branch asm89/configurable-session-save-path (PR #3912) Commits ------- c0e7ee9 [FrameworkBundle] Make session save path configurable Discussion ---------- [FrameworkBundle] Make session save path configurable Bug fix: no Feature addition: yes Backwards compatibility break: no Symfony2 tests pass: [![Build Status](https://secure.travis-ci.org/asm89/symfony.png?branch=configurable-session-save-path)](http://travis-ci.org/asm89/symfony) Makes it possible to configure the session save path. It still defaults to saving sessions in the kernel cache dir. This might not be appropriate if you want to keep your user sessions after deploying your application. As promised to @fabpot I will also do a PR on the docs explaining why this might be useful. --------------------------------------------------------------------------- by drak at 2012-04-13T10:16:17Z It might be good to default this value to `%kernel.cache_dir%/sessions`. --------------------------------------------------------------------------- by stloyd at 2012-04-13T10:30:58Z @drak https://github.com/symfony/symfony/pull/3912/files#L0R184 --------------------------------------------------------------------------- by drak at 2012-04-13T10:31:57Z @stloyd need my eyes checked :-P,PHP
yay css,PHP
"tested, yay",Python
yay css,PHP
yay css,PHP
yay css,PHP
yay css,PHP
yay css,PHP
merged branch asm89/configurable-session-save-path (PR #3912) Commits ------- c0e7ee9 [FrameworkBundle] Make session save path configurable Discussion ---------- [FrameworkBundle] Make session save path configurable Bug fix: no Feature addition: yes Backwards compatibility break: no Symfony2 tests pass: [![Build Status](https://secure.travis-ci.org/asm89/symfony.png?branch=configurable-session-save-path)](http://travis-ci.org/asm89/symfony) Makes it possible to configure the session save path. It still defaults to saving sessions in the kernel cache dir. This might not be appropriate if you want to keep your user sessions after deploying your application. As promised to @fabpot I will also do a PR on the docs explaining why this might be useful. --------------------------------------------------------------------------- by drak at 2012-04-13T10:16:17Z It might be good to default this value to `%kernel.cache_dir%/sessions`. --------------------------------------------------------------------------- by stloyd at 2012-04-13T10:30:58Z @drak https://github.com/symfony/symfony/pull/3912/files#L0R184 --------------------------------------------------------------------------- by drak at 2012-04-13T10:31:57Z @stloyd need my eyes checked :-P,PHP
yay css,PHP
"Finally! You can now have templates that mixe dynamic elements and texts. For example 'Hello <span>{name}</span>, how are you?'. YAY.",CoffeeScript
yay css,PHP
yay css,PHP
yay css,PHP
yay css,PHP
yay css,PHP
"merged branch bschussek/remove-form-validator (PR #3797) Commits ------- 6df7a72 [Form] Deprecated FormValidatorInterface and moved implementations to event listeners Discussion ---------- [Form] Removed FormValidatorInterface and notion of form validators Bug fix: no Feature addition: no Backwards compatibility break: yes Symfony2 tests pass: yes Fixes the following tickets: - Todo: - ![Travis Build Status](https://secure.travis-ci.org/bschussek/symfony.png?branch=remove-form-validator) This cleanup has been lying on a disk for a while, so here it goes. The FormValidatorInterface has been removed in order to reduce the complexity of the Form API. The same expressivity can be achieved by using POST_BIND event listeners. The POST_VALIDATE event introduced in e6577debf6892afeb2d10eb8a3a0fae0d55c9545 can be replaced by a POST_BIND listener with low priority. --------------------------------------------------------------------------- by bschussek at 2012-04-11T15:19:24Z Rebased on master. --------------------------------------------------------------------------- by bschussek at 2012-04-12T12:46:14Z @fabpot Can this be merged?",PHP
yay css,PHP
yay css,PHP
yay css,PHP
yay css,PHP
yay css,PHP
"added lolcode support. Yes, seriously",VimL
ResultGraphTest now uses GraphTestCommon Yay for negative LoC.,Scala
yay css,PHP
"It works, YAY!",JavaScript
"merged branch bschussek/remove-form-validator (PR #3797) Commits ------- 6df7a72 [Form] Deprecated FormValidatorInterface and moved implementations to event listeners Discussion ---------- [Form] Removed FormValidatorInterface and notion of form validators Bug fix: no Feature addition: no Backwards compatibility break: yes Symfony2 tests pass: yes Fixes the following tickets: - Todo: - ![Travis Build Status](https://secure.travis-ci.org/bschussek/symfony.png?branch=remove-form-validator) This cleanup has been lying on a disk for a while, so here it goes. The FormValidatorInterface has been removed in order to reduce the complexity of the Form API. The same expressivity can be achieved by using POST_BIND event listeners. The POST_VALIDATE event introduced in e6577debf6892afeb2d10eb8a3a0fae0d55c9545 can be replaced by a POST_BIND listener with low priority. --------------------------------------------------------------------------- by bschussek at 2012-04-11T15:19:24Z Rebased on master. --------------------------------------------------------------------------- by bschussek at 2012-04-12T12:46:14Z @fabpot Can this be merged?",PHP
"merged branch bschussek/remove-form-validator (PR #3797) Commits ------- 6df7a72 [Form] Deprecated FormValidatorInterface and moved implementations to event listeners Discussion ---------- [Form] Removed FormValidatorInterface and notion of form validators Bug fix: no Feature addition: no Backwards compatibility break: yes Symfony2 tests pass: yes Fixes the following tickets: - Todo: - ![Travis Build Status](https://secure.travis-ci.org/bschussek/symfony.png?branch=remove-form-validator) This cleanup has been lying on a disk for a while, so here it goes. The FormValidatorInterface has been removed in order to reduce the complexity of the Form API. The same expressivity can be achieved by using POST_BIND event listeners. The POST_VALIDATE event introduced in e6577debf6892afeb2d10eb8a3a0fae0d55c9545 can be replaced by a POST_BIND listener with low priority. --------------------------------------------------------------------------- by bschussek at 2012-04-11T15:19:24Z Rebased on master. --------------------------------------------------------------------------- by bschussek at 2012-04-12T12:46:14Z @fabpot Can this be merged?",PHP
merged branch jakzal/FilesystemBugFix (PR #3828) Commits ------- 22e2ad8 [Filesystem] Fixed relative path calculation for end path which is a subdirectory of the start path. bc93787 [Filesystem] Fixed relative path calculation for paths with various combinations of trailing directory separators. Discussion ---------- [Filesystem] Fixed relative path calculation Bug fix: yes Feature addition: no Backwards compatibility break: no Symfony2 tests pass: yes,PHP
"merged branch eriksencosta/locale (PR #3840) Commits ------- 31dde14 [Locale] updated StubIntlDateFormatter::format() behavior for PHP >= 5.3.4 Discussion ---------- [Locale] updated StubIntlDateFormatter::format() behavior for PHP >= 5.3.4 Bug fix: yes Feature addition: no Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: - Todo: - [![Build Status](https://secure.travis-ci.org/eriksencosta/symfony.png?branch=locale)](http://travis-ci.org/eriksencosta/symfony) --------------------------------------------------------------------------- by drak at 2012-04-08T23:20:20Z This looks like a feature addition as opposed to a bug fix and if so, should probably go in the master branch rather than 2.0. --------------------------------------------------------------------------- by stof at 2012-04-08T23:30:25Z @drak it is a bug fix as the stub is meant to have the same behavior than the real intl --------------------------------------------------------------------------- by drak at 2012-04-08T23:36:08Z ok, thanks for the clarification, I wasnt sure. --------------------------------------------------------------------------- by eriksencosta at 2012-04-08T23:44:22Z @stof is right. I myself fixed it in master and then remembered that bug fixes should be made in 2.0.",PHP
Rewrite. Version bump. Yay.,Clojure
"Use blicky.net as tanja import path instead of go.blicky.net Shorter, yay!",Go
"Add ""open area"" for area routing (highway=pedestrian;area=yes)",Java
"merged branch eriksencosta/ticket_2781 (PR #3350) Commits ------- beb4fc0 [WIP][Locale] StubIntlDateFormatter::parse was throwing exception instead of returning Boolean false like intl implementation b61dff7 fixed CS Discussion ---------- [WIP][Locale] StubIntlDateFormatter::parse was throwing exception instead of returning Boolean false like intl implementation Bug fix: yes Feature addition: no Backwards compatibility break: no Symfony2 tests pass: ![travis.ci](https://secure.travis-ci.org/eriksencosta/symfony.png?branch=ticket_2781) Fixes the following tickets: #2781 Todo: A test fail in 32 bit environment, executed tests only with PHP 5.3.2 and ext-intl ICU 4.2 based Failed test: 1) Symfony\Tests\Component\Locale\Stub\StubIntlDateFormatterTest::testFormatWithDefaultTimezoneIntl Failed asserting that two strings are equal. --- Expected +++ Actual @@ @@ -'1969-12-31 21:00:00' +'1969-12-31 16:00:00'",PHP
"Revert ""Test failed builds on Travis"" This reverts commit 11d239ef8f99ea58d68879e3c2975707024757b4. Yay, failed builds break Travis as expected!",Ruby
yes,Ruby
"merged branch drak/clear_tag (PR #3940) Commits ------- 80f96b7 [DependencyInjection] Add ability to clear tags by name. Discussion ---------- [DependencyInjection] Add ability to clear tags by name. Bug fix: no Feature addition: yes Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: - Todo: - --------------------------------------------------------------------------- by jalliot at 2012-04-14T07:50:51Z @drak Just for information, what is the use case? --------------------------------------------------------------------------- by drak at 2012-04-14T08:40:13Z I'm using this to filter (and prevent) some listeners from being loaded into the dispatcher. --------------------------------------------------------------------------- by lsmith77 at 2012-04-14T09:37:39Z tags are used by compiler passes. bundles that set these tags expect some defined bundle to take some specific actions on the given services. as such this is already a fairly ""fragile"" relationship. once other compiler passes then start messing with these tags it can get even more tricky. then again, as long as you know what you are doing .. that being said .. this method just adds convenience, since one could always just get all the tags, unset and reset them in bulk. --------------------------------------------------------------------------- by drak at 2012-04-14T09:42:04Z @lsmith77 - exactly.",PHP
[xmonad] Get rid of window borders (yes vlc I'm looking at you),VimL
"Updated readme, yay!",Ruby
O yes trees was suckin it but now be good!,C
Fix some errors. Yay. the commit messages,Java
Fix rake import:codes friendly-id mangling. The import:codes wasn't clearing the friendly_id_slugs table. Now it is. Yay!,Ruby
"merged branch drak/clear_tag (PR #3940) Commits ------- 80f96b7 [DependencyInjection] Add ability to clear tags by name. Discussion ---------- [DependencyInjection] Add ability to clear tags by name. Bug fix: no Feature addition: yes Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: - Todo: - --------------------------------------------------------------------------- by jalliot at 2012-04-14T07:50:51Z @drak Just for information, what is the use case? --------------------------------------------------------------------------- by drak at 2012-04-14T08:40:13Z I'm using this to filter (and prevent) some listeners from being loaded into the dispatcher. --------------------------------------------------------------------------- by lsmith77 at 2012-04-14T09:37:39Z tags are used by compiler passes. bundles that set these tags expect some defined bundle to take some specific actions on the given services. as such this is already a fairly ""fragile"" relationship. once other compiler passes then start messing with these tags it can get even more tricky. then again, as long as you know what you are doing .. that being said .. this method just adds convenience, since one could always just get all the tags, unset and reset them in bulk. --------------------------------------------------------------------------- by drak at 2012-04-14T09:42:04Z @lsmith77 - exactly.",PHP
(x): fixed compilation error due to Cocos2D changes. //self.isRelativeAnchorPoint = YES; [self setIgnoreAnchorPointForPosition:NO];,Objective-C
"Got Sign-In to work, hurray",Ruby
"fixing protection, yay",Java
forced yes's for the apt-gets,JavaScript
merged branch eriksencosta/locale-fixes-2.0 (PR #3947) Commits ------- b1ea552 [Locale] micro-optimization 663d218 [Locale] changed method name bb61e09 [Locale] use the correct way for Intl error Discussion ---------- [2.0][Locale] rebased PR 3765 plus few changes Bug fix: yes Feature addition: no Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: - Todo: - #3765 was right but was made in master. Cherry-picked and rebased for 2.0. Tests are passing.,PHP
yay demo01 is completed. Now I can to play with pixels ^^,C++
yes,C
merged branch jakzal/2.0-StaticMethodLoaderFix (PR #3937) Commits ------- 089188f [Validator] Fixed StaticMethodLoader when used with abstract methods. Discussion ---------- [Validator] Fixed StaticMethodLoader when used with abstract methods. Bug fix: yes Feature addition: no Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: #3179,PHP
"merged branch drak/clear_tag (PR #3940) Commits ------- 80f96b7 [DependencyInjection] Add ability to clear tags by name. Discussion ---------- [DependencyInjection] Add ability to clear tags by name. Bug fix: no Feature addition: yes Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: - Todo: - --------------------------------------------------------------------------- by jalliot at 2012-04-14T07:50:51Z @drak Just for information, what is the use case? --------------------------------------------------------------------------- by drak at 2012-04-14T08:40:13Z I'm using this to filter (and prevent) some listeners from being loaded into the dispatcher. --------------------------------------------------------------------------- by lsmith77 at 2012-04-14T09:37:39Z tags are used by compiler passes. bundles that set these tags expect some defined bundle to take some specific actions on the given services. as such this is already a fairly ""fragile"" relationship. once other compiler passes then start messing with these tags it can get even more tricky. then again, as long as you know what you are doing .. that being said .. this method just adds convenience, since one could always just get all the tags, unset and reset them in bulk. --------------------------------------------------------------------------- by drak at 2012-04-14T09:42:04Z @lsmith77 - exactly.",PHP
"merged branch drak/clear_tag (PR #3940) Commits ------- 80f96b7 [DependencyInjection] Add ability to clear tags by name. Discussion ---------- [DependencyInjection] Add ability to clear tags by name. Bug fix: no Feature addition: yes Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: - Todo: - --------------------------------------------------------------------------- by jalliot at 2012-04-14T07:50:51Z @drak Just for information, what is the use case? --------------------------------------------------------------------------- by drak at 2012-04-14T08:40:13Z I'm using this to filter (and prevent) some listeners from being loaded into the dispatcher. --------------------------------------------------------------------------- by lsmith77 at 2012-04-14T09:37:39Z tags are used by compiler passes. bundles that set these tags expect some defined bundle to take some specific actions on the given services. as such this is already a fairly ""fragile"" relationship. once other compiler passes then start messing with these tags it can get even more tricky. then again, as long as you know what you are doing .. that being said .. this method just adds convenience, since one could always just get all the tags, unset and reset them in bulk. --------------------------------------------------------------------------- by drak at 2012-04-14T09:42:04Z @lsmith77 - exactly.",PHP
"Database upgrade support and add col: contact type ForgetMeNot v0.5.6 (versionCode 35, DB v3) *IMPROVEMENTS* - FMN-33 Database system now supports upgrading (without wiping out all your data, yay!) *FILE DETAILS* * src/com/dunnzilla/mobile/DBConst.java - Add pref_contact_type column * src/com/dunnzilla/mobile/DBHelper.java - Build in incremental DB upgrade routine - Append pref_contact_type for upgrading from 2-3 * src/com/dunnzilla/mobile/Reminder.java - Define PREF_CONTACT_TYPE_ constants",Java
"Default ""Enable Search"" to YES",Python
"integrated SVProgressHUD added needed frameworks, changed linking with shared libraries to yes, changed type from dynamic library to static. Changed function calls from showMessage2 to showMessage since it would not compile. Added bundle images for SVProgressHUD, Added new platform (simulator, since AIR 3.3 enables you to test air applications in it) Added new ane build script to enable building of this ane (includes all platforms and also adds bundle images to the script) calls to SVProgressHUD were done by mateusz, i only did the finishing work",Objective-C
Yay example file,PHP
merged branch jakzal/2.0-StaticMethodLoaderFix (PR #3937) Commits ------- 089188f [Validator] Fixed StaticMethodLoader when used with abstract methods. Discussion ---------- [Validator] Fixed StaticMethodLoader when used with abstract methods. Bug fix: yes Feature addition: no Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: #3179,PHP
yes or no を y or nに置き換え,Emacs Lisp
"tmux-sessions: now works yay! .profile: simplified aliases, adding functions...",Python
"Add Content-Type to the default headers that are accepted. That neither ETag nor Content-Type are considered simple headers is a clear sign that the people who made CORS were thinking in terms of a big complex diversely resourced web. Yes, CORS is very helpful, but what is and isn't simple is not.",Python
merged branch eriksencosta/locale-fixes-2.0 (PR #3947) Commits ------- b1ea552 [Locale] micro-optimization 663d218 [Locale] changed method name bb61e09 [Locale] use the correct way for Intl error Discussion ---------- [2.0][Locale] rebased PR 3765 plus few changes Bug fix: yes Feature addition: no Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: - Todo: - #3765 was right but was made in master. Cherry-picked and rebased for 2.0. Tests are passing.,PHP
"yay, readme",PHP
some tests now work. yay.,Java
"Optimize '#include <|' case as most useful This is done by caching results of such completion. Yes, I do know it will stay in the memory, and that it's bad, but it works extremely fast!",VimL
"merged branch clemherreman/fix-browserkit_client-history (PR #3550) Commits ------- ad07a95 [BrowserKit] Fixed Client->back/forward/reload() not keeping all request attributes Discussion ---------- [BrowserKit] Client->back/forward/reload() is not keeping all request attributes Bug fix: yes Feature addition: no Backwards compatibility break: no Symfony2 tests pass: ![Travis CI icon](https://secure.travis-ci.org/clemherreman/symfony.png?branch=fix-browserkit_client-history) Fixes the following tickets: This one Todo: - <hr> Hello While using the BrowserKit component with Behat, I noticed that some request attributes, such as files or body, disappeared when using `Symfony\Component\BrowserKit\Client->back/forward/reload()`. The method used internally in these methods, Client->#requestFromRequest was badly passing the old request parameters to the new request. See the diff.",PHP
"Mernel.Kernel.Main now loads and decomposes, against the mono mscorlib, yay!",C
Yay fixing typos!,Python
barrels are freaking there. YES. closes #2,ActionScript
"Added copying info, yay for gpl",C
Bingo! finished...,JavaScript
"new webpage (yes, again) based on pelican style: bootstrap2 now with feeds",Python
merged branch drak/trace_static (PR #3977) Commits ------- 3939c90 [FrameworkBundle] Fix TraceableEventDispatcher unable to trace static class callables Discussion ---------- [FrameworkBundle] Fix TraceableEventDispatcher unable to trace static class callables Bug fix: yes Feature addition: no Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: - Todo: -,PHP
merged branch hhamon/http_foundation_cs (PR #3980) Commits ------- 64a0abe [HttpFoundation] fixed CS in ParameterBag class. Discussion ---------- [HttpFoundation] fixed CS in ParameterBag class. Bug fix: no Feature addition: no Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: - Todo: -,PHP
merged branch gajdaw/finder_comparator_not_equal (PR #3974) Commits ------- 1b320c8 [Finder][Comparator] not equal operator Discussion ---------- [Finder][Comparator] not equal operator Bug fix: no Feature addition: yes Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: - Todo: -,PHP
"Yay, Rails 3.2.3.",Ruby
merged branch gajdaw/finder_comparator_not_equal (PR #3974) Commits ------- 1b320c8 [Finder][Comparator] not equal operator Discussion ---------- [Finder][Comparator] not equal operator Bug fix: no Feature addition: yes Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: - Todo: -,PHP
yay,PHP
"yes, more f-in tabs",Ruby
merged branch hhamon/http_foundation_phpdoc (PR #3982) Commits ------- b19468e [HttpFoundation] changed return type from int to integer in ParameterBag::getInt() method. 9cd0b03 [HttpFoundation] fixed phpdoc in ParameterBag::getInt() method. Discussion ---------- [HttpFoundation] phpdoc fix in ParameterBag class Bug fix: no Feature addition: no Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: - Todo: -,PHP
merged branch michal-pipa/composer-fix (PR #3986) Commits ------- a514072 Added Monolog to composer.json as dev dependency Discussion ---------- Added Monolog to composer.json as dev dependency Bug fix: yes Feature addition: no Backwards compatibility break: no Symfony2 tests pass: [![Build Status](https://secure.travis-ci.org/michal-pipa/symfony.png?branch=composer-fix)](http://travis-ci.org/michal-pipa/symfony) Fixes the following tickets: - Todo: - Monolog was missing in dev composer dependences. It was present in `vendors.php`: https://github.com/symfony/symfony/blob/35e6c8ed0fb1ee329c26868c87e0fb5c54eef06a/vendors.php Without this code coverage report generation fails with error message: `Fatal error: Class 'Monolog\Handler\ChromePHPHandler' not found`.,PHP
Skip install to Yes,C
yay finally got my form to save,JavaScript
Skip install to YES,Objective-C
merged branch michal-pipa/composer-fix (PR #3986) Commits ------- a514072 Added Monolog to composer.json as dev dependency Discussion ---------- Added Monolog to composer.json as dev dependency Bug fix: yes Feature addition: no Backwards compatibility break: no Symfony2 tests pass: [![Build Status](https://secure.travis-ci.org/michal-pipa/symfony.png?branch=composer-fix)](http://travis-ci.org/michal-pipa/symfony) Fixes the following tickets: - Todo: - Monolog was missing in dev composer dependences. It was present in `vendors.php`: https://github.com/symfony/symfony/blob/35e6c8ed0fb1ee329c26868c87e0fb5c54eef06a/vendors.php Without this code coverage report generation fails with error message: `Fatal error: Class 'Monolog\Handler\ChromePHPHandler' not found`.,PHP
"Make `binwrite` emulation work on Windows. So, it turns out that Ruby on Windows is pretty damn awesome, and that to successfully sysopen a file, then use it as an IO, you need to write this: IO.new(IO::sysopen(filename, mode), mode) {|io| ... } ...yes, indeed, you need to repeat the mode, and pass the sysopen mode - which is completely incompatible with the normal open. It works when you pass a file descriptor from sysopen, though, and gets Ruby convinced to use it right. Signed-off-by: Daniel Pittman <daniel@puppetlabs.com>",Ruby
10% speed improvement. yay.,D
"I'm not really proud of this code, but everybody wants to see it. So I have no choise, sorry...",Java
dev-lang/ghc: added I_DEMAND_MY_CORES_LOADED variable to allow parallel builds As ghc is designed to run in parallel many folks are lucky enough to build it with -j>1 (like me). Add 'I_DEMAND_MY_CORES_LOADED=yes' to '/etc/make.conf' if you are brave enough! Signed-off-by: Sergei Trofimovich <slyfox@gentoo.org>,Haskell
256 colors yay!,VimL
Got are you sure yes no box working for the quit function,Shell
yay,Java
adding source yay,JavaScript
"Not a typo... keyboard to slow, yes that's it",Ruby
"merged branch havvg/feature/default-build-command (PR #30) Commits ------- 7055f40 added static default command to Sismo\Project Discussion ---------- add static default command to Sismo\Project This allows to alter the default command for all newly created projects with just one line. It's meant to be used in the config.file of Sismo to (for example) change the default options of the phpunit command to run or even change the test suite to run at all. Example: ```php <?php $projects = array(); $notifier = new Sismo\GrowlNotifier('pa$$word'); \Sismo\Project::setDefaultCommand('phpunit --colors --strict'); $projects[] = new Sismo\GithubProject('Twig (Local)', '/Users/fabien/Twig', $notifier); $projects[] = new Sismo\GithubProject('Twig', 'fabpot/Twig', $notifier); return $projects; ``` --------------------------------------------------------------------------- by cordoval at 2011-09-24T01:09:47Z I think this is the same problem I had, to change commands for the types of testings that I am currently doing, however @fabpot told me that we can call a generic script that can sit on the project folder of the git project? so I am trying to figure out how to do that, any hints? So this approach is better than touching the config.php, I say config.php should only be touched to add projects but not commands, like the apache sites file, only once --------------------------------------------------------------------------- by cordoval at 2011-09-24T01:12:04Z @havvg now I know this will never be merged as sismo is by definition tool agnostic and for the above reasons I posed. I say @fabpot would do well in showing that sample of script he referred to, but for now I am thinking on its shape, sismo rocks! --------------------------------------------------------------------------- by havvg at 2011-09-24T09:31:06Z Yes I know. However, I think it's worth to have something to alter the default command of Sismo instead of having the same three lines for every project configuration. --------------------------------------------------------------------------- by cordoval at 2011-09-24T14:05:05Z I agree too --------------------------------------------------------------------------- by cordoval at 2011-09-24T20:14:13Z hey @havvg, do you have gmail, add me to brainstorm sometime, I have an idea I was successful in extracting a script into each project folder so that the command could be customized right on a file inside the project folder. Like I have extracted the What I think would be good to automate is to extract also the part of the configuration for each project. Wonder if @fabpot has done this already... so the scenario is like this: we all have main folder web/ or sites/ where we put all our apps and map them to vhosts so sismo perhaps can scan from the config.php a particular main folder $appsFolder and read inside a standard sismo_config.php per project, inside each there is the setup for the $project at hand and so that it can be inserted back into the closure project array or something ... makes sense? It should be easy to implement but I am looking for better ideas because i do my mess. Thanks! --------------------------------------------------------------------------- by havvg at 2011-09-26T15:54:56Z You already can do this with the given sismo config.file. You only need to fill it with the list of projects to look into and the base logic for loading the expected file within each project. --------------------------------------------------------------------------- by cordoval at 2011-09-26T16:15:08Z what do you mean 'base logic' ... --------------------------------------------------------------------------- by havvg at 2011-09-26T17:22:15Z Actually, your idea is pretty cool, need to implement it. I will do this tomorrow and post the code! --------------------------------------------------------------------------- by cordoval at 2011-09-26T17:26:25Z glad to be understood :) yeah man, let me knwo I will be on the chat all day long --------------------------------------------------------------------------- by havvg at 2011-09-26T17:28:58Z Code will be there: https://github.com/havvg/SismoFinder --------------------------------------------------------------------------- by cordoval at 2011-09-26T17:30:04Z allow permissions to push, perhaps with this pace, I won't want to wait till tomorrow --------------------------------------------------------------------------- by havvg at 2011-09-26T17:36:55Z Done. --------------------------------------------------------------------------- by havvg at 2012-01-04T19:41:19Z @fabpot What are your thoughts on this PR? --------------------------------------------------------------------------- by havvg at 2012-04-19T14:33:14Z Rebased onto current master",PHP
"Update undo-tree (with js2-mode fix, yay) and js2-refactor",Emacs Lisp
fixed my code hallelujah,Python
"merged branch ujimaesteve/patch-1 (PR #302) Commits ------- 066e729 Update doc/providers/session.rst Discussion ---------- Update doc/providers/session.rst To solve #297 and #299 --------------------------------------------------------------------------- by igorw at 2012-04-06T14:06:05Z Looks good :+1:. Not sure if we should move session->start to a before filter. --------------------------------------------------------------------------- by jaywilliams at 2012-04-16T18:55:51Z I'm glad I found this pull request, because I couldn't figure out why the stated code in the documentation wasn't working.",PHP
excited to stopwords,Python
"Make `binwrite` emulation work on Windows. So, it turns out that Ruby on Windows is pretty damn awesome, and that to successfully sysopen a file, then use it as an IO, you need to write this: IO.new(IO::sysopen(filename, mode), mode) {|io| ... } ...yes, indeed, you need to repeat the mode, and pass the sysopen mode - which is completely incompatible with the normal open. It works when you pass a file descriptor from sysopen, though, and gets Ruby convinced to use it right. Signed-off-by: Daniel Pittman <daniel@puppetlabs.com>",Ruby
Yay dan,Haskell
Modified Greasemonkey script to prompt yes/no to click egg.,JavaScript
Add visual output yes/no.,Python
Spelling error. Yay,JavaScript
yes,Ruby
yay! i forgot to do the commit!,Java
yes,Ruby
yes,PHP
yes,Ruby
getting factories associations working right. yay,JavaScript
merged branch michal-pipa/composer-fix (PR #3986) Commits ------- a514072 Added Monolog to composer.json as dev dependency Discussion ---------- Added Monolog to composer.json as dev dependency Bug fix: yes Feature addition: no Backwards compatibility break: no Symfony2 tests pass: [![Build Status](https://secure.travis-ci.org/michal-pipa/symfony.png?branch=composer-fix)](http://travis-ci.org/michal-pipa/symfony) Fixes the following tickets: - Todo: - Monolog was missing in dev composer dependences. It was present in `vendors.php`: https://github.com/symfony/symfony/blob/35e6c8ed0fb1ee329c26868c87e0fb5c54eef06a/vendors.php Without this code coverage report generation fails with error message: `Fatal error: Class 'Monolog\Handler\ChromePHPHandler' not found`.,PHP
"move last thing(?) into lib, YAY SAY OCD NEURONS",JavaScript
"This version of the grammar has all the atoms, yay",Java
Showing real home page posts. Yay.,JavaScript
"Yay, SQLite!",PHP
"Trying a much simpler approach. This compiles and runs. There are some ugly bits, yes. It doesn't render any files out yet, either.",Go
FUCK YES FUCKCKCKCKCKC FUCKING YES FUCK ME YES,Python
"merged branch michal-pipa/symlink-fix (PR #4012) Commits ------- 94bee7a [Filesystem] symlink() creates target directories Discussion ---------- [Filesystem] symlink() creates target directories Bug fix: yes Feature addition: no Backwards compatibility break: no Symfony2 tests pass: yes [![Build Status](https://secure.travis-ci.org/michal-pipa/symfony.png?branch=symlink-fix)](http://travis-ci.org/michal-pipa/symfony) Fixes the following tickets: #3967 Todo: - Changed symlink() method behavior to recursively create target directory if it does not exist. It makes Filesystem component methods more consistent since copy() does the same. It is also more convenient. Also mirror() fails to create symlink in non-existent directory (if we don't want to change symlink(), than we need to fix mirror()). Fixes: #3967",PHP
"merged branch bschussek/issue3990 (PR #3996) Commits ------- ccd6bbc [Form] Removed extra CSRF field on collection prototype Discussion ---------- [Form] Removed extra CSRF field on collection prototype Bug fix: yes Feature addition: no Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: #3987, #3990 Todo: - ![Travis Build Status](https://secure.travis-ci.org/bschussek/symfony.png?branch=issue3990) --------------------------------------------------------------------------- by bschussek at 2012-04-19T08:43:32Z Wait a minute please, I oversaw some tests that have to be adapted. --------------------------------------------------------------------------- by bschussek at 2012-04-19T09:22:45Z Fixed. ping @fabpot",PHP
merged branch jfsimon/issue-3896 (PR #4001) Commits ------- cd783fb [HttpKernel] Fixed cache vary lookup (fixes #3896). Discussion ---------- [HttpKernel] Fixed cache vary lookup (fixes #3896). Bug fix: yes Feature addition: no Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: #3896,PHP
"merged branch evillemez/master (PR #3557) Commits ------- b7b26af [DependencyInjection] Added, implemented and tested IntrospectableContainerInterface::initialized() Discussion ---------- [DependencyInjection] IntrospectableContainerInterface::initialized() Bug fix: no Feature addition: yes Backwards compatibility break: no Symfony2 tests pass: yes Added, implemented and tested `IntrospectableContainerInterface::initialized()`, which allows checking for whether or not a service id has actually been loaded, without forcing it to load. This could be implemented in several places to prevent loading a service when it's only needed if it has been previously loaded - for example the SwiftmailBundle's event listener for the `kernel.terminate` event, which currently forces Swiftmail to load on every request to check for messages to send, even if it was not previously loaded. --------------------------------------------------------------------------- by fabpot at 2012-03-11T09:10:32Z Do you have any other examples in mind where it would be useful? --------------------------------------------------------------------------- by stof at 2012-03-11T12:39:22Z @fabpot 2 exemples: - the Swiftmailer listener to avoid loading the initialization code of Swiftmailer in each kernel.terminate event just to check that there is no pending message in the spool (if the spool has never been retrieved, it cannot have messages) (this is the use case we discussed on IRC last night) - closing Doctrine connections and Monolog handlers in the shutdown method without creating them if they were not used --------------------------------------------------------------------------- by stof at 2012-03-11T12:39:53Z However, I don't like the name of the method --------------------------------------------------------------------------- by lsmith77 at 2012-03-11T13:26:34Z sounds very useful --------------------------------------------------------------------------- by evillemez at 2012-03-11T17:00:39Z @fabpot another example: * Forcing a session to write early, if it was previously loaded - but not having to load the session to check, thus potentially forcing a database connection (if that's how the session is being handled) when it's not needed. @stof Would more or less verbose be better? Like, `isServiceLoaded()` or just `loaded()`.... or a better word than ""loaded"" ? :) --------------------------------------------------------------------------- by stof at 2012-03-11T17:03:11Z @evillemez My issue is the word ``loaded``. I don't think it is clear about what it means here --------------------------------------------------------------------------- by lsmith77 at 2012-03-11T17:04:24Z one thing we should also keep in mind here is the scope of the service. BTW: there are also a couple of CS violations in your PR --------------------------------------------------------------------------- by fabpot at 2012-03-11T17:07:43Z @stof: I agree that we should think of a better name: `initialized()` or `exists()` (to differentiate from `has()`)? @evillemez: After choosing the name, can you work on actually using the new method for some of the use cases mentioned in this PR? --------------------------------------------------------------------------- by lsmith77 at 2012-03-11T17:20:12Z what i meant with ""scope"" was if we are only talking about services instantiated in the current scope? but i guess there is no way to handle anything else anyway. as for name .. i think ``instantiated()`` is more fitting than ``initialized()``. ``exists()`` could be confused with ``has()`` imho --------------------------------------------------------------------------- by stof at 2012-03-11T17:26:06Z The current implementation only works for container-scoped services. It does not make sense for prototyped-scope services anyway (as the container does not keep them) but supporting scoped services will be tricky IMO --------------------------------------------------------------------------- by mvrhov at 2012-03-11T17:34:21Z hasBeen(Used|Called|Initialized), --------------------------------------------------------------------------- by evillemez at 2012-03-11T17:54:43Z The next day or two I'm only around for an hour or so here and there, I may be a little slow to respond. @stof @lsmith77 I agree with either `instantiated()` or `initialized()`, I also think `exists()` might be easily confused with `has()` @lsmith77 Besides the opening/closing brace placements, was there anything else? @fabpot I would happily implement it in the Swiftmail bundle - as of now that's the only area where I know absolutely it would be useful. The Session example I mentioned was an issue I ran into working on another app in another framework, and I'm not familiar yet with the internals of the Monolog/Doctrine Bundles. But if people could point me in the right direction I'd be willing to check it out. I'm still relatively new to some of the Symfony2 internals, so if there are obvious things I'm missing, please don't hesitate to point them out. :) --------------------------------------------------------------------------- by evillemez at 2012-03-11T18:00:29Z @lsmith77 Oh... I think there were some tab issues I didn't see in my editor, I'll fix those too. --------------------------------------------------------------------------- by stof at 2012-03-11T18:13:03Z The places where it should be used for Doctrine and Monolog are in separate repos anyway so it cannot be part of this PR --------------------------------------------------------------------------- by evillemez at 2012-03-12T03:38:50Z Any thoughts on `instantiated` vs `initialized`? I'm leaning towards `initialized`. How should I proceed, close this request and submit another with the changed name and fixed CS violations? --------------------------------------------------------------------------- by fabpot at 2012-03-12T07:41:11Z `initialized()` looks fine to me. Make your changes, squash your commits and then force the push to your branch (the PR will be updated automatically). --------------------------------------------------------------------------- by evillemez at 2012-03-12T20:49:17Z I was about to squash my commits to update this, but it just occurred to me that I hadn't considered the interface. Does anyone feel this method `initialized()` should be defined in ContainerInterface as well? It seems like it's generic enough that it would make sense. But I'm not immediately aware if this would cause BC breaks. --------------------------------------------------------------------------- by fabpot at 2012-03-13T11:34:33Z We cannot break BC for `ContainerInterface` as this is marked with the `@api` tag. --------------------------------------------------------------------------- by henrikbjorn at 2012-03-13T12:34:42Z Is it a BC break if we add a method? i thought only changing the already written methods would be a BC break. --------------------------------------------------------------------------- by ooflorent at 2012-03-13T12:39:44Z @henrikbjorn It will raise a fatal error if the method isn't implemented in existing class. --------------------------------------------------------------------------- by lsmith77 at 2012-03-13T13:06:26Z we could however add a new interface that extends from the previous one. --------------------------------------------------------------------------- by evillemez at 2012-03-13T15:40:39Z Are the BC breaks we are worried about for compatibility just within the Symfony repo - or in general in case others have implemented the interface elsewhere? As far as Symfony is concerned, the only class I can find that implements `ContainerInterface` is `Container`, so adding the method shouldn't be an issue. If it's an issue of principle, in case others may have implemented the `ContainerInterface`, then... yeah, it's a break, and maybe should be left out. I suppose this would mean that other places in code that type hint for `ContainerInterface` would have to change the type hint to `Container` if they want to implement the `initialized()` method. Is this more or less acceptable than updating the interface? --------------------------------------------------------------------------- by evillemez at 2012-03-14T19:17:27Z Hadn't properly squashed commits, just fixed. --------------------------------------------------------------------------- by evillemez at 2012-03-15T14:06:38Z I'm done with this PR, unless there is a consensus that I should also implement `Container::initialized()` in `ContainerInterface`. Anything else I need to do? --------------------------------------------------------------------------- by Seldaek at 2012-03-15T15:41:44Z @evillemez the common pattern for BC is to add a new interface, say IntrospectableContainerInterface or something, that extends ContainerInterface, then you can type-hint that without restricting use of competing implementations of the Container class. --------------------------------------------------------------------------- by stof at 2012-04-03T22:30:51Z @evillemez Please update this PR. It conflicts with master because of the move of tests. And the new interface suggested by @Seldaek is a good idea IMO --------------------------------------------------------------------------- by evillemez at 2012-04-04T14:57:29Z @Stof I may not be able to get to this until the end of the week, but I'll do it as soon as I can. I'll rebase against the current master, and add/implement the interface. Is `IntrospectableContainerInterface ` as suggested by @Seldaek ok with everyone? Are there other features that we can think of that would be useful for this new interface? I don't want to start a precedent of adding a new interface for every new method that comes up... I understand it makes sense for not breaking backwards compatibility for something previously marked as stable, but still, it's yet another file that will likely be included on every request. ----------------------------------------------------------------------- ...",PHP
merged branch ruian/issue-3992 (PR #4006) Commits ------- 45ada32 Add Support for boolean as to string into yaml extension Discussion ---------- Add Support for boolean as to string into yaml extension Bug fix: yes Feature addition: no Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: 3992 Todo: - Maybe use only boolean checker instead of YamlDumper->dump,PHP
merged branch pvanliefland/ticket_1692 (PR #3945) Commits ------- 8bdff01 [DoctrineBridge][Form] added collection guess for array Doctrine type and array constraint type Discussion ---------- [Form] [DoctrineBridge] Better field type guessing for array doctrine type and array validator type Bug fix: no Feature addition: yes Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: #1692 Todo: - --------------------------------------------------------------------------- by bschussek at 2012-04-18T08:45:17Z Could you please add an entry to the CHANGELOG and squash your commits into one? --------------------------------------------------------------------------- by pvanliefland at 2012-04-18T17:20:39Z Done,PHP
merged branch pvanliefland/ticket_1692 (PR #3945) Commits ------- 8bdff01 [DoctrineBridge][Form] added collection guess for array Doctrine type and array constraint type Discussion ---------- [Form] [DoctrineBridge] Better field type guessing for array doctrine type and array validator type Bug fix: no Feature addition: yes Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: #1692 Todo: - --------------------------------------------------------------------------- by bschussek at 2012-04-18T08:45:17Z Could you please add an entry to the CHANGELOG and squash your commits into one? --------------------------------------------------------------------------- by pvanliefland at 2012-04-18T17:20:39Z Done,PHP
Set SkipInstall to YES,Objective-C
Set SkipInstall to YES and move header files,Objective-C
Hello? Yes this is dog! i have no idea what im doing1,C++
"further work, validation now works (yes, we did use html::)",PHP
"Feel like this is a pretty good v1.0.0 point. So, yay",JavaScript
Changed OIS Results to try and display only yes's and maybe's (again),Python
Merge pull request #34 from cfinn2010/master Changed OIS Results to try and display only yes's and maybe's (again),Python
used http://validator.w3.org to check out our html issues and fixed so we now look the same on the front page across all three browsers. Yay us!,JavaScript
yay print statements,Python
"Now the generated build options and flags seem to be passed on properly, yay!",C
"Yes, OK. Signed-off-by: Tien Nguyen <lilylnx@gmail.com>",JavaScript
depot: log et inscription ok 100% ! Yes we did it !,PHP
i can parse glr and create asts bitch yes yes yes,D
"mount_info_mismatch can reattach a disk to an instance/vm Example usage: $ be bin/bosh cck Performing cloud check... Scanning 3 VMs checking VM states (00:00:00) 3 OK, 0 unresponsive, 0 unbound, 0 out of sync (00:00:00) Done 2/2 00:00:00 Scanning 1 persistent disks looking for inactive disks (00:00:00) 0 OK, 0 inactive, 1 mount-info mismatch (00:00:00) Done 2/2 00:00:00 Scan is complete, checking if any problems found... Found 1 problem Problem 1 of 1: Inconsistent mount information: Record shows that disk 'vol-a8de73c7' should be mounted on i-a039a3c7. However it is currently : Not mounted in any VM. 1. Ignore 2. Reattach disk to instance Please choose a resolution [1 - 2]: 2 Below is the list of resolutions you've provided Please make sure everything is fine and confirm your changes 1. Inconsistent mount information: Record shows that disk 'vol-a8de73c7' should be mounted on i-a039a3c7. However it is currently : Not mounted in any VM Reattach disk to instance Apply resolutions? (type 'yes' to continue): yes Applying resolutions... Applying problem resolutions mount_info_mismatch 1: Reattach disk to instance (00:00:15) Done 1/1 00:00:15 Cloudcheck is finished Showing that the problem is resolved: ~/Projects/gems/bosh/bosh/cli[mount_info_mismatch*]$ be bin/bosh cck Performing cloud check... Scanning 3 VMs checking VM states (00:00:00) 3 OK, 0 unresponsive, 0 unbound, 0 out of sync (00:00:00) Done 2/2 00:00:00 Scanning 1 persistent disks looking for inactive disks (00:00:00) 1 OK, 0 inactive, 0 mount-info mismatch (00:00:00) Done 2/2 00:00:00 Scan is complete, checking if any problems found... No problems found Change-Id: I7570f3d023313c04682fff9fd3238ea67d8e0f33",Ruby
"Yes, use strict!",JavaScript
Merge branch 'master' of https://github.com/bingo-open-source/utils-java Conflicts: bingo-utils/src/main/java/bingo/utils/Arrays.java bingo-utils/src/main/java/bingo/utils/Assert.java bingo-utils/src/main/java/bingo/utils/Enumerator.java bingo-utils/src/main/java/bingo/utils/Objects.java bingo-utils/src/main/java/bingo/utils/Strings.java bingo-utils/src/test/java/bingo/utils/StringsEqualsTest.java bingo-utils/src/test/java/bingo/utils/StringsTest.java,Java
Add a bunch more new blocks! Yay blocks :-),Java
Add a bunch more new blocks! Yay blocks :-),Java
Merge pull request #1168 from julapy/bugfix-1097-skip-install bugfix SKIP_INSTALL set to YES,C
yay,C#
"choose class, button change to yes or no",Shell
yes,JavaScript
yay flora,Java
"first working version, yay.",Java
replaced history/invites with just cooking rooms. yay.,JavaScript
Adjusted I2C buffer to trim extra bytes off WORKS! Yay,C++
merged branch weaverryan/remove_security_factories (PR #4058) Commits ------- a9d8197 Removing the security_factories.xml file - not needed after sha: 413756c103dec9cd640db569cc678357995a3cd1 Discussion ---------- Removing the security_factories.xml file - not needed after sha: 413756c... Hi guys! This is just a left-over file. See sha: 413756c103dec9cd640db569cc678357995a3cd1 Bug fix: no Feature addition: no Backwards compatibility break: no Symfony2 tests pass: yes Thanks!,PHP
Sort YES and NO buttons,Python
Fuckin YES,JavaScript
Sort YES and NO buttons,Python
"Use __objc_yes and __objc_no if available. This way, @YES and @NO work.",Objective-C
Merge pull request #1191 from zipatei/master Sort YES and NO buttons,Python
yay more stuff,ActionScript
merged branch hhamon/request_getport_cleanup (PR #4052) Commits ------- 6dddb6b [HttpFoundation] removed useless else clause in Request::getPort() method. Discussion ---------- Request getport cleanup Bug fix: no Feature addition: no Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: - Todo: -,PHP
merged branch weaverryan/remove_security_factories (PR #4058) Commits ------- a9d8197 Removing the security_factories.xml file - not needed after sha: 413756c103dec9cd640db569cc678357995a3cd1 Discussion ---------- Removing the security_factories.xml file - not needed after sha: 413756c... Hi guys! This is just a left-over file. See sha: 413756c103dec9cd640db569cc678357995a3cd1 Bug fix: no Feature addition: no Backwards compatibility break: no Symfony2 tests pass: yes Thanks!,PHP
Merge branch 'master' of https://fenghm@github.com/bingo-open-source/utils-java.git,Java
Merge pull request #63 from zipatei/master Sort YES and NO buttons in Plugins preferences,Python
yes ilove U,Ruby
feature complete yay,JavaScript
yay jungle music,ActionScript
Press yes/no in CopyMoveDialog handler,Objective-C
Yay for random updates,Shell
"Hallelujah, I found where the bug in kalman_em is. The B matrix I was passing to kalman_smoother was not being updated. Fixed now.",Matlab
YES,ActionScript
Assignment 6 yay,Objective-C
Yay! this was aweeeeeesome,PHP
Website Done! YAY QUIZ,JavaScript
"added function Fityk::input() it's meant to be used from Lua bindings, in the GUI message box pops up, if input prompt contains ""[y/n]"" the message box has Yes/No buttons.",C++
YAY,ActionScript
Game is done!!! Hurray!,C#
"CopyMoveDialog: esc - no, space and enter do yes/no",Objective-C
Yay citizen movement!,ooc
CopyMoveDialog: when window show yes button is first responder,Objective-C
"Audio entry. Closes #14. Yes, this does just call audio sources ""audio"" with no differentation between artist and title. I don't think we need to differentiate between that on the frontend -- it's really only necessary for video data verification and autocompletion.",Ruby
Yay readmes\!,Haskell
"Implementing CFRelease for linux, now it works. Yay!",C
merged branch jakzal/2.0-StaticMethodLoaderFix (PR #3937) Commits ------- 089188f [Validator] Fixed StaticMethodLoader when used with abstract methods. Discussion ---------- [Validator] Fixed StaticMethodLoader when used with abstract methods. Bug fix: yes Feature addition: no Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: #3179,PHP
Mobile support: user-scalable=yes,PHP
"Yay, visitors working",JavaScript
Merge branch 'master' of https://github.com/bingo-open-source/utils-java,Java
"enhance ""keep variation"" dialog - close #50 - also some dialog ground work for that ( Yes/No)",Java
"test: use --numstat instead of --stat in ""git stash show"" tests git's diff --stat output is intended for human consumption and since v1.7.9.2~13 (2012-02-01) varies by locale. Add a test checking that git stash show defaults to --stat and tweak the rest of the ""stash show"" tests that showed a diffstat to use numstat. This way, there are fewer tests to tweak if the diffstat format changes again. This also improves test coverage when running tests with git configured not to write its output in the C locale (e.g., via GETTEXT_POISON=Yes). Signed-off-by: Jonathan Nieder <jrnieder@gmail.com> Signed-off-by: Junio C Hamano <gitster@pobox.com>",C
making some pretty good stuff now. excited to ge this hooked up to the kinect and start reading in the live data.,C
Yay!,Java
"It works, and now turns correctly. Yay.",Ruby
"Core/DB Layer: Fix a memory leak. Author: raczman (yes, you read correctly)",C++
Merge pull request #2 from KellyLSB/master placeHolder Namespacing + more by @KellyLSB YAY!!!!!,PHP
Merge pull request #2 from KellyLSB/master placeHolder Namespacing + more by @KellyLSB YAY!!!!!,PHP
aramada yayınlanmayan gönderilerde gösteriliyor,JavaScript
yes Change-Id: I13ba16027bf1021488cf354246a8ef245248f2e4,PHP
"Done with user edit/update, indexing, and destroy actions. Yay REST.",Ruby
excited,Java
Adding an automatic deploy script so that I can stop dealing with Wordpress.org subversion. Yay.,PHP
added stuff for ZXing library. It compiles (yay),Objective-C
Yes.,Ruby
Yes.,Ruby
1 step closer--got the NSArray* reviews ! Yay,Objective-C
500/500 yay!,Ruby
"Fixed a syntax error, and added SKIP_INSTALL=YES SKIP_INSTALL enables this project to be a dependence project of an iOS app, and won't try to bundle libs and samples with an archive.",C++
YAY,Java
Merge pull request #3 from albanlv/master Yes we cancan,Ruby
"Merge pull request #79 from doktorj/search massive update on search branch, completing all or most of newly crafted search , major refactor of no_images scopes and stuffs, major merge of search branch into master - yay for git! checkout for details on search - master merge https://github.com/doktorj/rhodes-ror/compare/search",Ruby
some formatting-10 -- Yes markdown is easy to debug \!,Ruby
yes hello,PHP
yay,Ruby
yay we can delete now,JavaScript
"$SOME_NEBULOUS_COMMIT_MESSAGE (trying to make you not look into the code change) (while you're reading this already: please help - this is sad...yes, it's about changing time zones...)",JavaScript
"yes, I do mean pg_restore",Python
D'oh! Left this in there originally. Need to grab these from the Custom Setting. Glad it wasn't my App Id and Token,OpenEdge ABL
Import ModTRS users and requests if using MySQL? Yes please. SQLite coming soon(TM),Java
Yes custom schema is working :-),Java
Crappy splash screen added! YAY,Java
added yes-no-p to terminate option,Emacs Lisp
"Change ""perm-grid""'s default to ""yes""",JavaScript
"stick animations there you go Kevin, CREATE A NEW TAB OF STICK FIGHTING! yay",Java
"Added vector slice pair, yay!",Standard ML
bingo,Ruby
test blarg jeg er lige glad,PHP
Procedures now works over network. Yay!,C++
"Coffeefying. Yes, I've been absorbed by the hype.",JavaScript
Yes.,Python
styled the callout yay,JavaScript
"added a reloadData method, initialized hasDayPicker to YES by default",Objective-C
Now uses GFX library yay!,Java
"Work on consolidating to Compute admin guide only Removes identity admin manual and image admin manual as separate ""books"" Changes index.html to go to ""current"" which is ""trunk"" and Diablo only if clicked Changes compute admin manual to include identity information imported from keystone.openstack.org Yes, still needs lots of work, just a starting point for consolidation. Change-Id: I979107ad496ea3e06be613a899ba2d1f83cfa56f",JavaScript
hurray - setting cookies with jquery and keeping score now works,Ruby
Implemented all 4 terrain modes. Yay!,Java
"Body * -> * * - Hey, I'm not proud... Signed-off-by: alexmwalker <alex@sitepoint.com>",JavaScript
"yay, gravatars! fixes S1561",JavaScript
"yay, gravatars! fixes S1561",JavaScript
Retry joining. Hard migrate test. Final commit? Yay,C++
"Yay, all the numbers add up.",Perl
play = YES,Objective-C
"Added integration with DynMap to display borders. It's enabled by default if you have DynMap installed, but note that you'll need DynMap v0.36 or newer for it to work. Borders will be displayed correctly as round or square and should be very accurate, based on a Y height of 64 on isometric maps. Any changes you make to your borders should almost immediately be reflected in DynMap (border radius or shape change, removal, new border set, etc.). Thanks to mikeprimm for adding a couple of requested features to DynMap which made this feature possible. New commands: /wb dynmap <on/off> - turn DynMap border display on or off. /wb dynmapmsg <text> - DynMap border labels will show this. New permissions: worldborder.dynmap (Op): Can enable/disable DynMap border display integration worldborder.dynmapmsg (Op): Can set the label text for borders shown in DynMap Also, a slight improvement to how boolean values are determined from command input; it accepts ""y"", ""yes"", ""true"" instead of just ""on"".",Java
"fixed an issue with the Pulse to redis code - the builduid is not as unique as I need it to be (and yes, Catlee had warned me ;) so instead of storing the build:<builduid> as the final hash I had to make that a set and then add build:<jobid> which has a key of builduid, master and buildnumber. also checked in first pass of kittenmonitor.py - it looks for the last N hours of build:<yyyy-mm-dd>.<hh> activity and then breaks down that activity into a dashboard:<yyyy-mm-dd>.<hh> hash to be consumed by the bpDashboard code. kittenmonitor also looks for certain thresholds and will email an alert when they are passed.",Python
yes,JavaScript
Merge pull request #27 from hallelujah/patch-1 Do not forget .rb extension,Ruby
Added team colours! You can now see who is on your team! Yay! :),Java
Added obs for NewTransfer -> TRANSFER IN = YES/NO,Java
"merged branch meandmymonkey/switchuser-noexception (PR #3580) Commits ------- 0e4f789 changed test config a98d554 [SecurityBundle] Allow switching to the user that is already impersonated (fix #2554) Discussion ---------- [Security] Disabled exception when switching to the user that is already impersonated Bug fix: yes-ish Feature addition: no Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: #2554 Todo: - --------------------------------------------------------------------------- by vicb at 2012-03-13T14:31:45Z @meandmymonkey thank you for your work on this issue. Would you have time to add functional tests ? --------------------------------------------------------------------------- by meandmymonkey at 2012-03-13T14:49:52Z Probably not today, but during the next few days, yes, of course. --------------------------------------------------------------------------- by meandmymonkey at 2012-03-14T18:05:19Z @vicb @schmittjoh Writing the tests I noticed switching to an non-existent user will not raise an exception. While it's not a security issue, it should raise an error for completeness sake, shouldn't it? --------------------------------------------------------------------------- by vicb at 2012-03-14T20:28:52Z I think it should (throw an `AuthenticationCredentialsNotFoundException`). _btw there is an extra `sprintf` in the original code that could be remove when attempting to exit_ --------------------------------------------------------------------------- by meandmymonkey at 2012-03-14T21:13:16Z The problem with throwing an `AuthenticationCredentialsNotFoundException` (or any other security exception for that matter) is that it derives from `AuthenticationException`, which means it gets caught by the framework and redirects to the login form, which is not what we want in this case. We need to throw something 500-ish at [L89](https://github.com/meandmymonkey/symfony/blob/d40b3376ec657deadb983228e4e12c12f446d580/src/Symfony/Component/Security/Http/Firewall/SwitchUserListener.php#L89), either a generic or a (new) custom Exception. --------------------------------------------------------------------------- by meandmymonkey at 2012-03-14T21:43:57Z IMHO a `LogicException`would be fine, like the one used at [L117](https://github.com/meandmymonkey/symfony/blob/d40b3376ec657deadb983228e4e12c12f446d580/src/Symfony/Component/Security/Http/Firewall/SwitchUserListener.php#L117), as the error is not really about a failed authentication. --------------------------------------------------------------------------- by vicb at 2012-03-14T21:49:04Z I agree and btw very good job on the tests ! --------------------------------------------------------------------------- by meandmymonkey at 2012-03-14T22:12:43Z Thanks :) --------------------------------------------------------------------------- by vicb at 2012-03-15T08:01:13Z Could you squash the commits, prefix the commit message with `[SecurityBundle]` and add `(fix #2554)` at the end ? --------------------------------------------------------------------------- by meandmymonkey at 2012-03-15T08:53:12Z Done. --------------------------------------------------------------------------- by vicb at 2012-03-15T09:19:09Z @fabpot this PR looks good to me. --------------------------------------------------------------------------- by fabpot at 2012-03-15T12:50:50Z Tests do not pass when you run them all. --------------------------------------------------------------------------- by meandmymonkey at 2012-03-15T13:41:45Z @fabpot @vicb With this config change, they pass when run together. What is weird though is that the reason seems to be that the config for the profiler gets overwritten when running all tests together, while being used correctly when run alone. Any idea what can cause this? They should be isolated from each other. The new config from 0e4f789 works, but enables the profiler for all SecurityBundle Tests... which is not strictly necessary.",PHP
yay,Ruby
"merged branch meandmymonkey/switchuser-noexception (PR #3580) Commits ------- 0e4f789 changed test config a98d554 [SecurityBundle] Allow switching to the user that is already impersonated (fix #2554) Discussion ---------- [Security] Disabled exception when switching to the user that is already impersonated Bug fix: yes-ish Feature addition: no Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: #2554 Todo: - --------------------------------------------------------------------------- by vicb at 2012-03-13T14:31:45Z @meandmymonkey thank you for your work on this issue. Would you have time to add functional tests ? --------------------------------------------------------------------------- by meandmymonkey at 2012-03-13T14:49:52Z Probably not today, but during the next few days, yes, of course. --------------------------------------------------------------------------- by meandmymonkey at 2012-03-14T18:05:19Z @vicb @schmittjoh Writing the tests I noticed switching to an non-existent user will not raise an exception. While it's not a security issue, it should raise an error for completeness sake, shouldn't it? --------------------------------------------------------------------------- by vicb at 2012-03-14T20:28:52Z I think it should (throw an `AuthenticationCredentialsNotFoundException`). _btw there is an extra `sprintf` in the original code that could be remove when attempting to exit_ --------------------------------------------------------------------------- by meandmymonkey at 2012-03-14T21:13:16Z The problem with throwing an `AuthenticationCredentialsNotFoundException` (or any other security exception for that matter) is that it derives from `AuthenticationException`, which means it gets caught by the framework and redirects to the login form, which is not what we want in this case. We need to throw something 500-ish at [L89](https://github.com/meandmymonkey/symfony/blob/d40b3376ec657deadb983228e4e12c12f446d580/src/Symfony/Component/Security/Http/Firewall/SwitchUserListener.php#L89), either a generic or a (new) custom Exception. --------------------------------------------------------------------------- by meandmymonkey at 2012-03-14T21:43:57Z IMHO a `LogicException`would be fine, like the one used at [L117](https://github.com/meandmymonkey/symfony/blob/d40b3376ec657deadb983228e4e12c12f446d580/src/Symfony/Component/Security/Http/Firewall/SwitchUserListener.php#L117), as the error is not really about a failed authentication. --------------------------------------------------------------------------- by vicb at 2012-03-14T21:49:04Z I agree and btw very good job on the tests ! --------------------------------------------------------------------------- by meandmymonkey at 2012-03-14T22:12:43Z Thanks :) --------------------------------------------------------------------------- by vicb at 2012-03-15T08:01:13Z Could you squash the commits, prefix the commit message with `[SecurityBundle]` and add `(fix #2554)` at the end ? --------------------------------------------------------------------------- by meandmymonkey at 2012-03-15T08:53:12Z Done. --------------------------------------------------------------------------- by vicb at 2012-03-15T09:19:09Z @fabpot this PR looks good to me. --------------------------------------------------------------------------- by fabpot at 2012-03-15T12:50:50Z Tests do not pass when you run them all. --------------------------------------------------------------------------- by meandmymonkey at 2012-03-15T13:41:45Z @fabpot @vicb With this config change, they pass when run together. What is weird though is that the reason seems to be that the config for the profiler gets overwritten when running all tests together, while being used correctly when run alone. Any idea what can cause this? They should be isolated from each other. The new config from 0e4f789 works, but enables the profiler for all SecurityBundle Tests... which is not strictly necessary.",PHP
Is good. merge yes.,PHP
added yes/no aliases for RSVP responses,Ruby
"merged branch jankramer/master (PR #3478) Commits ------- e6577de Added a 'post validation' event to the form component. Discussion ---------- [Form] Add post-validate event Bug fix: no Feature addition: yes Backwards compatibility break: no Symfony2 tests pass: n/a Fixes the following tickets: n/a Todo: n/a --------------------------------------------------------------------------- by fabpot at 2012-03-02T20:34:18Z ping @bschussek --------------------------------------------------------------------------- by vicb at 2012-03-04T09:19:53Z I think this is a good idea (It was something missing to properly handle PersistentFile i.e. you should not persist invalid files) --------------------------------------------------------------------------- by vicb at 2012-03-09T22:35:26Z @jankramer please remove the second commit from this PR (see http://symfony.com/doc/current/contributing/code/patches.html) in order to make this mergeable. --------------------------------------------------------------------------- by jankramer at 2012-03-10T09:26:04Z @vicb done, sorry about that commit: overlooked the fact that it was on the same branch...",PHP
Yes! Rendering reactor positions as red bars.,JavaScript
"merged branch jankramer/master (PR #3478) Commits ------- e6577de Added a 'post validation' event to the form component. Discussion ---------- [Form] Add post-validate event Bug fix: no Feature addition: yes Backwards compatibility break: no Symfony2 tests pass: n/a Fixes the following tickets: n/a Todo: n/a --------------------------------------------------------------------------- by fabpot at 2012-03-02T20:34:18Z ping @bschussek --------------------------------------------------------------------------- by vicb at 2012-03-04T09:19:53Z I think this is a good idea (It was something missing to properly handle PersistentFile i.e. you should not persist invalid files) --------------------------------------------------------------------------- by vicb at 2012-03-09T22:35:26Z @jankramer please remove the second commit from this PR (see http://symfony.com/doc/current/contributing/code/patches.html) in order to make this mergeable. --------------------------------------------------------------------------- by jankramer at 2012-03-10T09:26:04Z @vicb done, sorry about that commit: overlooked the fact that it was on the same branch...",PHP
rConf javadocs! Yay!,Java
"Renamed Ace to Proof. Going to see if I can grow accustomed to this new name. I like the name Ace so much, but there are already two very popular projects in the Node.js realm that are named Ace. I'm concerned. Given that I've already had someone open a ticket on Strata, because someone else has project named Strata, I can imagine that there will be two tickets opened on Ace. Yet, Ace is perfect for a test framework. If Ace your tests, that makes you an Ace. It has a Unicode character that I can display in the test output in Travis CI. It was a lot of fun, which means I might come back to it. Proof is a good enough name. It doesn't have the right spirit, though. It gets back into that sort of quality control language. Not as much fun. Has that dour burden of testing about it. The name Ace is fun. If I find I'm having less fun with proof, I'll switch the name back to Ace. The real drawback is its place in the NPM namespace. It comes up in the search with the ace framework. That framework is authored by a fellow from Twitter, so adoption seems to be happening rather quickly. When last I checked, this was some silly little three line project, with a lot of dependencies. It was a project to create a file server. It is probably the case that that project has been replaced by this project, so this person has been working for this name. I'm not eager to make too much of a test framework. I don't want to have long discussions about specs and mocking and all those many things for which I do not care. I don't want too much adoption, then, unless people are content to test the way I test, with little test programs, until I as the author, have some confidence in the code. Thus, proof can be tucked off to the side. With the name ace, I was excited about this project. With the name ace and naming conflicts, I am not excited about this project. With the name proof, I am not excited about this project. I don't much like the idea of being excited about a test framework. I'd be disappointed if this became something that required a lot of my time, a lot of my attention, a lot of my care. I'd rather learn more about algorithms and user experience, than focus on the process of software. Also, rewrote the README.md, culling all the hand-wringing, and moving all of the homeless sentiments to the bottom of the page for yet another future purge.",CoffeeScript
"Renamed Ace to Proof. Going to see if I can grow accustomed to this new name. I like the name Ace so much, but there are already two very popular projects in the Node.js realm that are named Ace. I'm concerned. Given that I've already had someone open a ticket on Strata, because someone else has project named Strata, I can imagine that there will be two tickets opened on Ace. Yet, Ace is perfect for a test framework. If Ace your tests, that makes you an Ace. It has a Unicode character that I can display in the test output in Travis CI. It was a lot of fun, which means I might come back to it. Proof is a good enough name. It doesn't have the right spirit, though. It gets back into that sort of quality control language. Not as much fun. Has that dour burden of testing about it. The name Ace is fun. If I find I'm having less fun with proof, I'll switch the name back to Ace. The real drawback is its place in the NPM namespace. It comes up in the search with the ace framework. That framework is authored by a fellow from Twitter, so adoption seems to be happening rather quickly. When last I checked, this was some silly little three line project, with a lot of dependencies. It was a project to create a file server. It is probably the case that that project has been replaced by this project, so this person has been working for this name. I'm not eager to make too much of a test framework. I don't want to have long discussions about specs and mocking and all those many things for which I do not care. I don't want too much adoption, then, unless people are content to test the way I test, with little test programs, until I as the author, have some confidence in the code. Thus, proof can be tucked off to the side. With the name ace, I was excited about this project. With the name ace and naming conflicts, I am not excited about this project. With the name proof, I am not excited about this project. I don't much like the idea of being excited about a test framework. I'd be disappointed if this became something that required a lot of my time, a lot of my attention, a lot of my care. I'd rather learn more about algorithms and user experience, than focus on the process of software. Also, rewrote the README.md, culling all the hand-wringing, and moving all of the homeless sentiments to the bottom of the page for yet another future purge.",CoffeeScript
Merge pull request #30 from hallelujah/patch-1 load_rails_config_settings after :load_custom_rails_config *and* before :bootstrap_hook,Ruby
add bingo class and text,Ruby
"[osx] fix release build and packaging, yes I really, really tested this to make sure it works",C
"[added] jbox2d, ported so it compiles with GWT. Main changes were merely getting rid of StrictMath, fixing Float.intToFloatBits, and ""unreflectifying"" the pooling package. Now some poor schmock has to write an API compatible thin wrapper, hurray :D git-svn-id: https://libgdx.googlecode.com/svn/trunk@3589 6c4fd544-2939-11df-bb46-9574ba5d0bfa",C
Merge pull request #30 from hallelujah/patch-1 load_rails_config_settings after :load_custom_rails_config *and* before :bootstrap_hook,Ruby
Done with demo app! Yay,Ruby
"Simplified code to display lessons, by removing unused group by, replacing it with a sort_by and thereby being able to remove key and value.each. This also sorts the lessons again: yay :-)",Ruby
"Simplified code to display lessons, by removing unused group by, replacing it with a sort_by and thereby being able to remove key and value.each. This also sorts the lessons again: yay :-)",Ruby
yay,JavaScript
"Simplified code to display lessons, by removing unused group by, replacing it with a sort_by and thereby being able to remove key and value.each. This also sorts the lessons again: yay :-)",Ruby
yay,JavaScript
yay,JavaScript
A docs! Yay!,Python
Yay :),Java
Done. *proud*,Java
"Let hubot answer yes or no questions, and choose between two options.",CoffeeScript
"Let hubot answer yes or no questions, and choose between two options.",CoffeeScript
ported to Adafruit_GFX library (yay!) & renamed & example updated yay!,C++
"Add to test_scanone_f2 with listeria data - I spent a *very* long time on chromosome 13. I'm glad I looked at it, as it includes the HorB case, which proved to be quite tricky. Important notes: - R/qtl was using what appears to be incorrect emit_f2 probabilities for the HorB / HorA cases. - The matching of true and observed genotypes wasn't working for these cases as the true geno picks just one phase and the HorB/HorA cases included just one of 0,1 or 1,0 and not both.",D
"Add to test_scanone_f2 with listeria data - I spent a *very* long time on chromosome 13. I'm glad I looked at it, as it includes the HorB case, which proved to be quite tricky. Important notes: - R/qtl was using what appears to be incorrect emit_f2 probabilities for the HorB / HorA cases. - The matching of true and observed genotypes wasn't working for these cases as the true geno picks just one phase and the HorB/HorA cases included just one of 0,1 or 1,0 and not both.",D
"Added useTrimmedFrameForAnchorPoint property to CCSprite. When set to YES this property makes the trimmed frame the frame of reference for the contentSize and the anchorPoint. When using trimmed frames with different offsets and same original sizes, the anchor point will be off. Or when using different trimmed frames with different offsets. This is useful for animations that use the trimmed frame as frame of reference for transformations or expect the anchor point to remain the same between frames with different offsets. To test the new behavior, I've included two new sprite tests.",Objective-C
Yay more label jackassery,Python
"Merge pull request #3 from lruslan/master Ah, yes ofcourse. I'll do a full deploy :)",Python
[bluray] Delete support for older libbluray xbmc will abort configure if an old libbluray is found and configure is auto or yes. To skip libbluray support in that case explicitly disable it.,C
"now also guesses ""maybe"" in addition to yes and no",Python
"Allow WP image links to be replaced (GH #25) WordPress.com feeds may include images linking to things like digg, adding a comment, twitter, etc. These appear as blocky text boxes, which are not very nice. This update adds some optional javascript which converts theses images to text, and adds the CSS class 'wordbridge_wp_link' to the link a element. This will allow the links to be styled. To change links, set the 'Convert Wordpress links to text' parameter on the blog menu item to 'Yes'",PHP
fixed gibberish closing the app on the yes or no screen,C#
"Bye bye oh-my-zsh. Yes, readline breaks on characters! And it's all because of dumb stty options. ack with its no-binary options",Perl
changed default theme to Tomorrow Night. yay!,Python
"Finished most tests, set up the model and ran it. Yay",Java
workaround for a crash on OSX debug adl when building for AIR 3.2 or 3.3. HURRAY. Also do not update debugger textfields when we are heartbeating if the debugger is not enabled. DOUBLE HURRAY.,ActionScript
BOA: Fix for Chive and others vhost include when _PHP_MODERN_ONLY is set to YES which is now default (Robert),Shell
BOA: Fix for Chive and others vhost include when _PHP_MODERN_ONLY is set to YES which is now default (Robert),Shell
"Merge DSL#element_at(point) and #element_at_point:for: into one Because it will parse using CRuby 1.9 and thus show up on rdoc.info, but is still compatible with existing code. YAY!",Ruby
"Big UI push, yay",Java
"Proposal for src/redis.c: If the config file has either specified ""daemonize yes"" or ""pidfile [/path/to/redis.pid]"" then it should create pidfile. Some background for this is: I usually run redis via daemontools. That entails running redis-server on the foreground. Given that, I'd also want redis-server to create a pidfile so other processes (e.g. nagios) can run checks for that.",C
Merge pull request #140 from jimi1283/master A couple of minor fixes - changed indent to None for serializer_pretty_json option to prevent formatted output - Added PrivateTmp=yes to cobblerd.service file for systemd,Python
"Yay putting off committing, even though it's already done :D",JavaScript
"Making the big image, smaller :) I'm not proud of it, but it makes Johann/Rae happy. So be it.",Ruby
"removing need for flash, yay",Objective-C
both sprites moving to their respective direction on click YAY,JavaScript
"update the framework version to the latest (yes, because updating the framework in the day of the deadline is a good idea)",Java
Yay debugging :D,JavaScript
Yay rationalizing the bot,JavaScript
Yay,JavaScript
"Yes, add it all",Objective-C
"in FrontierEvolver, FMM is now not limited to the 2 adjacent regions (but candidates to flip yes) and evolution is better near contact points. However, there is still a bug when the reference surfel of a given frontier is lost after the evolution of an other frontier",C++
merged branch drak/eventsubscribersnotice (PR #3902) Commits ------- e199049 [EventDispatcher] Fixed edge case not covered by tests that generated E_NOTICES Discussion ---------- [EventDispatcher] Fixed edge case not covered by tests. Bug fix: yes Feature addition: no Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: - Todo: - Fixes case not covered by tests.,PHP
yes,JavaScript
"merged branch meandmymonkey/xml-output-fix (PR #3569) Commits ------- 705e460 provided unmerged definition for correct help generation 45bbb5b added getNativeDefinition() to allow specifying an alternate InputDefinition for help generation Discussion ---------- [Console] Xml output fix Bug fix: yes Feature addition: no Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: #2667 Todo: add specific test As per my comment [here](https://github.com/symfony/symfony/issues/2667#issuecomment-4431944), added the ability to provide an InputDefinition that will not be changed by merging with the Application InputDefinition..",PHP
merged branch raulfraile/master (PR #3571) Commits ------- 14a18ae [WebProfilerBundle] Optimized toolbar and profiler icons with optiPNG Discussion ---------- [WebProfilerBundle] Optimized toolbar and profiler icons with optiPNG Bug fix: no Feature addition: no Backwards compatibility break: no Symfony2 tests pass: yes Optimized web toolbar and profiler icons (pngs) to slightly reduce PNG sizes. Lossless compression.,PHP
merged branch raulfraile/master (PR #3571) Commits ------- 14a18ae [WebProfilerBundle] Optimized toolbar and profiler icons with optiPNG Discussion ---------- [WebProfilerBundle] Optimized toolbar and profiler icons with optiPNG Bug fix: no Feature addition: no Backwards compatibility break: no Symfony2 tests pass: yes Optimized web toolbar and profiler icons (pngs) to slightly reduce PNG sizes. Lossless compression.,PHP
Made the button names make sense. Fixed the minimize button! YAY!,Java
Yay fixes,JavaScript
Yay,JavaScript
Yay refactoring,JavaScript
Yay refactoring,JavaScript
"yum, always yes.",Shell
Yay,JavaScript
SAVE: hmmm think we may have brought down the oklahoma county assessors server ... that sucks. what a piece. yay gov,C#
Yay fixes,JavaScript
Yay\!,JavaScript
Yay updating,JavaScript
Yay unicode working on Mongo,JavaScript
Yay unicode working on Mongo,JavaScript
merged branch raulfraile/master (PR #3571) Commits ------- 14a18ae [WebProfilerBundle] Optimized toolbar and profiler icons with optiPNG Discussion ---------- [WebProfilerBundle] Optimized toolbar and profiler icons with optiPNG Bug fix: no Feature addition: no Backwards compatibility break: no Symfony2 tests pass: yes Optimized web toolbar and profiler icons (pngs) to slightly reduce PNG sizes. Lossless compression.,PHP
Hack that fixes our map problems. Liviu will be amused,Ruby
"[fixed] WebGLContextAttributes are set correctly, stencil and antialias are passed to context creation. Hurray. git-svn-id: https://libgdx.googlecode.com/svn/trunk@3510 6c4fd544-2939-11df-bb46-9574ba5d0bfa",C
Bins are packable. Stuff is movable. Still a small glitch when colliding with other objects. Yay,Java
also accept 'yes' instead of 'y' for compile_templates management command,Python
IT WORKS FOR ALL 4 ROUTES YAY,Java
"New themes, yay",Emacs Lisp
Added support for running atop neo4j; this is the first version that produces usable results. YAY! - few fixes to the tools and json code - introduced slim factory layer for specializing constraint construction - neo4j support,Ruby
"Change up the BUGS section in Combinators.pm to reflect the fact that, yes, I have not yet written tests.",Perl
yay,Ruby
Simple basic 1 number bingo app used for my Stackato presentation,Python
"Merge pull request #236 from modilabs/mongo Mongo, yay!",JavaScript
Added missing odbl=yes possibility to tests,Ruby
YAY! can post cooking notes again,JavaScript
Yay,JavaScript
NEW! FIXED! YAY! :33 :) :),PHP
"We reset the usability stats *before* using them in reduceDB() Yes, a bug. A big one.",C++
Yay testing.,JavaScript
"Repo moved, yay!",Ruby
"Repo moved, yay!",Ruby
"New script to fix decompile differences between windows and linux/osx. Removed the MLProp special case, no longer needed as MLProp decompiles fine. Updated patches to work on all systems. Added warning and exit if the user does not say yes to the cleanup.",Java
"Final comparison graph, yay!",C++
merge conflicts. yay.,Ruby
Yay for testing,Python
"addNode() works, yay :D",Java
yes,Java
"Sharvani, Banka | #000 | Enabled 'yes' in OTC advice radio button. 'No' is still default.",Java
Added UDTableViewDemo & bug note when allowsMultipleSelection=YES & allowsMultipleSelectionDuringEditing=NO.,Objective-C
Fixed bug when allowsMultipleSelection=YES & allowsMultipleSelectionDuringEditing=NO.,Objective-C
Fixed bug when allowsMultipleSelection=YES & allowsMultipleSelectionDuringEditing=NO.,Objective-C
v.11 Select Proj menu works alogn with Select WP in timesheet! finally worked! so excited lol,Java
Yay.. 200OK,Groovy
Basic tire+elasticsearc is a go. FUCK YES.,Ruby
Added the automatic yes option from bug #161.,Python
"[feature/merging-style-components] Fixing typos in database updater Yes, I failed... again. Fixing 2 more typos in database_update.php PHPBB3-10632",PHP
yes,PHP
yay,Java
"no more cs110, yay :)",Shell
"merged branch gajdaw/2_1_component_classloader_cs (PR #4073) Commits ------- bc8855e [2.1][Component][ClassLoader] cs Discussion ---------- [2.1][Component][ClassLoader] cs Bug fix: no Feature addition: no Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: - Todo: - --------------------------------------------------------------------------- by fabpot at 2012-04-23T06:18:26Z Can you please remove the changes you have already made in the other PR as I merge 2.0 into master regularly. Then, you will need to squash you commits to avoid any conflict when merging will occur. Thanks. --------------------------------------------------------------------------- by gajdaw at 2012-04-23T06:50:58Z I hope that's it.",PHP
merged branch pulzarraider/httpfoundation_changelog_fix (PR #4169) Commits ------- ea3f8c5 [HttpFoundation] added native Redis session handler to CHANGELOG Discussion ---------- [HttpFoundation] Added native Redis session handler to CHANGELOG Bug fix: yes Feature addition: no Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: - Todo: -,PHP
BOA: Issue #1554972 by jlyon - PHP cli downgraded to 5.2 on upgrade with _PHP_MODERN_ONLY=YES (Robert),Shell
"everything working now, yay",Ruby
"merged branch johnkary/os400ConsoleBugFix (PR #4152) Commits ------- 5b92b9e [Console] Selectively output to STDOUT or OUTPUT stream Discussion ---------- [Console] Selectively output to STDOUT or OUTPUT stream Originally opened in this PR targeting master, but asked to target 2.0 instead: https://github.com/symfony/symfony/pull/4148 Bug fix: yes Feature addition: no Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: #1434 Todo: - As noted in the ticket discussion and linked discussion threads, IBM i5 Series has issues with writing output to STDOUT when viewed via their QP2TERM console. The output is likely not being converted to the correct character-encoding on the system level. This PR changes the default output stream from `php://stdout` to `php://output` for OS400 environments, which does not exhibit this issue. I'm using `php_uname('s')` to check for the presence of ""OS400"", which is at least one of the IBM OS's exhibiting this issue. This check is only done once when executing a Console task and shouldn't see any adverse affects in speed on the 99% other platforms using Symfony. I'm not a native to the OS400 platform so I can't really anticipate any other possible regressions that might occur from switching output streams for that platform. On my Mac, this change would strip all color output, but the PR code only changes output for OS400 environment. To my knowledge the QP2TERM console doesn't even support color, so no loss there. I think this change is best to make the Console component at least usable out of the box for anyone else trying to build CLI applications for use on OS400. --------------------------------------------------------------------------- by igorw at 2012-04-29T19:41:21Z #4146 might also need a fix for this. --------------------------------------------------------------------------- by johnkary at 2012-04-29T20:21:39Z @igorw Hmm. In this case for #4152 when creating a CLI application, `Symfony\Component\Console\Output\ConsoleOutput` is the [default implementation](https://github.com/johnkary/symfony/blob/5b92b9ed432ea1d5f2c596517fc7f8aa825b1977/src/Symfony/Component/Console/Application.php#L113) used by `Symfony\Component\Console\Application` when not specifying your own `OutputInterface`. Our hard-coded defaults were causing problems out of the box. I haven't looked too closely at the PRs surrounding the additions of `StreamingResponse` and your recent `OutputStream` but are we assuming anywhere that `php://stdout` is the default stream used when creating a streaming response? If so it MAY require a check similar to what I implemented for Console. My addition was only necessary because the output was being sent to a CLI console. If output is sent to a browser, I don't believe this would be an issue. If you have something that needs testing on OS400 just ping me.",PHP
Change sip notify message to yealink's to include reboot=yes after check-sync message.,PHP
"[Security] Configure ports in RetryAuthenticationEntryPoint according to router settings Bug fix: yes Feature addition: no Backwards compatibility break: no Currently the ports in RetryAuthenticationEntryPoint are fixed in the constructor call, there is no way to set them when you run your application on different ports. With this fix the ports are taken from the router configuration.",PHP
"yay, everything works\! now to write test scripts \!",C
stupid boolean should be YES,Shell
yay,Java
"saner solution for C-z, bookmarks yay",Emacs Lisp
TRANSPARANCY! yay,Java
"Special-case parsing of boolean values. Fix issue 5 (continue_scan can't be set to False) by special-casing boolean values in turnstile.tools.parse_limit_node(). If the value is specified as a sequence of digits, the string value is coerced to int, then coerced to bool; otherwise, the strings ""t"", ""true"", ""on"", ""y"", and ""yes"" are converted to True and the strings ""f"", ""false"", ""off"", ""n"", and ""no"" are converted to False. Any other string yields a warning.",Python
"merged branch uwej711/2.0 (PR #4160) Commits ------- 7fe236a [Security] Configure ports in RetryAuthenticationEntryPoint according to router settings Discussion ---------- [Security] Configure ports in RetryAuthenticationEntryPoint according to... ... router settings As requested against 2.0 branch ... Bug fix: yes Feature addition: no Backwards compatibility break: no Symfony2 tests pass: yes Currently the ports in RetryAuthenticationEntryPoint are fixed in the constructor call, there is no way to set them when you run your application on different ports. With this fix the ports are taken from the router configuration.",PHP
"merged branch pulzarraider/memcache_profiler_update (PR #4150) Commits ------- 1f6c8d5 [HttpKernel] Added mock objects for Memcache(d) and Redis e17217b [HttpKernel] Remove destructive flush() from memcache(d) storage profilers Discussion ---------- [HttpKernel] Memcache and Redis profiler storage update Bug fix: no Feature addition: yes Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: - Todo: - Changes of this PR: - change ```purge()``` method of memcache(d) profiler storage to delete only required items and be less destructive, - mock objects for Redis and Memcache(d) storages were added to make unit tests independent from memcache(d)/redis extensions and memcache(d)/redis servers running on localhost.",PHP
I will do this all day long yes I will.,Java
Merge branch 'master' of https://github.com/swe574group1/Bingo,JavaScript
replaced true false with yes no method,Ruby
"Special-case parsing of boolean values. Fix issue 5 (continue_scan can't be set to False) by special-casing boolean values in turnstile.tools.parse_limit_node(). If the value is specified as a sequence of digits, the string value is coerced to int, then coerced to bool; otherwise, the strings ""t"", ""true"", ""on"", ""y"", and ""yes"" are converted to True and the strings ""f"", ""false"", ""off"", ""n"", and ""no"" are converted to False. Any other string yields a warning.",Python
Added README file (with broken English yay!).,C#
"First pointer problems, yay.",C
JimEvans: Updating IE driver native code to be able to accept/dismiss dialogs with Yes/No buttons. git-svn-id: https://selenium.googlecode.com/svn/trunk@16305 07704840-8298-11de-bf8c-fd130f914ac9,JavaScript
transfer.py with generic upload_directory(). Yay! will need to port scripts to this and test,Python
"SDL mouse support completely added Finished re-adding mouse support. Yay :)! Note that it could be written a little better (example: I should be using SDL_SetRelativeMouseMode, but that function isn't present in the headers I have). However, it seems to act as expected, and has no significant bugs.",C++
"SDL mouse support completely added Finished re-adding mouse support. Yay :)! Note that it could be written a little better (example: I should be using SDL_SetRelativeMouseMode, but that function isn't present in the headers I have). However, it seems to act as expected, and has no significant bugs.",C++
yes,JavaScript
Fixed [JACKSON-368]; one of infamous 'failing' cases... (yay!),Java
Yay case sensitivity,JavaScript
the first working version of a clock display. yay,Python
"yay, you can issue effect and volume commands now!",C++
More informative error messages: moving the detailed validation errors in readable form up to the user interface. > > Error handling as a service to the user -- yes\!,Python
Reworking the logic to accept only tracks with access=yes.,C++
Ensure invalid ip address 0.0.0.0 cannot be used for connecting to localhost via ssh (yes it happens),Python
"There is no other_universe_node crap anymore, yAy",Python
bollards are ignored if access=yes tag is set at the node.,C++
"Package uninstallation should work everywhere now Yes, packageView.tpl seems to be still buggy, investigating this tomorrow or whatever. Fixes #498",PHP
yay!,Python
"Fixed the fucking squigglies, and made routes work. Yay!",PHP
"Remove erroneous backslash The backslash at the end of the line wasn't a line continuation, and turned the following string into a reference. Yay perl!",Perl
Yay!,Java
set DM-Upload-Allowed to yes,C
Inverse blocks now get parsed. yay. Fixes #4,JavaScript
JimEvans: Updating IE driver native code to be able to accept/dismiss dialogs with Yes/No buttons. git-svn-id: https://selenium.googlecode.com/svn/trunk@16305 07704840-8298-11de-bf8c-fd130f914ac9,JavaScript
fsck.minix: use rpmatch() for yes/no question Signed-off-by: Sami Kerola <kerolasa@iki.fi>,C
fsck.minix: use rpmatch() for yes/no question Signed-off-by: Sami Kerola <kerolasa@iki.fi>,C
yay now we have a Share Stories button like Connect Entries,PHP
fsck.minix: use rpmatch() for yes/no question Signed-off-by: Sami Kerola <kerolasa@iki.fi>,C
"adding switch to disable SHK+pushOnFavorites, YES in DefaultSHKConfigurator",Objective-C
Yay for leaflet,JavaScript
yes hello,PHP
yes hello 2,PHP
yes hello 2,PHP
comments! yay!,Java
"SHKMail now supports isHTML and toRecipients. SHKFacebook now supports link descriptions. SHKMail: // You can now supply an optional, comma-separated recipient list. [item setCustomValue:@""foo@bar.com,foo@baz.com"" forKey:@""toRecipients""]; // HTML mode is now optional (previously forced to YES). // Set to ""no"" (case-insensitive) to disable. Default is still YES. [item setCustomValue:@""no"" forKey:@""isHTML""]; SHKFacebook: // You can now supply an optional, custom description for shared links. [item setCustomValue:@""My Shared Link Description"" forKey:@""description""];",Objective-C
merged branch dlsniper/update-validators (PR #3656) Commits ------- a09deca [Validator] Updated Romanian translation Discussion ---------- [Validator] Updated Romanian translation Bug fix: no Feature addition: yes Backwards compatibility break: no Symfony2 tests pass: [![Build Status](https://secure.travis-ci.org/dlsniper/symfony.png?branch=master)](http://travis-ci.org/dlsniper/symfony)Fixes the following tickets: - Todo: - Updated to use the latest strings.,PHP
merged branch dlsniper/update-validators (PR #3656) Commits ------- a09deca [Validator] Updated Romanian translation Discussion ---------- [Validator] Updated Romanian translation Bug fix: no Feature addition: yes Backwards compatibility break: no Symfony2 tests pass: [![Build Status](https://secure.travis-ci.org/dlsniper/symfony.png?branch=master)](http://travis-ci.org/dlsniper/symfony)Fixes the following tickets: - Todo: - Updated to use the latest strings.,PHP
"merged branch michal-pipa/symlink-fix (PR #4012) Commits ------- 94bee7a [Filesystem] symlink() creates target directories Discussion ---------- [Filesystem] symlink() creates target directories Bug fix: yes Feature addition: no Backwards compatibility break: no Symfony2 tests pass: yes [![Build Status](https://secure.travis-ci.org/michal-pipa/symfony.png?branch=symlink-fix)](http://travis-ci.org/michal-pipa/symfony) Fixes the following tickets: #3967 Todo: - Changed symlink() method behavior to recursively create target directory if it does not exist. It makes Filesystem component methods more consistent since copy() does the same. It is also more convenient. Also mirror() fails to create symlink in non-existent directory (if we don't want to change symlink(), than we need to fix mirror()). Fixes: #3967",PHP
"Merge branches 'tien', 'experimental' and 'maint' * tien: Fixed some errors. Yes, OK. * experimental: Fixed some errors. Yes, OK. * maint: Merge branches 'tien' and 'experimental' into maint Fixed some errors. Yes, OK.",JavaScript
"Merge branches 'tien' and 'experimental' into maint * tien: Fixed some errors. Yes, OK. * experimental: Fixed some errors. Yes, OK.",JavaScript
"Fix problem with bad site activity data When the names are not properly set in the site activity, this probably means that the teams are not properly configured with a ranking. A small check was put in place to verify that there are four names. Yes this is defense. Why there aren't four names is still not known.",PHP
"tonnes of progress yay (/eval, /update, /formula)",Haskell
Merge branch 'master' of https://spatman@github.com/Niling/Yes--n--Noes.git Conflicts: YesNNoes/src/yes/n/noes/YesNNoesActivity.java,Java
Like button autoresize can disable with autoresizeDisabled = YES [Deliver #28332363],Objective-C
Merge branch 'master' of https://spatman@github.com/Niling/Yes--n--Noes.git,Java
"Add a build-only, install-nly and prompt skip (yes) feature",Shell
Sort YES and NO buttons,Python
Merge branch 'master' of https://Ekman@github.com/Niling/Yes--n--Noes.git Conflicts: YesNNoes/src/yes/n/noes/func/AddPCDialog.java,Java
Merge branch 'master' of https://spatman@github.com/Niling/Yes--n--Noes.git,Java
Merge branch 'master' of https://spatman@github.com/Niling/Yes--n--Noes.git,Java
"Defining rota app class models Defining the classes for the rota app model. This corresponds to the relationships that we're creating between Rota's users, and intermediate store for capturing whether a user has said yes/no/maybe. Should make sense from looking at the code and the respective comments.",Python
Sort YES and NO buttons,Python
Yay! Awesome autoclose capabilities,VimL
Merge branch 'bingo' of github.com:emergentmisbehavior/Gsales into bingo,C#
Changed behavior when forceCollectionMapping=YES so it works with our data sources,Objective-C
yes,JavaScript
Merge pull request #746 from larsbutler/db-script-allow-non-sudo-non-interactive Allow the bin/create_oq_schema script to be run as a normal user in non-interactive (--yes) mode. [r=trivial],Python
Merge pull request #746 from larsbutler/db-script-allow-non-sudo-non-interactive Allow the bin/create_oq_schema script to be run as a normal user in non-interactive (--yes) mode. [r=trivial],Python
YAY,ActionScript
"Okay, the completed version of my previous commit... Camera: Added two initialize functions. One for setting view width/height for the pre-game initialize. The other is setting level width/height constraints for each level on the level creation. Level: Completely remade this class and it now encompasses some of the responsibilities the StateManager class was managing. Loads and draws the level. Will eventually include an Update function as well. Thinking player/enemy initializations will also be included here. NinjaGame: Previously known as Game3.cs in all my other commits. Renamed it to fit more with the game idea instead of just ""Game3."" Looked into loading fonts, sounds, etc. and added some commented out initializations for each. StateManager: Thinking of doing away with this class all together, but it may be useful when everything starts getting added together. TileMap: Changed a bit to make creating new levels easier, and draw mo betta. Assets, Settings, other classes removed: Figured they were not required after discussing the game direction with you guys on Wednesday. Thinking saves are not necessary, each game start up requires a new game to be created just like in the ""olden days"" of gaming. Content Directories: Added a few more folders, changed the names of some to have an overall more organized feel (hopefully). Also levels have a new naming convention of 0.map, 1.map, 2.map, 3.map, etc. and the levels will automatically be created with a String.Format function depending on which level you are on/going to. Really glad about this commit, the organization and usage of the classes I have are a bit more intuitive. Also I started adding some C#docs in. They are not that greatly detailed, at least yet, but I wanted to try and add those in or at least get some.",C#
menus yay,C++
"cloned old project, pretty much for its user model The cloned project (CandidateTracking) is a project I'm building to allow employers seeking employees to post opportunities and allows the potential candidates (seekers) to both post their resumes and apply to opportunities. This project has a (very) good system of managing multiple users (admin, recruiter and applicant) already built into it; thus, altering this system for the needs of the ""AdProj"" is better than rolling out a whole new authentication/authorization system. On a side note, this is the first time I'll have not only mined but cloned one of my previous projects for use in a new project, and I'm excited and confident that the result will be capable (though possibly not beautiful).",Ruby
Fixed universe. Didn't seem to cause big problems until <BINGO> checking.,Haskell
"merged branch drak/genericevent (PR #3784) Commits ------- 70a6de9 [EventDispatcher] Remove data property 4ff92b9 [EventDispatcher] Added generic event class. Discussion ---------- [EventDispatcher] Added generic event class. Bug fix: no Feature addition: yes Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: - Todo: - Provides a ready to go all purpose event object. --------------------------------------------------------------------------- by Koc at 2012-04-04T17:53:41Z What use case of this? --------------------------------------------------------------------------- by drak at 2012-04-04T17:57:46Z It generically fits observer pattern use for those who do not want to make a specific event class for each and every little thing. This is akin to EventArgs + a subject. --------------------------------------------------------------------------- by fabpot at 2012-04-20T07:55:05Z This is basically what we had in symfony 1.x. Some comments: * I would remove the `data` as it makes things more complex and more difficult to understand (as arguments is an array, you can put your data there too); * I would use the standard `set`, `get`, `all`, ... methods for the `arguments` related methods --------------------------------------------------------------------------- by drak at 2012-04-20T08:11:31Z OK, I'll rework the class. Thank you for your consideration. --------------------------------------------------------------------------- by drak at 2012-04-20T08:56:53Z @fabpot - I did some work on the class, but it seemed strange to not use get/setArgument because there is another property, the subject. This is mentioned in the conventions guide: ``` For many relations where the convention does not apply, the following methods must be used instead (where XXX is the name of the related thing): ``` If you still want me to change it, let me know.",PHP
"merged branch drak/genericevent (PR #3784) Commits ------- 70a6de9 [EventDispatcher] Remove data property 4ff92b9 [EventDispatcher] Added generic event class. Discussion ---------- [EventDispatcher] Added generic event class. Bug fix: no Feature addition: yes Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: - Todo: - Provides a ready to go all purpose event object. --------------------------------------------------------------------------- by Koc at 2012-04-04T17:53:41Z What use case of this? --------------------------------------------------------------------------- by drak at 2012-04-04T17:57:46Z It generically fits observer pattern use for those who do not want to make a specific event class for each and every little thing. This is akin to EventArgs + a subject. --------------------------------------------------------------------------- by fabpot at 2012-04-20T07:55:05Z This is basically what we had in symfony 1.x. Some comments: * I would remove the `data` as it makes things more complex and more difficult to understand (as arguments is an array, you can put your data there too); * I would use the standard `set`, `get`, `all`, ... methods for the `arguments` related methods --------------------------------------------------------------------------- by drak at 2012-04-20T08:11:31Z OK, I'll rework the class. Thank you for your consideration. --------------------------------------------------------------------------- by drak at 2012-04-20T08:56:53Z @fabpot - I did some work on the class, but it seemed strange to not use get/setArgument because there is another property, the subject. This is mentioned in the conventions guide: ``` For many relations where the convention does not apply, the following methods must be used instead (where XXX is the name of the related thing): ``` If you still want me to change it, let me know.",PHP
Looks like SF works as a data source. Yay!,PHP
Merge remote branch 'demosdemon/MBS-2479-Mark-approvals-differently-from-normal-Yes-votes' * demosdemon/MBS-2479-Mark-approvals-differently-from-normal-Yes-votes: fix stats add commas Add Approve vote statistics Add Approve vote statistics Fix wrong commit,Perl
yes,Ruby
Yes,C
"merged branch jfsimon/issue-3896 (PR #4029) Commits ------- 686653a [HttpKernel] Fixed wache vary write (fixes #3896). Discussion ---------- [HttpKernel] Fixed cache vary write (fixes #3896). Bug fix: yes Feature addition: no Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: #3896 Same as https://github.com/symfony/symfony/pull/4001, but for write method.",PHP
are we about to finally get this build fixed? No? Yes?,Groovy
"merged branch tonypiper/ignore-composer-phar (PR #4034) Commits ------- a72d7ef ignore composer.phar ddca4bb Update CHANGELOG-2.1.md Discussion ---------- [Global] ignore composer.phar for running unit tests the external dependencies are managed using composer (since aa055dfd983ccfca6e09a375dd7111c874452dab), so it's necessary to download composer.phar to install them. We don't want composer.phar to be comitted to the codebase so it's necessary to ignore it. Bug fix: no Feature addition: no Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: - Todo: - --------------------------------------------------------------------------- by Seldaek at 2012-04-20T13:19:29Z I agree it should be ignored, but you also probably should install it somewhere globally on your machine and put that in the PATH so you have it everywhere and don't need 300 copies of it. Incidentally it would also not require you to gitignore it since it would be outside of the git dirs. --------------------------------------------------------------------------- by tonypiper at 2012-04-20T13:24:56Z I was going to revise the documentation for running tests and your approach would, of course, be best but I thought a belt-and-braces approach wouldn't hurt...",PHP
"Merge branch 'drm-fixes' of git://people.freedesktop.org/~airlied/linux Pull the intel i915 hibernation memory corruption fix from Dave Airlie: ""I tracked down the misc memory corruption after i915 hibernate to the blinking fbcon cursor, and realised the i915 driver wasn't doing the fbdev suspend/resume calls at all. nouveau and radeon have done these calls for a long time. This has been fairly well tested and is definitely the main culprit in hibernate not working."" Yay. * 'drm-fixes' of git://people.freedesktop.org/~airlied/linux: drm/i915: suspend fbdev device around suspend/hibernate",C
"merged branch tonypiper/ignore-composer-phar (PR #4034) Commits ------- a72d7ef ignore composer.phar ddca4bb Update CHANGELOG-2.1.md Discussion ---------- [Global] ignore composer.phar for running unit tests the external dependencies are managed using composer (since aa055dfd983ccfca6e09a375dd7111c874452dab), so it's necessary to download composer.phar to install them. We don't want composer.phar to be comitted to the codebase so it's necessary to ignore it. Bug fix: no Feature addition: no Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: - Todo: - --------------------------------------------------------------------------- by Seldaek at 2012-04-20T13:19:29Z I agree it should be ignored, but you also probably should install it somewhere globally on your machine and put that in the PATH so you have it everywhere and don't need 300 copies of it. Incidentally it would also not require you to gitignore it since it would be outside of the git dirs. --------------------------------------------------------------------------- by tonypiper at 2012-04-20T13:24:56Z I was going to revise the documentation for running tests and your approach would, of course, be best but I thought a belt-and-braces approach wouldn't hurt...",PHP
Add glow behind drake views that have glow:YES,JavaScript
"Go ahead and add a hack to skip tests on FreeBSD. With this, tests pass on FreeBSD too. Yay!",Ruby
Yay works,C
"merged branch drak/caed (PR #3783) Commits ------- d04638a [EventDispatcher] More logical positions for classes. Discussion ---------- [EventDispatcher] More logical positions for classes. Bug fix: no Feature addition: no Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: - Todo: - --------------------------------------------------------------------------- by stof at 2012-04-04T18:59:02Z ah sorry, I looked at the patch too fast. Only the interface is moved",PHP
"Fix: yes, now we recovered the meaning of right/remainingRight.",C++
merged branch ruimarinho/profiler_ie7 (PR #4032) Commits ------- ffc074b [Profiler] Fixed IE7 JavaScript errors Discussion ---------- [Profiler] Fixed IE7 JavaScript errors Bug fix: yes Feature addition: no Backwards compatibility break: no Symfony2 tests pass: yes Requires merge of another [PR](https://github.com/doctrine/DoctrineBundle/pull/61) available on the `doctrine/DoctrineBundle` repository (compatibility changes to `db.html.twig`). --------------------------------------------------------------------------- by fabpot at 2012-04-20T14:15:22Z That does not work for me.,PHP
Added testing to see if copying of Process objects works. It doesn't. Hurray!,C++
So freaking excited. I got the content to load dynamically as a dependant of the menu db.,PHP
merged branch jakzal/2.0-StaticMethodLoaderFix (PR #3937) Commits ------- 089188f [Validator] Fixed StaticMethodLoader when used with abstract methods. Discussion ---------- [Validator] Fixed StaticMethodLoader when used with abstract methods. Bug fix: yes Feature addition: no Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: #3179,PHP
"[HttpFoundation] HTTP Basic authentication is broken with PHP as cgi/fastCGI under Apache Bug fix: yes Feature addition: no Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: #1813 Todo: - In order to work, add this to the .htaccess: RewriteEngine on RewriteRule .* - [E=HTTP_AUTHORIZATION:%{HTTP:Authorization}] RewriteCond %{REQUEST_FILENAME} !-f RewriteRule ^(.*)$ app.php [QSA,L]",PHP
Yay logging + config file,ooc
Crossed some items off of the todo list in README.. yay!,Ruby
Adding reminder emails Reminder emails can be manually triggered at any time by admin or moderator Emails are sent to both users who have rsvp'ed yes/maybe and users who have not rsvp'ed at all. The emails differ slightly depending on the case.,Ruby
"ah yes that's why, so just use absolute so it's pretty in local dev mode",Ruby
"Yay, working tiled animation.",C++
Solved josephus. A big hurray to BruteForce and Random algorithm :D Signed-off-by: Meldanor <Bhaals@gmx.de>,Java
Zooming tweaks. - added power of ten indicator - rewrote zoom equation to work with scientific notation. Yay.,JavaScript
"Lightened red color in instructions Just changed Lightness in the color's HSL representation from 47% to 70%. Yes, now it is no longer the exact same color as the actual red square. But it's easier to read the red text against the black background of the instructions bubble, and it's still red enough to look like the square. Some possible alternatives to this: give .red a white background so you can use the original red color and and still read it keep this change, and also change the name of this class to .instructions-red so we don't confuse it with the red color of the end position square",JavaScript
Now puts a red rectangle on the screen! Yay!,Objective-C
yay,JavaScript
Fixed A lot Of Bugs Yay!,Java
Yay background placeholder,ooc
Yay points,JavaScript
"merged branch ruimarinho/http_digest (PR #3778) Commits ------- fd1ea69 [Security] [HttpDigest] Fixes a configuration error caused by an invalid key child node configuration Discussion ---------- [Security] [HttpDigest] Fixes a configuration error caused by an invalid ""key"" child node configuration ``` Bug fix: yes Feature addition: no Backwards compatibility break: no Symfony2 tests pass: yes ```",PHP
Fixed bug where search settings popped up after settings get changed from Yes -> No and no page refresh took place.,Python
"pyglue: test cases for Python API To run: $ mkdir build && cd build $ cmake -D OCIO_BUILD_TESTS=yes .. $ make $ make test $ cat Testing/Temporary/*.log Or you can execute ""build/src/pyglue_tests/ocio_pyglue_tests.sh""",C++
"Yay, it works\!",C++
Done debugging related folders (yay!),PHP
Forall types! working at tested! hell yes!,Scheme
"Added a simple anti spam function to the whatis function, and some small eastereggs. Cause it's almost easter! yay.",C#
Added yes no images,Python
"Started development of CInstitute, but found a groß bug: when saving objects, special types do not get unserialised, which means that I need to go through all sources and change the behavior as follows: the flag used to encode/decode the object should be set by default, or even better, it should be replaced by a glad that PREVENTS this automatic encoding. Will need to thoroughly test this and thoroughly ensure that the serializing is on the ancestor's object side and the unserialising is on the container ancestor side.",PHP
"Cleans up documentation which was ignored by JavaDoc before prior push; now it's all unified. Changes the *Style tags to \1Standard, as a short tag name is unnecessary for a 'yes or no' value.",Java
More buffer tests YAY,Java
"SRKeyCodeTransformer as well as SRASCIIKeyCodeTransformer can be configured to transform functional keys into plain strings or unicode chars for functional. By default it transforms functional key into unicode key which is suitable for setKeyEquialent: but not for drawing. You should set transformsfunctionKeysToPlainStrings to YES, if you want to draw the result of transforming.",Objective-C
"Need to correctly configure the template's options. pull the config through the bridged interface configuration routine template debugging add another test line set the setting in the correct areas, yay dynamic method calls",Ruby
"-added date stamps to data objects -fixed a few more bugs (everything finally working as intended, yay)",Java
"New: Updated readme to reflect the recent change in defualt operation. Yes, I'm aware it repeats itself in the Example Usage. You shouldn't have to thoroughly read a page to get up and running in seconds.",Python
Added google analytics - yay,Objective-C
Items added to shopping cart yay,Ruby
"Ay yai yai, should have defaulted it to YES.",Objective-C
"Fixed the GitHub URL. Yes, I am an idiot. Sigh.",Python
Fix dialyzer warnings for webmachine_request:port_string() Fixes two bugs: % git branch | egrep '\*' * master % git log | head -1 commit 656aa69c6c6afd79d3446fd13c4f3bb3ba253ce5 % dialyzer -Wno_return ebin/*beam deps/*/ebin/*beam Checking whether the PLT /Users/fritchie/.dialyzer_plt is up-to-date... yes Compiling some key modules to native code... done in 0m21.94s Proceeding with analysis... webmachine_request.erl:815: The pattern 'http' can never match the type string() webmachine_request.erl:820: The pattern 'https' can never match the type string() Unknown functions: compile:forms/2 fdsrv:bind_socket/2 fdsrv:start/0 fdsrv:stop/0 done in 0m15.44s done (warnings were emitted),Erlang
Yay! Reflection of particles works now!,C++
"implemented all remaining and useful methods of ChannelArray, including tests. Next up is the actual header reader implementation, yay ...",Ruby
"* Update to GIT snapshot. * Bumped Standards-Version to 3.9.3. * Changed tarball compression format: LZMA2 is used now. * debian/rules was updated: - now dh is used instead of direct dh_* commands - now uscan is used for checking current upstream version (dpkg-parsechangelog was used earlier) * debian/doc/uhub.1, debian/doc/uhub.conf and debian/doc/users.conf were removed: now they are available in upstream. * debian/doc/uhub-passwd.1 was created: there is no such manpage in upstream yet. * debian/uhub.manpages was updated (see above). * debian/control was updated: - added string `DM-Upload-Allowed: yes' - added dependence from packages fakeroot and libsqlite3-dev * debian/copyright was updated: - URL in Format field was updated - years were updated * Upstream possibly fixed build for hurd-i386, kfreebsd-i386, kfreebsd-amd64, s390 and s390x.",Shell
"* Update to GIT snapshot. * Bumped Standards-Version to 3.9.3. * Changed tarball compression format: LZMA2 is used now. * debian/rules was updated: - now dh is used instead of direct dh_* commands - now uscan is used for checking current upstream version (dpkg-parsechangelog was used earlier) * debian/doc/uhub.1, debian/doc/uhub.conf and debian/doc/users.conf were removed: now they are available in upstream. * debian/doc/uhub-passwd.1 was created: there is no such manpage in upstream yet. * debian/uhub.manpages was updated (see above). * debian/control was updated: - added string `DM-Upload-Allowed: yes' - added dependence from packages fakeroot and libsqlite3-dev * debian/copyright was updated: - URL in Format field was updated - years were updated * Upstream possibly fixed build for hurd-i386, kfreebsd-i386, kfreebsd-amd64, s390 and s390x.",Shell
"I got fully working c completion, hurray for supertab",Emacs Lisp
Add cheerful's packages.l http://www2.ocn.ne.jp/~cheerful/script/xyzzy/packages_tki.l,C++
Remove unknown ability events since we no longer use them. Yay!,Python
Renamed MongoX::Class to Myoll MongoX::Class was already taken. Sad days. Myoll doesn't mean much. But it sounds nice. Hurray.,Perl
apr 5 yay,JavaScript
"I think this is one of the most significant information for me. And i'm glad reading your article. But want to remark on some general things, The . . .",Emacs Lisp
"merged branch drak/caed (PR #3783) Commits ------- d04638a [EventDispatcher] More logical positions for classes. Discussion ---------- [EventDispatcher] More logical positions for classes. Bug fix: no Feature addition: no Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: - Todo: - --------------------------------------------------------------------------- by stof at 2012-04-04T18:59:02Z ah sorry, I looked at the patch too fast. Only the interface is moved",PHP
Merge pull request #144 from brooklynpacket/9c760aa8ea2c7b12209ce1bdee97e1d269c71728 fix setColor with opacityModifyRGB == YES,Objective-C
"submit within tooltip, optin redirects, yay",Ruby
"Switch order from no/yes to yes/no on resolve function. I'll be doing this for all functions which return optional values, such as string_long. The yes/no order looks more natural because the True case comes first, e.g.: string_long str (\num print ""Yes, that's a valid number: ""; print num; nl;) (print ""No, that's not a valid number;nl;)",C
Boostrap ? Really ? Oh yes ! First implementation of Twitter Bootstrap. Amazing css and js classes.,Python
more comments! yay,Ruby
yay! subsequent moveTo!,JavaScript
Fix yes-or-no-p for better handling of default answer.,PHP
"Game no longer crashes (yay), but added synchronization makes it slightly unplayable.",Java
I made collapsable headers! Yay! I made headers that default open & click to collapse.,JavaScript
cf. http://wiki.answers.com/Q/There_is_a_ton_of_apples_or_there_are_a_ton_of_apples (Yay WikiAnswers),Ruby
"Yes I have a class named ""Controller"" wanna fight about it?",C#
merged branch drak/patch-2 (PR #3556) Commits ------- 0761b8a [HttpFoundation] Restore compliance with RFC2324 Discussion ---------- [HttpFoundation] Restore compliance with RFC2324 Bug fix: yes Feature addition: no Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: - Todo: -,PHP
merged branch drak/patch-2 (PR #3556) Commits ------- 0761b8a [HttpFoundation] Restore compliance with RFC2324 Discussion ---------- [HttpFoundation] Restore compliance with RFC2324 Bug fix: yes Feature addition: no Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: - Todo: -,PHP
IT WORKS FOR ALL 4 ROUTES YAY,Java
"Fixed method-names. Yes, that's the way you should NOT use reflection but I'm too lazy :P",Java
"Make input_alsa more configurable through VisParams. Move input device checks to input_alsa. And yes, I disabled attempts to force supportive permissions. More work trying to get mic input to work. No go. :(",C
holy shit I was drunk when I committed all those pdbs. yes I should have run the tests...,Python
"Instead of a circle, a triangle is now painted pointing to the direction of the current force vector. I also added the capability of steering the object using the left and right arrow buttons. And, yes, I did some other cleansing and polishing stuff, but that's not the most important part of this commit.",Java
yay edits,Java
yay crawling,Python
yes,JavaScript
"added test for string files yes, yes, I know test should be written first...do as I say not as I do...",Ruby
er: make guest attending=yes,Ruby
yes,JavaScript
"merged branch gimler/encoder_fix (PR #3122) Commits ------- f3c413d add missing class var; add phpdocs Discussion ---------- add missing class var; add phpdocs Bug fix: yes Feature addition: no Backwards compatibility break: no Symfony2 tests pass: yes --------------------------------------------------------------------------- by fabpot at 2012-01-16T11:12:27Z We don't document properties, especially private ones. --------------------------------------------------------------------------- by vicb at 2012-01-16T11:20:44Z Good doc always help and should be accepted even for private properties. However sometimes doc isn't necessary: `The digest algorithm to use` does not bring more information than the name itself `MessageDigestPasswordEncoder::algorithm`, the `@var` annotation could be useful - even more for objects & arrays. --------------------------------------------------------------------------- by gimler at 2012-01-16T11:37:54Z i have remove the private property comments.",PHP
yay,PHP
"Registration works as long as you only register one class, yay",C++
mixing tabs/spaces yay,JavaScript
yay,Objective-C
yay,Objective-C
yay,Objective-C
yay,Objective-C
yay,Objective-C
yay,Objective-C
"video: tegra: dc: Ignore suspend if DSI is disabled DSI enables during suspend time host1x, and then checks if DSI is really enabled. Now DSI first checks if it's enabled. If yes, it'll turn on host1x and disable it. Bug 887332 Change-Id: I206f908a62d0a56f0737c31634fa46613ca07d7e Reviewed-on: http://git-master/r/82755 Reviewed-by: Mayuresh Kulkarni <mkulkarni@nvidia.com> Reviewed-by: Automatic_Commit_Validation_User Reviewed-by: Animesh Kishore <ankishore@nvidia.com> Reviewed-by: Nitin Kumbhar <nkumbhar@nvidia.com> Reviewed-by: Kevin Huang (Eng-SW) <kevinh@nvidia.com> Reviewed-by: Terje Bergstrom <tbergstrom@nvidia.com> Tested-by: Terje Bergstrom <tbergstrom@nvidia.com>",C
sys-apps/portage: cygdll_protect: almost sorta working but not really Finally we get enough bugs out of cygdll_protect to actually absorb a variable from make.conf and rename a file. yay!,Shell
yes,JavaScript
"join lines, y-n instead of yes-no etc in .emacs",Emacs Lisp
"yes, its still me adding some shit log",Ruby
Added some support methods for scrolling to top for multiple scrollsToTop=YES scrollViews. Conflicts: LeftMiddleRight/RHLayoutScrollView.m,Objective-C
yay,Java
PATH cleanup time. yay,VimL
yes,JavaScript
merged branch kriswallsmith/http/forwarded-port (PR #3111) Commits ------- d67d419 [HttpFoundation] added missing trustProxy condition Discussion ---------- [HttpFoundation] check trust setting in getPort() Added a missing `self::$trustProxy` check in `Request::getPort()`. ``` Bug fix: yes Feature addition: yes Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: - Todo: - ```,PHP
"Some minor tweeks and the odd bug fix, nothing to get excited about.",XQuery
propmodder reboot required now shows only when it should yay! no double!,Java
Using /dev/tty for yesno() is wrong because yes 'n' | cp -ial needs to work.,C
"Triangle works, yay",Objective-C
"Hell yes, it's alive, it's alive",Scala
Merge pull request #2 from balp/master Yes the world is cruel,Python
Workflow Overview Tab Moved to End of Tab panel add workflow step details Completed print summary function to allow printing of panel and grid component update mail subject to allow periods Update detail display to show SP yes no fields properly as a display field added validation for leading and trailing spaces in tasking and workflow titles,JavaScript
"paypal purchase working, yes yes yes",JavaScript
"Less sucky PDF output, yay.",Perl
"<rdar://problem/11095005> Fixed a performance regression when dynamic types are enable where we would ask a C++ type if it can possibly be dynamic. Previously we would force the type to complete itself and then anwwer the question definitively. Now we ask the type if it is already complete and only definitively answer the question for completed types and just say ""yes"" for non-complete C++ types. We also always now answer yes for Objective C classes and do not complete those types either.",C++
"<rdar://problem/11095005> Fixed a performance regression when dynamic types are enable where we would ask a C++ type if it can possibly be dynamic. Previously we would force the type to complete itself and then anwwer the question definitively. Now we ask the type if it is already complete and only definitively answer the question for completed types and just say ""yes"" for non-complete C++ types. We also always now answer yes for Objective C classes and do not complete those types either. git-svn-id: https://llvm.org/svn/llvm-project/lldb/trunk@153284 91177308-0d34-0410-b5e6-96231b3b80d8",C++
"<rdar://problem/11095005> Fixed a performance regression when dynamic types are enable where we would ask a C++ type if it can possibly be dynamic. Previously we would force the type to complete itself and then anwwer the question definitively. Now we ask the type if it is already complete and only definitively answer the question for completed types and just say ""yes"" for non-complete C++ types. We also always now answer yes for Objective C classes and do not complete those types either. git-svn-id: https://llvm.org/svn/llvm-project/lldb/trunk@153284 91177308-0d34-0410-b5e6-96231b3b80d8",C++
* Source/GSThemeDrawing.m (-toolbarBorderColor): Change default to [NSColor darkGrayColor] * Source/NSToolbar.m (-initWithIdentifier:): Call [self setShowsBaselineSeparator: YES] by default so the toolbar has a bottom border. git-svn-id: svn+ssh://svn.gna.org/svn/gnustep/libs/gui/trunk@34983 72102866-910b-0410-8b05-ffd578937521,Objective-C
- added compiled javascripts. YES I DID.,JavaScript
"Merge, yay",Ruby
"Main page lokos nice now, yay",JavaScript
gönderilerimi listelerken yayınlandı mı seçeneği,JavaScript
"one test passes, yay",Ruby
"[TwigBundle] Changed getAndCleanOutputBuffering() handling of systems where ob_get_level() never returns 0 Bug fix: yes Feature addition: no Backwards compatibility break: no Symfony2 tests pass: [![Build Status](https://secure.travis-ci.org/lencioni/symfony.png)](http://travis-ci.org/lencioni/symfony) Fixes the following tickets: - Todo: - Relying on decrementing a counter has two problems. First, and most importantly, if the output buffering nesting level is greater than the counter, the function does not perform the expected task. Secondly, on systems where the counter is needed, a lot of unnecessary extra loops would potentially occur. This approach checks to see if the level has stayed the same from the previous iteration and if it has it stops looping.",PHP
"* Source/x11/XGServerEvent.m: Make the GSModifiersAreKeys default to YES, by renaming the default to GSModifiersAreNotKeys. This should fix bug 25659; for example, in Ink you can now open the color panel with <Shift>+<Alt>+c or <Alt>+<Shift>+c. * Documentation/Back/DefaultsSummary.gsdoc: Update docs for GSModifiersAreNotKeys. git-svn-id: svn+ssh://svn.gna.org/svn/gnustep/libs/back/trunk@34984 72102866-910b-0410-8b05-ffd578937521",Objective-C
"Ah yes, the binary world of 1's and 0's strikes again - [Fix]",Java
"* Created new macros to set the max width of the right and left view controllers to 320pt, with 40pt overlayed. (Didn't make sense to show fully width -40pt on the iPad) * Updated shouldAutorotateToInterfaceOrientation to check with the root view controller, rather than returning YES",Objective-C
Renamed JS Bingo folder,Ruby
"My first (really second, but whatever) git commit - yay progit.org Booyah :)",JavaScript
Completely uncomplicate rpn.lua (yay),Lua
"Facebook synclet tests vows -> mocha. Ported over the Facebook vows tests to mocha, bringing over the fixtures as well. This involved fixing at least one serious bug in the Facebook photos synclet, so yay for that. Two-phase synclets that do entirely different things on different passes are very confusing and should probably be made less so.",JavaScript
"- Change all files to match the databases changes made on 3-22-12. Boy, am I glad that is over. - Added Add Department for admin",PHP
"working redis storage, yay",Python
"shoot() and gameOver() the ENTIRE game works now (yay). Including newGame(), and it keeps track of the scores. Next TODO: save scores to serialized files.",Java
"merged branch jakzal/SetCookieWithMultipleCookiesBugFix (PR #3823) Commits ------- 7f92833 [BrowserKit] Fixed cs. df3da28 [BrowserKit] Using assertNull instead of assertEquals. 87890d3 [BrowserKit] Fixed CookieJar issue being unable to parse multiple cookies from Set-Cookie. Discussion ---------- [BrowserKit] Fixed CookieJar being unable to parse multiple cookies Fix proposition for #3109 My fix splits value of *Set-Cookie* header by comma. Than it checks each extracted part if it starts with a cookie-name (token). If check is positive cookie is added to the list. Otherwise it's appended to the previous value. First element is always added to the list. [rfc6265](http://tools.ietf.org/html/rfc6265) defines cookie-name with token: cookie-name = token token = <token, defined in [RFC2616], Section 2.2> token is defined in [rfc2616](http://tools.ietf.org/html/rfc2616#section-2.2) as follows: token = 1*<any CHAR except CTLs or separators> CHAR = <any US-ASCII character (octets 0 - 127)> separators = ""("" | "")"" | ""<"" | "">"" | ""@"" | "","" | "";"" | "":"" | ""\"" | <""> | ""/"" | ""["" | ""]"" | ""?"" | ""="" | ""{"" | ""}"" | SP | HT That means cookie-name can be built out of following set of characters: *! # $ % & ' * + - . ^ _ ` | ~ 0-9 A-Z a-z* Bug fix: yes Feature addition: no Backwards compatibility break: no Symfony2 tests pass: yes",PHP
"Because yes, I am that good at overall appearances",C
"Because yes, I am that good at overall appearances",C
"Because yes, I am that good at overall appearances",C
Restored division in scale operation... yes it is needed,Haskell
Improved config.h generation to proccess yes/no selections appropriately,C
Changed config files to use yes/no rather than comment/uncomment,C
"merged branch jakzal/FilesystemTests (PR #3811) Commits ------- 100e97e [Filesystem] Fixed warnings in makePathRelative(). f5f5c21 [Filesystem] Fixed typos in the docblocks. d4243a2 [Filesystem] Fixed a bug in remove being unable to remove symlinks to unexisting file or directory. 11a676d [Filesystem] Added unit tests for mirror method. 8c94069 [Filesystem] Added unit tests for isAbsolutePath method. 2ee4b88 [Filesystem] Added unit tests for makePathRelative method. 21860cb [Filesystem] Added unit tests for symlink method. a041feb [Filesystem] Added unit tests for rename method. 8071859 [Filesystem] Added unit tests for chmod method. bba0080 [Filesystem] Added unit tests for remove method. 8e861b7 [Filesystem] Introduced workspace directory to limit complexity of tests. a91e200 [Filesystem] Added unit tests for touch method. 7e297db [Filesystem] Added unit tests for mkdir method. 6ac5486 [Filesystem] Added unit tests for copy method. 1c833e7 [Filesystem] Added missing docblock comment. Discussion ---------- [Filesystem] Fixed a bug in remove() being unable to unlink broken symlinks While working on test coverage for Filesystem class I discovered a bug in remove() method. Before removing a file a check is made if it exists: if (!file_exists($file)) { continue; } Problem is [file_exists()](http://php.net/file_exists) returns false if link's target file doesn't exist. Therefore remove() will fail to delete a directory containing a broken link. Solution is to handle links a bit different: if (!file_exists($file) && !is_link($file)) { continue; } Additionally, this PR improves test coverage of Filesystem component. Bug fix: yes Feature addition: no Backwards compatibility break: no Symfony2 tests pass: yes --------------------------------------------------------------------------- by cordoval at 2012-04-07T00:55:59Z ✌.|•͡˘‿•͡˘|.✌ --------------------------------------------------------------------------- by fabpot at 2012-04-07T06:12:34Z Tests do not pass for me: PHPUnit 3.6.10 by Sebastian Bergmann. Configuration read from /Users/fabien/work/symfony/git/symfony/phpunit.xml.dist .........................EE....... Time: 0 seconds, Memory: 5.25Mb There were 2 errors: 1) Symfony\Component\Filesystem\Tests\FilesystemTest::testMakePathRelative with data set #0 ('/var/lib/symfony/src/Symfony/', '/var/lib/symfony/src/Symfony/Component', '../') Uninitialized string offset: 29 .../rc/Symfony/Component/Filesystem/Filesystem.php:183 .../rc/Symfony/Component/Filesystem/Tests/FilesystemTest.php:434 2) Symfony\Component\Filesystem\Tests\FilesystemTest::testMakePathRelative with data set #1 ('var/lib/symfony/', 'var/lib/symfony/src/Symfony/Component', '../../../') Uninitialized string offset: 16 .../rc/Symfony/Component/Filesystem/Filesystem.php:183 .../rc/Symfony/Component/Filesystem/Tests/FilesystemTest.php:434 FAILURES! Tests: 34, Assertions: 67, Errors: 2. --------------------------------------------------------------------------- by jakzal at 2012-04-07T07:26:15Z Sorry for this. For some reason my PHP error reporting level was to low to catch this... Should be fixed now but I needed to modify the makePathRelative() (this bug existed before).",PHP
Models yay!,Python
I can calibrate on the floor! Yay!,Python
Hallelujah I refactored the Conversation filter code to use ConversationAuthorization. Accounts for all cases of filtering Conversation Resource. Also changed dashboard to a grid.,JavaScript
"merged branch jakzal/FilesystemTests (PR #3811) Commits ------- 100e97e [Filesystem] Fixed warnings in makePathRelative(). f5f5c21 [Filesystem] Fixed typos in the docblocks. d4243a2 [Filesystem] Fixed a bug in remove being unable to remove symlinks to unexisting file or directory. 11a676d [Filesystem] Added unit tests for mirror method. 8c94069 [Filesystem] Added unit tests for isAbsolutePath method. 2ee4b88 [Filesystem] Added unit tests for makePathRelative method. 21860cb [Filesystem] Added unit tests for symlink method. a041feb [Filesystem] Added unit tests for rename method. 8071859 [Filesystem] Added unit tests for chmod method. bba0080 [Filesystem] Added unit tests for remove method. 8e861b7 [Filesystem] Introduced workspace directory to limit complexity of tests. a91e200 [Filesystem] Added unit tests for touch method. 7e297db [Filesystem] Added unit tests for mkdir method. 6ac5486 [Filesystem] Added unit tests for copy method. 1c833e7 [Filesystem] Added missing docblock comment. Discussion ---------- [Filesystem] Fixed a bug in remove() being unable to unlink broken symlinks While working on test coverage for Filesystem class I discovered a bug in remove() method. Before removing a file a check is made if it exists: if (!file_exists($file)) { continue; } Problem is [file_exists()](http://php.net/file_exists) returns false if link's target file doesn't exist. Therefore remove() will fail to delete a directory containing a broken link. Solution is to handle links a bit different: if (!file_exists($file) && !is_link($file)) { continue; } Additionally, this PR improves test coverage of Filesystem component. Bug fix: yes Feature addition: no Backwards compatibility break: no Symfony2 tests pass: yes --------------------------------------------------------------------------- by cordoval at 2012-04-07T00:55:59Z ✌.|•͡˘‿•͡˘|.✌ --------------------------------------------------------------------------- by fabpot at 2012-04-07T06:12:34Z Tests do not pass for me: PHPUnit 3.6.10 by Sebastian Bergmann. Configuration read from /Users/fabien/work/symfony/git/symfony/phpunit.xml.dist .........................EE....... Time: 0 seconds, Memory: 5.25Mb There were 2 errors: 1) Symfony\Component\Filesystem\Tests\FilesystemTest::testMakePathRelative with data set #0 ('/var/lib/symfony/src/Symfony/', '/var/lib/symfony/src/Symfony/Component', '../') Uninitialized string offset: 29 .../rc/Symfony/Component/Filesystem/Filesystem.php:183 .../rc/Symfony/Component/Filesystem/Tests/FilesystemTest.php:434 2) Symfony\Component\Filesystem\Tests\FilesystemTest::testMakePathRelative with data set #1 ('var/lib/symfony/', 'var/lib/symfony/src/Symfony/Component', '../../../') Uninitialized string offset: 16 .../rc/Symfony/Component/Filesystem/Filesystem.php:183 .../rc/Symfony/Component/Filesystem/Tests/FilesystemTest.php:434 FAILURES! Tests: 34, Assertions: 67, Errors: 2. --------------------------------------------------------------------------- by jakzal at 2012-04-07T07:26:15Z Sorry for this. For some reason my PHP error reporting level was to low to catch this... Should be fixed now but I needed to modify the makePathRelative() (this bug existed before).",PHP
yay it works!,C#
"yay changinginging, and I'mma push it right after too because I'mma bause",C#
yay actual content!,C#
"Everything should be translated now, yay!",Python
Models yay!,Python
Change yes/no options to single checkbox.,PHP
Re-introduced skip-indexing --- now i'm back to where i was before with exactly the same bug yay,Java
Disable 'yes' button for uncommited downloads,Perl
"Say it with me now: punct-u-ation. Yes, very good!",JavaScript
"Yay, more compatability",Python
yay,Python
"merged branch ruimarinho/exception_css_tweaks (PR #3827) Commits ------- fad114b Tweaked the exceptions layout CSS in order to display the error message even when wrapped around <pre> tags Discussion ---------- Tweaked the exceptions layout CSS in order to display the error message even when wrapped around <pre> tags Bug fix: yes Feature addition: no Backwards compatibility break: no Symfony2 tests pass: ![Build status](https://secure.travis-ci.org/ruimarinho/symfony.png?branch=exception_css_tweaks) Fixes the following tickets: - Todo: - Ever been in a situation when you're debugging code wrapped around `<pre>` tags and that code throws an exception? If you're familiar with this screenshot, you have :-) ![Image](http://i.imgur.com/dwxdD.png) This PR is just a little tweak to the exceptions layout CSS in order to allow your to view the exception message. It also fixes a word break when messages are too long. ![Image 2](http://i.imgur.com/whxZv.png). The build is currently failing due to an unmerged patch from the 2.0 branch.",PHP
Merge branch 'master' of https://github.com/avi-/bingo,C#
"use properties , yay !",Objective-C
Changes headers to be in the project instead of public header section. Changes skipInstall to YES,Objective-C
[Composer] Stwitch to composer vendors management Bug fix: no Feature addition: yes Backwards compatibility break: ? Symfony2 tests pass: yes Fixes the following tickets: - Todo: - This speeds up Travis CI builds to `~2 min` also makes vendor management a lot easier.,PHP
[Composer] Stwitch to composer vendors management Bug fix: no Feature addition: yes Backwards compatibility break: ? Symfony2 tests pass: yes Fixes the following tickets: - Todo: - This speeds up Travis CI builds to `~2 min` also makes vendor management a lot easier.,PHP
[Composer] Stwitch to composer vendors management Bug fix: no Feature addition: yes Backwards compatibility break: ? Symfony2 tests pass: yes Fixes the following tickets: - Todo: - This speeds up Travis CI builds to `~2 min` also makes vendor management a lot easier.,PHP
"Teach Clang about PIE compilations. This is the first step of PR12380. First, this patch cleans up the parsing of the PIC and PIE family of options in the driver. The existing logic failed to claim arguments all over the place resulting in kludges that marked the options as unused. Instead actually walk all of the arguments and claim them properly. We now treat -f{,no-}{pic,PIC,pie,PIE} as a single set, accepting the last one on the commandline. Previously there were lots of ordering bugs that could creep in due to the nature of the parsing. Let me know if folks would like weird things such as ""-fPIE -fno-pic"" to turn on PIE, but disable full PIC. This doesn't make any sense to me, but we could in theory support it. Options that seem to have intentional ""trump"" status (-static, -mkernel, etc) continue to do so and are commented as such. Next, a -pie-level flag is threaded into the frontend, rigged to a language option, and handled preprocessor, setting up the appropriate defines. We'll now have the correct defines when compiling with -fpie. The one place outside of the preprocessor that was inspecting the PIC level (as opposed to the relocation model, which is set and handled separately, yay!) is in the GNU ObjC runtime. I changed it to exactly preserve existing behavior. If folks want to change its behavior in the face of PIE, they can do that in a separate patch. Essentially the only functionality changed here is the preprocessor defines and bug-fixes to the argument management. Tests have been updated and extended to test all of this a bit more thoroughly. git-svn-id: https://llvm.org/svn/llvm-project/cfe/trunk@154291 91177308-0d34-0410-b5e6-96231b3b80d8",C++
pass '--yes' to mpi-selector.,Ruby
Merge branch 'master' of github.com:dntpanic/yes,Ruby
"checked that things are fast and robust, and damn they work well. E.g., typical roundtrip evaluation time (including database stuff is 1/200-th second. Yes, that will feel snappy!)",Python
"merged branch bschussek/issue3738 (PR #3807) Commits ------- 6584721 [Form] Improved labels generated by default from form names 6e0b03a [Form] Fixed label of prototype in CollectionType fc342d1 Merge remote branch 'umpirsky/collection-name' into issue3738 f91660d Added test for prototype label. Discussion ---------- [Form] Fixed default label generated for the CollectionType prototype Bug fix: yes Feature addition: no Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: #3738, #3739 Todo: - ![Travis Build Status](https://secure.travis-ci.org/bschussek/symfony.png?branch=issue3738) (the fact that the build fails seems to origin from the broken master)",PHP
"Fixed a lot of names.. Case matters, gentleman. YAY for knowing unix (again)",Shell
"merged branch ruimarinho/exception_css_tweaks (PR #3827) Commits ------- fad114b Tweaked the exceptions layout CSS in order to display the error message even when wrapped around <pre> tags Discussion ---------- Tweaked the exceptions layout CSS in order to display the error message even when wrapped around <pre> tags Bug fix: yes Feature addition: no Backwards compatibility break: no Symfony2 tests pass: ![Build status](https://secure.travis-ci.org/ruimarinho/symfony.png?branch=exception_css_tweaks) Fixes the following tickets: - Todo: - Ever been in a situation when you're debugging code wrapped around `<pre>` tags and that code throws an exception? If you're familiar with this screenshot, you have :-) ![Image](http://i.imgur.com/dwxdD.png) This PR is just a little tweak to the exceptions layout CSS in order to allow your to view the exception message. It also fixes a word break when messages are too long. ![Image 2](http://i.imgur.com/whxZv.png). The build is currently failing due to an unmerged patch from the 2.0 branch.",PHP
"merged branch jjbohn/feature/property-path-hasser (PR #3549) Commits ------- b6ac1aa [FORM] Give PropertyPath ability to read hassers Discussion ---------- [Form] Give PropertyPath ability to read hassers Bug fix: no Feature addition: yes Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: - Todo: - Using a `hasser` instead of `isser` for Boolean values is pretty common. I've found myself using `issers` a handful of times just to make an interface play nice with the form component, but the code reads funny now. I don't think we should be accounting for every possible `getter` variation, but I think this one is common enough that it warrants a discussion. --------------------------------------------------------------------------- by fabpot at 2012-03-11T08:25:31Z I tend to agree with with. What do you think @bschussek? --------------------------------------------------------------------------- by kriswallsmith at 2012-03-16T22:42:28Z I'm not so sure. There are lots of reasons to write a *hasser* that accepts an argument (i.e. `User::hasRole($role)`). Doesn't seem as clean as *issers* and *getters*. --------------------------------------------------------------------------- by vicb at 2012-03-16T22:49:14Z > There are lots of reasons to write a hasser that accepts an argument May be can check for 0 args as we are already using reflexion ? --------------------------------------------------------------------------- by kriswallsmith at 2012-03-16T22:55:43Z In that case we should check that there are either 0 arguments or only optional arguments and also consider adding the same logic to the other varieties. --------------------------------------------------------------------------- by jjbohn at 2012-03-16T23:37:47Z Passing arguments seems like a pretty big departure for PropertyPath. How would you annotate that? I'm not sure I see a common use case for needing arguments when mapping data to and from forms. --------------------------------------------------------------------------- by stof at 2012-03-16T23:50:22Z @jjbohn it is not about passing arguments but about using the hasser only if it does not have required arguments --------------------------------------------------------------------------- by jjbohn at 2012-03-17T01:54:18Z Ah. I see. I have a tendency to read @kriswallsmith comments wrong :D. I could see that but iirc, there's not any current check like this on the other accessors. Happy to add it though if there's a consensus. --------------------------------------------------------------------------- by fabpot at 2012-03-17T11:24:34Z What's the point is checking the hasser/getter/isser arguments. It's up to the developer to check if he can use them or not. Let's not complexify the code for this. --------------------------------------------------------------------------- by kriswallsmith at 2012-03-17T15:37:39Z My concern is that someone writes a hasser method on their model that is not intended for use with the form component but it's called anyway, leading to WTFs. --------------------------------------------------------------------------- by stof at 2012-04-03T22:28:21Z @fabpot what's your decision about this ? @jjbohn you need to rebase your PR. It conflicts with master as tests have been moved --------------------------------------------------------------------------- by bschussek at 2012-04-05T14:53:55Z @kriswallsmith is right. The check for 1 === $method->getNumberOfRequiredParameters() can (and should) easily be added to all of the if-clauses here. Apart from that, I'm okay with adding this.",PHP
"4/08 8:33 PM, typo in the hints section for problem 1, reworded another hint, and changed the solution format for problems 3-5 so that ""Yes"" choice always comes before ""No""",JavaScript
Added gae_bingo and example page gae-bingo-test.html,JavaScript
Adding gae-bingo,JavaScript
Added alerts to gae-bingo-test page.,JavaScript
"I think the prompt cycle and selection dialogs are good enough for us to be dangeous now. It also supports different kinds of lists: like all clients, only clients on current workspace, only clients on monitors, etc. The only real prompt left is ""adding a workspace."" That should be a simple text input field. Nothing fancy or dynamic. Yay.",Go
"Allow for tests to run in parallel (simultaneously from multiple checkouts) This is an interim solution and is by no means the final thing. It simply was possible to do in a short timeframe and cuts the test run time in half. If you have DSN envvars set, use at least -j8 for best results. Two things are at play: First of all every SQLite database and every temp work directory is created separately using the pid of the *main* test process (there can be children) for disambiguation. Extra cleanup passes have been added to ensure t/var remains clean between runs. All other DSNs are reduced to their ->sqlt_type form and the result is used for a global lockfile. Said lockfile is kept in /tmp so that multiple testruns from multiple directories can be run against the same set of databases with no conflicts. Some of the tests are explicitly exempt from any locking and will run regardless of environment, for example t/storage/dbi_env.t The lockfiles are deliberately placed in File::Spec->tmpdir. This is done so that multiple dbic checkouts can run against the same set of DSNs without stepping on each other's toes. Some notes on why this is not a great idea, even though it works flawlessly under continuous test cycling: The problem is that our tests are not yet ordered in a spwecific way. This means that multiple tests competing for the same resource will inevitably lock all available test threads forming several bottlenecks along the path of execution. This issue will be adressed in a later patch, with the following considerations: - prove -l t/... must continue to work as is - test aggregation is something the test suite should try to avoid in general - after all DBIC is intended to be usable in CGI (yes, pure CGI) environments, so if the tests are getting heavy to run - this is an actual problem in need of fixing. Aggregation will instead sweep it under the rug - general reorganization of test groups / various path changes should only be attempted once we have a solid base for multi-db test runs",Perl
"(Properly) avoid having two Darmanitans in the Conquest montage. Yes, I accidentally included an attempt at that in the last commit, but it didn't work. This commit makes it happen /properly/.",Python
"merged branch ruimarinho/exception_css_tweaks (PR #3827) Commits ------- fad114b Tweaked the exceptions layout CSS in order to display the error message even when wrapped around <pre> tags Discussion ---------- Tweaked the exceptions layout CSS in order to display the error message even when wrapped around <pre> tags Bug fix: yes Feature addition: no Backwards compatibility break: no Symfony2 tests pass: ![Build status](https://secure.travis-ci.org/ruimarinho/symfony.png?branch=exception_css_tweaks) Fixes the following tickets: - Todo: - Ever been in a situation when you're debugging code wrapped around `<pre>` tags and that code throws an exception? If you're familiar with this screenshot, you have :-) ![Image](http://i.imgur.com/dwxdD.png) This PR is just a little tweak to the exceptions layout CSS in order to allow your to view the exception message. It also fixes a word break when messages are too long. ![Image 2](http://i.imgur.com/whxZv.png). The build is currently failing due to an unmerged patch from the 2.0 branch.",PHP
"merged branch ruimarinho/exception_css_tweaks (PR #3827) Commits ------- fad114b Tweaked the exceptions layout CSS in order to display the error message even when wrapped around <pre> tags Discussion ---------- Tweaked the exceptions layout CSS in order to display the error message even when wrapped around <pre> tags Bug fix: yes Feature addition: no Backwards compatibility break: no Symfony2 tests pass: ![Build status](https://secure.travis-ci.org/ruimarinho/symfony.png?branch=exception_css_tweaks) Fixes the following tickets: - Todo: - Ever been in a situation when you're debugging code wrapped around `<pre>` tags and that code throws an exception? If you're familiar with this screenshot, you have :-) ![Image](http://i.imgur.com/dwxdD.png) This PR is just a little tweak to the exceptions layout CSS in order to allow your to view the exception message. It also fixes a word break when messages are too long. ![Image 2](http://i.imgur.com/whxZv.png). The build is currently failing due to an unmerged patch from the 2.0 branch.",PHP
"Accept different-sized int/float types in El() No more need for manual casts to int64 or float64, yay!",Go
"Don't change isFinished in -start, instead refuse to begin if it's YES",Objective-C
"Now god really is omnipresent, you won't see it unless you're worthy. Yes, there will be always a better way ;)",Ruby
yay,Java
Yes!,PHP
"Teach Clang about PIE compilations. This is the first step of PR12380. First, this patch cleans up the parsing of the PIC and PIE family of options in the driver. The existing logic failed to claim arguments all over the place resulting in kludges that marked the options as unused. Instead actually walk all of the arguments and claim them properly. We now treat -f{,no-}{pic,PIC,pie,PIE} as a single set, accepting the last one on the commandline. Previously there were lots of ordering bugs that could creep in due to the nature of the parsing. Let me know if folks would like weird things such as ""-fPIE -fno-pic"" to turn on PIE, but disable full PIC. This doesn't make any sense to me, but we could in theory support it. Options that seem to have intentional ""trump"" status (-static, -mkernel, etc) continue to do so and are commented as such. Next, a -pie-level flag is threaded into the frontend, rigged to a language option, and handled preprocessor, setting up the appropriate defines. We'll now have the correct defines when compiling with -fpie. The one place outside of the preprocessor that was inspecting the PIC level (as opposed to the relocation model, which is set and handled separately, yay!) is in the GNU ObjC runtime. I changed it to exactly preserve existing behavior. If folks want to change its behavior in the face of PIE, they can do that in a separate patch. Essentially the only functionality changed here is the preprocessor defines and bug-fixes to the argument management. Tests have been updated and extended to test all of this a bit more thoroughly. git-svn-id: https://llvm.org/svn/llvm-project/cfe/trunk@154291 91177308-0d34-0410-b5e6-96231b3b80d8",C++
"Teach Clang about PIE compilations. This is the first step of PR12380. First, this patch cleans up the parsing of the PIC and PIE family of options in the driver. The existing logic failed to claim arguments all over the place resulting in kludges that marked the options as unused. Instead actually walk all of the arguments and claim them properly. We now treat -f{,no-}{pic,PIC,pie,PIE} as a single set, accepting the last one on the commandline. Previously there were lots of ordering bugs that could creep in due to the nature of the parsing. Let me know if folks would like weird things such as ""-fPIE -fno-pic"" to turn on PIE, but disable full PIC. This doesn't make any sense to me, but we could in theory support it. Options that seem to have intentional ""trump"" status (-static, -mkernel, etc) continue to do so and are commented as such. Next, a -pie-level flag is threaded into the frontend, rigged to a language option, and handled preprocessor, setting up the appropriate defines. We'll now have the correct defines when compiling with -fpie. The one place outside of the preprocessor that was inspecting the PIC level (as opposed to the relocation model, which is set and handled separately, yay!) is in the GNU ObjC runtime. I changed it to exactly preserve existing behavior. If folks want to change its behavior in the face of PIE, they can do that in a separate patch. Essentially the only functionality changed here is the preprocessor defines and bug-fixes to the argument management. Tests have been updated and extended to test all of this a bit more thoroughly. git-svn-id: https://llvm.org/svn/llvm-project/cfe/trunk@154291 91177308-0d34-0410-b5e6-96231b3b80d8",C++
"Teach Clang about PIE compilations. This is the first step of PR12380. First, this patch cleans up the parsing of the PIC and PIE family of options in the driver. The existing logic failed to claim arguments all over the place resulting in kludges that marked the options as unused. Instead actually walk all of the arguments and claim them properly. We now treat -f{,no-}{pic,PIC,pie,PIE} as a single set, accepting the last one on the commandline. Previously there were lots of ordering bugs that could creep in due to the nature of the parsing. Let me know if folks would like weird things such as ""-fPIE -fno-pic"" to turn on PIE, but disable full PIC. This doesn't make any sense to me, but we could in theory support it. Options that seem to have intentional ""trump"" status (-static, -mkernel, etc) continue to do so and are commented as such. Next, a -pie-level flag is threaded into the frontend, rigged to a language option, and handled preprocessor, setting up the appropriate defines. We'll now have the correct defines when compiling with -fpie. The one place outside of the preprocessor that was inspecting the PIC level (as opposed to the relocation model, which is set and handled separately, yay!) is in the GNU ObjC runtime. I changed it to exactly preserve existing behavior. If folks want to change its behavior in the face of PIE, they can do that in a separate patch. Essentially the only functionality changed here is the preprocessor defines and bug-fixes to the argument management. Tests have been updated and extended to test all of this a bit more thoroughly.",C++
"Teach Clang about PIE compilations. This is the first step of PR12380. First, this patch cleans up the parsing of the PIC and PIE family of options in the driver. The existing logic failed to claim arguments all over the place resulting in kludges that marked the options as unused. Instead actually walk all of the arguments and claim them properly. We now treat -f{,no-}{pic,PIC,pie,PIE} as a single set, accepting the last one on the commandline. Previously there were lots of ordering bugs that could creep in due to the nature of the parsing. Let me know if folks would like weird things such as ""-fPIE -fno-pic"" to turn on PIE, but disable full PIC. This doesn't make any sense to me, but we could in theory support it. Options that seem to have intentional ""trump"" status (-static, -mkernel, etc) continue to do so and are commented as such. Next, a -pie-level flag is threaded into the frontend, rigged to a language option, and handled preprocessor, setting up the appropriate defines. We'll now have the correct defines when compiling with -fpie. The one place outside of the preprocessor that was inspecting the PIC level (as opposed to the relocation model, which is set and handled separately, yay!) is in the GNU ObjC runtime. I changed it to exactly preserve existing behavior. If folks want to change its behavior in the face of PIE, they can do that in a separate patch. Essentially the only functionality changed here is the preprocessor defines and bug-fixes to the argument management. Tests have been updated and extended to test all of this a bit more thoroughly. git-svn-id: https://llvm.org/svn/llvm-project/cfe/trunk@154291 91177308-0d34-0410-b5e6-96231b3b80d8",C++
Changed AllowAgentForwarding to Yes,Shell
"Passing pylint, yay \o/",Python
"Teach Clang about PIE compilations. This is the first step of PR12380. First, this patch cleans up the parsing of the PIC and PIE family of options in the driver. The existing logic failed to claim arguments all over the place resulting in kludges that marked the options as unused. Instead actually walk all of the arguments and claim them properly. We now treat -f{,no-}{pic,PIC,pie,PIE} as a single set, accepting the last one on the commandline. Previously there were lots of ordering bugs that could creep in due to the nature of the parsing. Let me know if folks would like weird things such as ""-fPIE -fno-pic"" to turn on PIE, but disable full PIC. This doesn't make any sense to me, but we could in theory support it. Options that seem to have intentional ""trump"" status (-static, -mkernel, etc) continue to do so and are commented as such. Next, a -pie-level flag is threaded into the frontend, rigged to a language option, and handled preprocessor, setting up the appropriate defines. We'll now have the correct defines when compiling with -fpie. The one place outside of the preprocessor that was inspecting the PIC level (as opposed to the relocation model, which is set and handled separately, yay!) is in the GNU ObjC runtime. I changed it to exactly preserve existing behavior. If folks want to change its behavior in the face of PIE, they can do that in a separate patch. Essentially the only functionality changed here is the preprocessor defines and bug-fixes to the argument management. Tests have been updated and extended to test all of this a bit more thoroughly. git-svn-id: https://llvm.org/svn/llvm-project/cfe/trunk@154291 91177308-0d34-0410-b5e6-96231b3b80d8",C++
"Teach Clang about PIE compilations. This is the first step of PR12380. First, this patch cleans up the parsing of the PIC and PIE family of options in the driver. The existing logic failed to claim arguments all over the place resulting in kludges that marked the options as unused. Instead actually walk all of the arguments and claim them properly. We now treat -f{,no-}{pic,PIC,pie,PIE} as a single set, accepting the last one on the commandline. Previously there were lots of ordering bugs that could creep in due to the nature of the parsing. Let me know if folks would like weird things such as ""-fPIE -fno-pic"" to turn on PIE, but disable full PIC. This doesn't make any sense to me, but we could in theory support it. Options that seem to have intentional ""trump"" status (-static, -mkernel, etc) continue to do so and are commented as such. Next, a -pie-level flag is threaded into the frontend, rigged to a language option, and handled preprocessor, setting up the appropriate defines. We'll now have the correct defines when compiling with -fpie. The one place outside of the preprocessor that was inspecting the PIC level (as opposed to the relocation model, which is set and handled separately, yay!) is in the GNU ObjC runtime. I changed it to exactly preserve existing behavior. If folks want to change its behavior in the face of PIE, they can do that in a separate patch. Essentially the only functionality changed here is the preprocessor defines and bug-fixes to the argument management. Tests have been updated and extended to test all of this a bit more thoroughly. git-svn-id: http://llvm.org/svn/llvm-project/cfe/trunk@154291 91177308-0d34-0410-b5e6-96231b3b80d8",C++
yes,Ruby
"Added ""Yes/No"" as third value to TFSDisplay summary In summary table of TFSDisplay, when all probes in the report are significant in the given experiment, the value in the ""Signif In"" cell is ""Yes"", ""No"" if otherwise. Previously, the value was ""No"" if the status of the probes is undefined; changed that to ""Yes/No"".",Perl
"Merge pull request #15 from clundie/release/1.1.1 Hrm, yes this is true. Thanks very much Chris!",Objective-C
"changed text of saveas dialog, change button caption to Yes, switched positions of buttons Ok and Cancel of confirm dialog",JavaScript
"Points now turn red during sync. yay! Adding a text name to each point is partially implemented, but it appears that there may be something wrong with the way the axes are being drawn.",Java
yes I'm stupid,C#
Have span with yes or no class instead of Y or N in grid,JavaScript
yes,JavaScript
Add templates for influenced/influenced by This should bring the project in line with what it was before I started to the move to templates for queries and two levels of templates for display. What queries (and hence templates) to use for a given URI can now be defined in the triplestore. Yay!,Perl
Merge branch 'bingo' of github.com:emergentmisbehavior/Gsales into bingo,C#
Merge branch 'bingo' of github.com:emergentmisbehavior/Gsales into bingo,C#
Removed silly Cache test I wrote earlier (was previously marked 'todo' since I was proud of it) Signed-off-by: Andrew Miller <amiller@dappervision.com>,Python
"Chapter 4, scene 3. Glad I'm on a roll, gonna be busy this weekend.",Python
"Use curlies to be very sure, yes",PHP
"Finished section 12, and thus the book! Yay!",Prolog
"Update and Optimize iOS SDK for XCode 4 Summary: Made the following changes: - Removed obsolete compiler flags - Exposed Public Headers - Set the Installation Directory to $(BUILT_PRODUCTS_DIR) - Set public header path to “$(TARGET_NAME)” - Set “Skip Install” build setting to Yes - Updated project format to XCode 4 Test Plan: Added project to XCode 4 workspace, tested FB Login + SSO Reviewers: yariv, jimbru, brent Reviewed By: yariv CC: lshepard, caabernathy, security-diffs@lists, selekman, yariv Differential Revision: https://phabricator.fb.com/D383376",Objective-C
It works -- yay,JavaScript
HECK YES got all edge settling DONE,JavaScript
Merge branch 'bingo' of github.com:emergentmisbehavior/Gsales into bingo,C#
CS-14142: cloudstack 3.0 UI - Instance page - show Attached ISO name instead of Attached ISO Yes/No.,Java
CS-14142: cloudstack 3.0 UI - Instance page - show Attached ISO name instead of Attached ISO Yes/No.,Java
Added passing test and set TEST AFTER BUILD to YES,Objective-C
Merge branch 'bingo' of github.com:emergentmisbehavior/Gsales into bingo,C#
Merge branch 'bingo' of github.com:emergentmisbehavior/Gsales into bingo,C#
Reformating(yay!) updating dotfiles,Lua
Add number text object to vim (yay cin),VimL
Merge branch 'bingo' of github.com:emergentmisbehavior/Gsales into bingo,C#
yay more rss. that should do it. added category field to rss.py,JavaScript
YAY:,Java
"Bluetooth: SSP: Just Works Model in no MITM In case both side have no MITM requirements, we need to use Just Works Association Model. We should not display PassKey in this case and just YES/NO option should be displayed Change-Id: I447aa84a0d021e8834138062a26a9380d3b9b2d9 Signed-off-by: AnubhavGupta <anubhavg@codeaurora.org>",C
"Allow users to answer with ""yes"" or ""no"" when adding new user",Ruby
Merge branch 'bingo' of github.com:emergentmisbehavior/Gsales into bingo,C#
"Merge pull request #12 from bthesorceror/master Prompt allows ""yes""/""no"" when adding new pairs",Ruby
"merged branch bschussek/issue3228 (PR #3317) Commits ------- 5208bbe [Validator] Fixed typo, updated CHANGELOG and UPGRADE dc059ab [Validator] Added default validate() implementation to ConstraintValidator for BC 6336d93 [Validator] Renamed ConstraintValidatorInterface::isValid() to validate() because of the lack of a return value 46f0393 [Validator] Removed return value from ConstraintValidatorInterface::isValid() Discussion ---------- [Validator] Renamed ConstraintValidatorInterface::isValid() to validate() and removed return value Bug fix: no Feature addition: no Backwards compatibility break: **YES** Symfony2 tests pass: yes Fixes the following tickets: - Todo: update the documentation ![Travis Build Status](https://secure.travis-ci.org/bschussek/symfony.png?branch=issue3228) Before I begin, this PR is up for discussion. I removed the return value of ConstraintValidator::isValid() because it wasn't used anymore within the framework. Removing it also means a simplification for userland implementations. Already now the validation component only depended on violation errors being present for deciding whether the validation was considered failed or not. Because the name `isValid` does not make a lot of sense without a return value, I changed it to `validate`. Note that this affects an interface (ConstraintValidatorInterface) previously marked with `@api` by us! What do you think about this change? --------------------------------------------------------------------------- by stof at 2012-02-09T17:51:38Z @bschussek IIRC, the Validator component was part of the components that are not considered as stable for 2.0 (there is 4 of them IIRC, including Config, Security and Form) so changing the interface should not be an issue here --------------------------------------------------------------------------- by lsmith77 at 2012-02-09T17:54:55Z No it was .. form wasn't: http://symfony.com/doc/2.0/book/stable_api.html --------------------------------------------------------------------------- by rdohms at 2012-02-10T13:23:32Z I fail to see the value of the BC in this case. Just because the framework does not use given functionality anymore is not reason to drop it, since all of this was clearly proposed as a ""component"" to be used in other projects. Other implementations of validator in other projects might actually depend on this. Is it possible to just add a new value and have both functionalities available? --------------------------------------------------------------------------- by stof at 2012-02-10T13:25:12Z @rdohms the point is that the return value is confusing. Someone may return ``false`` by thinking it will mark the field as invalid (which is implied by the name ``isValid``) whereas it is not the case at all --------------------------------------------------------------------------- by bschussek at 2012-02-10T13:30:13Z Exactly. UniqueEntityValidator for example always returned `true` and nobody ever noticed. --------------------------------------------------------------------------- by beberlei at 2012-02-10T13:53:03Z @bschussek but its not a bug, setting the execution context failure is enough. returning false would lead to a second error message being evicted. This is the weird problem of the API imho --------------------------------------------------------------------------- by bschussek at 2012-02-10T13:54:49Z @beberlei This has already been fixed. --------------------------------------------------------------------------- by stof at 2012-02-10T13:59:59Z @beberlei in the master branch, errors are not duplicated anymore as the return value is simply ignored. --------------------------------------------------------------------------- by Tobion at 2012-02-10T14:29:03Z I'm +1. If people are concerned about this strong BC break we could maybe add a fallback for the majority. Most people propably have extended the ConstraintValidator and not used the interface directly. So we can change the Interface and at the same time provide a default proxy method in ConstraintValidator for validate. I.e. public function validate($value, Constraint $constraint) { $this->isValid($value, $constraint); } Thus all people who have extended ConstraintValidator won't notice a BC break. --------------------------------------------------------------------------- by hades200082 at 2012-02-10T16:10:31Z Could you not have both validate and isValid as separate methods with distinct purposes? --------------------------------------------------------------------------- by stof at 2012-02-10T16:55:12Z @hades200082 which distinct purposes ? --------------------------------------------------------------------------- by hades200082 at 2012-02-10T17:02:57Z One should actually validate. The other should return whether it is valid or not as a bool. Even if isValid calls validate to determine this surely they are distinct purposes? doing it this way would not require a break to BC but the existing components in the framework could be switched to use validate. --------------------------------------------------------------------------- by bschussek at 2012-02-10T17:10:50Z @hades200082 Validators are stateless. They don't ""remember"" whether they validated successfully or not. --------------------------------------------------------------------------- by hades200082 at 2012-02-10T17:13:25Z Maybe they should? Would save revalidating every time --------------------------------------------------------------------------- by stof at 2012-02-10T17:16:10Z @hades200082 how could they be stateless ? you can use the same instance to validate several values. For instance, the UniqueEntityValidator is a service and so will be reused. --------------------------------------------------------------------------- by fabpot at 2012-02-11T23:40:09Z I would really like that we do not break BC in this case. --------------------------------------------------------------------------- by stof at 2012-02-11T23:59:02Z @fabpot there is also a BC break in the previous changes: the return value has no meaning at all now (it is not even considered by the GraphWalker. Most 2.0 validator will continue working because of the new implementation of setMessage but I can provide the 2 broken cases: ```php <?php /** * This validator always set the message, even when it is valid to keep things simple. * This works fine in 2.0.x (as the return value is what makes the decision) but will * add a violation in 2.1 (setMessage adds the violation to keep things working for * cases setting the message only for invalid values, like the core used to do). */ public function isValid($value, Constraint $constraint) { $this->setMessage($constraint->message); return true; } /** * This validator never set the message, failing with an empty message. * This works fine in 2.0.x (as the return value is what makes the decision) but will * not add the violation in 2.1. */ public function isValid($value, Constraint $constraint) { return false; } ``` The second one is clearly an edge case as it would absolutely not be user-friendly but the first one makes totally sense when using the 2.0.x API (with a boolean expression using the value of course) --------------------------------------------------------------------------- by fabpot at 2012-02-12T00:11:19Z I agree with you; I should probably have refused to merge the previous PR. And I think we need to reconsider this change. If not, why are we even bothering tagging stuff with the @api tag? --------------------------------------------------------------------------- by bschussek at 2012-02-12T10:15:55Z @stof I disagree with you. Setting an error message but not letting the validation fail is not how the API is supposed to work. Also the opposite was not meant to work, as it results in empty error messages. The third example is that a validator *had* to return true if it called `addViolation` directly. These cases show that the previous implementation was clearly buggy and needed to be fixed. This PR is only a consequence that cleans the API up. @fabpot IMHO validator was too young and not tried enough to be marked as stable. But as we can't change this anymore, I think the decision we have to make is * BC/reliance on `@api` marks vs. * API usability (also considering the coming LTR) --------------------------------------------------------------------------- by bschussek at 2012-02-12T10:18:12Z BTW @Tobion's suggestion could definitely make a transition easier. --------------------------------------------------------------------------- by fabpot at 2012-02-15T10:26:10Z @bschussek +1 for @Tobion's suggestion. --------------------------------------------------------------------------- by Brouznouf at 2012-02-15T16:06:12Z Could be nice to comment function as deprecated and/or trigger a E_USER_DEPRECATED error when using this method to prevent user calling this method. --------------------------------------------------------------------------- by stof at 2012-02-15T16:09:37Z trigger E_USER_DEPRECATED would be wrong as the kernel set the error reporting to ``-1`` and registers an error handler tuning all reported errors to exception in debug mode, so it would be a BC break. Commenting the function as deprecated in indeed possible --------------------------------------------------------------------------- by rdohms at 2012-02-29T11:15:01Z Went back to working on validators and it really makes me disagree with these changes a little more. Let me explain. In the isValid method, i like to work with return early checks, so straight up i check some stuff and return early either true/false. From the frameworks perspective true/false does not make a difference, but from a reader's perspective it adds a lot of value: if ($object->getId() === null) { return true; } versus if ($object->getId() === null) { return; } having the return true make it clear that in this case the object is valid for anyone who is reading my validator. i think this is a good practice to push forward. An ...",PHP
"merged branch bschussek/issue3228 (PR #3317) Commits ------- 5208bbe [Validator] Fixed typo, updated CHANGELOG and UPGRADE dc059ab [Validator] Added default validate() implementation to ConstraintValidator for BC 6336d93 [Validator] Renamed ConstraintValidatorInterface::isValid() to validate() because of the lack of a return value 46f0393 [Validator] Removed return value from ConstraintValidatorInterface::isValid() Discussion ---------- [Validator] Renamed ConstraintValidatorInterface::isValid() to validate() and removed return value Bug fix: no Feature addition: no Backwards compatibility break: **YES** Symfony2 tests pass: yes Fixes the following tickets: - Todo: update the documentation ![Travis Build Status](https://secure.travis-ci.org/bschussek/symfony.png?branch=issue3228) Before I begin, this PR is up for discussion. I removed the return value of ConstraintValidator::isValid() because it wasn't used anymore within the framework. Removing it also means a simplification for userland implementations. Already now the validation component only depended on violation errors being present for deciding whether the validation was considered failed or not. Because the name `isValid` does not make a lot of sense without a return value, I changed it to `validate`. Note that this affects an interface (ConstraintValidatorInterface) previously marked with `@api` by us! What do you think about this change? --------------------------------------------------------------------------- by stof at 2012-02-09T17:51:38Z @bschussek IIRC, the Validator component was part of the components that are not considered as stable for 2.0 (there is 4 of them IIRC, including Config, Security and Form) so changing the interface should not be an issue here --------------------------------------------------------------------------- by lsmith77 at 2012-02-09T17:54:55Z No it was .. form wasn't: http://symfony.com/doc/2.0/book/stable_api.html --------------------------------------------------------------------------- by rdohms at 2012-02-10T13:23:32Z I fail to see the value of the BC in this case. Just because the framework does not use given functionality anymore is not reason to drop it, since all of this was clearly proposed as a ""component"" to be used in other projects. Other implementations of validator in other projects might actually depend on this. Is it possible to just add a new value and have both functionalities available? --------------------------------------------------------------------------- by stof at 2012-02-10T13:25:12Z @rdohms the point is that the return value is confusing. Someone may return ``false`` by thinking it will mark the field as invalid (which is implied by the name ``isValid``) whereas it is not the case at all --------------------------------------------------------------------------- by bschussek at 2012-02-10T13:30:13Z Exactly. UniqueEntityValidator for example always returned `true` and nobody ever noticed. --------------------------------------------------------------------------- by beberlei at 2012-02-10T13:53:03Z @bschussek but its not a bug, setting the execution context failure is enough. returning false would lead to a second error message being evicted. This is the weird problem of the API imho --------------------------------------------------------------------------- by bschussek at 2012-02-10T13:54:49Z @beberlei This has already been fixed. --------------------------------------------------------------------------- by stof at 2012-02-10T13:59:59Z @beberlei in the master branch, errors are not duplicated anymore as the return value is simply ignored. --------------------------------------------------------------------------- by Tobion at 2012-02-10T14:29:03Z I'm +1. If people are concerned about this strong BC break we could maybe add a fallback for the majority. Most people propably have extended the ConstraintValidator and not used the interface directly. So we can change the Interface and at the same time provide a default proxy method in ConstraintValidator for validate. I.e. public function validate($value, Constraint $constraint) { $this->isValid($value, $constraint); } Thus all people who have extended ConstraintValidator won't notice a BC break. --------------------------------------------------------------------------- by hades200082 at 2012-02-10T16:10:31Z Could you not have both validate and isValid as separate methods with distinct purposes? --------------------------------------------------------------------------- by stof at 2012-02-10T16:55:12Z @hades200082 which distinct purposes ? --------------------------------------------------------------------------- by hades200082 at 2012-02-10T17:02:57Z One should actually validate. The other should return whether it is valid or not as a bool. Even if isValid calls validate to determine this surely they are distinct purposes? doing it this way would not require a break to BC but the existing components in the framework could be switched to use validate. --------------------------------------------------------------------------- by bschussek at 2012-02-10T17:10:50Z @hades200082 Validators are stateless. They don't ""remember"" whether they validated successfully or not. --------------------------------------------------------------------------- by hades200082 at 2012-02-10T17:13:25Z Maybe they should? Would save revalidating every time --------------------------------------------------------------------------- by stof at 2012-02-10T17:16:10Z @hades200082 how could they be stateless ? you can use the same instance to validate several values. For instance, the UniqueEntityValidator is a service and so will be reused. --------------------------------------------------------------------------- by fabpot at 2012-02-11T23:40:09Z I would really like that we do not break BC in this case. --------------------------------------------------------------------------- by stof at 2012-02-11T23:59:02Z @fabpot there is also a BC break in the previous changes: the return value has no meaning at all now (it is not even considered by the GraphWalker. Most 2.0 validator will continue working because of the new implementation of setMessage but I can provide the 2 broken cases: ```php <?php /** * This validator always set the message, even when it is valid to keep things simple. * This works fine in 2.0.x (as the return value is what makes the decision) but will * add a violation in 2.1 (setMessage adds the violation to keep things working for * cases setting the message only for invalid values, like the core used to do). */ public function isValid($value, Constraint $constraint) { $this->setMessage($constraint->message); return true; } /** * This validator never set the message, failing with an empty message. * This works fine in 2.0.x (as the return value is what makes the decision) but will * not add the violation in 2.1. */ public function isValid($value, Constraint $constraint) { return false; } ``` The second one is clearly an edge case as it would absolutely not be user-friendly but the first one makes totally sense when using the 2.0.x API (with a boolean expression using the value of course) --------------------------------------------------------------------------- by fabpot at 2012-02-12T00:11:19Z I agree with you; I should probably have refused to merge the previous PR. And I think we need to reconsider this change. If not, why are we even bothering tagging stuff with the @api tag? --------------------------------------------------------------------------- by bschussek at 2012-02-12T10:15:55Z @stof I disagree with you. Setting an error message but not letting the validation fail is not how the API is supposed to work. Also the opposite was not meant to work, as it results in empty error messages. The third example is that a validator *had* to return true if it called `addViolation` directly. These cases show that the previous implementation was clearly buggy and needed to be fixed. This PR is only a consequence that cleans the API up. @fabpot IMHO validator was too young and not tried enough to be marked as stable. But as we can't change this anymore, I think the decision we have to make is * BC/reliance on `@api` marks vs. * API usability (also considering the coming LTR) --------------------------------------------------------------------------- by bschussek at 2012-02-12T10:18:12Z BTW @Tobion's suggestion could definitely make a transition easier. --------------------------------------------------------------------------- by fabpot at 2012-02-15T10:26:10Z @bschussek +1 for @Tobion's suggestion. --------------------------------------------------------------------------- by Brouznouf at 2012-02-15T16:06:12Z Could be nice to comment function as deprecated and/or trigger a E_USER_DEPRECATED error when using this method to prevent user calling this method. --------------------------------------------------------------------------- by stof at 2012-02-15T16:09:37Z trigger E_USER_DEPRECATED would be wrong as the kernel set the error reporting to ``-1`` and registers an error handler tuning all reported errors to exception in debug mode, so it would be a BC break. Commenting the function as deprecated in indeed possible --------------------------------------------------------------------------- by rdohms at 2012-02-29T11:15:01Z Went back to working on validators and it really makes me disagree with these changes a little more. Let me explain. In the isValid method, i like to work with return early checks, so straight up i check some stuff and return early either true/false. From the frameworks perspective true/false does not make a difference, but from a reader's perspective it adds a lot of value: if ($object->getId() === null) { return true; } versus if ($object->getId() === null) { return; } having the return true make it clear that in this case the object is valid for anyone who is reading my validator. i think this is a good practice to push forward. An ...",PHP
"merged branch lsmith77/router_debug_refactoring (PR #3963) Commits ------- 98a0052 improved readability b06537e refactored code to use get() when outputting a single route Discussion ---------- Router debug refactoring Bug fix: no Feature addition: yes Backwards compatibility break: no Symfony2 tests pass: [![Build Status](https: //secure.travis-ci.org/lsmith77/symfony.png?branch=router_debug_refactoring)](http://travis-ci.org/lsmith77/symfony) Fixes the following tickets: - refactored code to use get() when outputting a single route this is useful for a CMS, where in most cases there will be too many routes to make it feasible to load all of them. here a router implementation will be used that will return an empty collection for ->all(). with this refactoring the given routes will not be listed via router:debug, but would still be shown when using router:debug [name]",PHP
merged branch stealth35/locale_intl_error_name (PR #3959) Commits ------- 5799d25 Add BOGUS UErrorCode test 6f9c05d [Locale] Complete Stub with intl_error_name Discussion ---------- [Locale] Complete StubIntl with the missing intl_error_name Bug fix: yes Feature addition: no Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: - Todo: -,PHP
Yes - it is a commit.,PHP
"Added yes no box, removed cancel from all dialogs and attempted to add input box for function 1",Shell
yay!,Objective-C
change report view page to verified/unverified rather than yes/no (closes #101),PHP
Content! Hurray! (+more \o/) - Load proper content box on url hashtag - Increased base font size - Filled in content and sidebar,JavaScript
Added commands and permissions. Yay.,Java
Merge branch 'bingo' of github.com:emergentmisbehavior/Gsales into bingo,C#
yay traversing but fuck consts amirite,C
"compiling again, yay",C
"compiling again, yay",C
shared should be yes,Perl
Move header files to Project section; set Skip Install to Yes This allows Archive build to work for ad hoc and App Store builds,Objective-C
"Make `binwrite` emulation work on Windows. So, it turns out that Ruby on Windows is pretty damn awesome, and that to successfully sysopen a file, then use it as an IO, you need to write this: IO.new(IO::sysopen(filename, mode), mode) {|io| ... } ...yes, indeed, you need to repeat the mode, and pass the sysopen mode - which is completely incompatible with the normal open. It works when you pass a file descriptor from sysopen, though, and gets Ruby convinced to use it right. Signed-off-by: Daniel Pittman <daniel@puppetlabs.com>",Ruby
Paths don't need to be absolute... Hurray\!,Lua
Add yes-if-not-no and no-if-not-yes actions,Perl
yes,JavaScript
"Totally redo authentication and get rid of API keys (yes totally delete their existence for now, because it sucked). The better plan is to allow a number of applications/keys per user, and have a linking table of user_id <-> application_id, then `application` has an api_key and some other descriptive fields. This means that we actually have to do real auth on the site, which is why this commit is a mess.",Scala
"merged branch bschussek/issue3878 (PR #3923) Commits ------- 6e4ed9e [Form] Fixed regression: bind(null) was not converted to an empty string anymore fcb2227 [Form] Deprecated FieldType, which has been merged into FormType bfa7ef2 [Form] Removed obsolete exceptions 2a49449 [Form] Simplified CSRF mechanism and removed ""csrf"" type Discussion ---------- [Form] Merged FieldType into FormType Bug fix: no Feature addition: no Backwards compatibility break: yes Symfony2 tests pass: yes Fixes the following tickets: #3878 Todo: update the documentation on theming ![Travis Build Status](https://secure.travis-ci.org/bschussek/symfony.png?branch=issue3878) This PR is a preparatory PR for #3879. See also #3878. --------------------------------------------------------------------------- by juliendidier at 2012-04-13T14:25:19Z What's the benefit ? --------------------------------------------------------------------------- by henrikbjorn at 2012-04-13T14:26:40Z why `input_widget` ? and not just `widget` --------------------------------------------------------------------------- by Burgov at 2012-04-13T14:27:49Z @juliendidier dynamic inheritance is now obsolete which fixes some other issues --------------------------------------------------------------------------- by stloyd at 2012-04-13T14:37:26Z What about __not__ breaking API so *badly* and leaving `FieldType` which will be simple like (with marking as deprecated): ```php <?php class FieldType extends AbstractType { public function getParent(array $options) { return 'form'; } public function getName() { return 'field'; } } --------------------------------------------------------------------------- by bschussek at 2012-04-13T14:43:41Z @stloyd That's a very good idea. --------------------------------------------------------------------------- by mvrhov at 2012-04-13T17:41:21Z IMHO what @stloyd proposed sounds like a good idea, but removing FieldType class, if #3903 will come into life might ensure that more forms will broke and people will check them thoroughly. --------------------------------------------------------------------------- by r1pp3rj4ck at 2012-04-13T18:46:08Z @bschussek looks great, but I'm concerned about how quickly will the third-party bundles adapt to this BC break. I hope really quick, because if they don't the whole stuff will be useless :S of course it's not your problem to solve. --------------------------------------------------------------------------- by stof at 2012-04-13T18:50:32Z @r1pp3rj4ck there is already another BC break requiring to update custom types for Symfony master. So third party bundles already have to do some work. --------------------------------------------------------------------------- by r1pp3rj4ck at 2012-04-13T18:59:37Z @stof which one? I've looked into @bschussek 's RFC about these [foo].bar stuff, but it's not yet implemented. Are you refering to this or another one I've missed? --------------------------------------------------------------------------- by stof at 2012-04-13T19:04:06Z @r1pp3rj4ck the change regarding default options --------------------------------------------------------------------------- by r1pp3rj4ck at 2012-04-13T19:06:10Z @stof oh, I forgot that one. Weird thing is that I've already changed my default options today and still forgetting these stuff :D --------------------------------------------------------------------------- by bschussek at 2012-04-14T08:58:29Z I restored and deprecated FieldType now. I'd appreciate further reviews. --------------------------------------------------------------------------- by stloyd at 2012-04-14T09:02:32Z Maybe we should try to avoid this BC in templates ? What do you think about similar move like with `FieldType` ? (hold old, but inside just render new) --------------------------------------------------------------------------- by bschussek at 2012-04-14T09:07:22Z @stloyd You mean for those cases where people explicitely render the block ""field_*""? We can do that. --------------------------------------------------------------------------- by stloyd at 2012-04-14T09:09:45Z @bschussek Yes I mean this case =) Sorry for not being explicit, I need some coffee I think =) --------------------------------------------------------------------------- by bschussek at 2012-04-17T14:45:35Z I added the field_* blocks again for BC. Could someone please review again? Otherwise this can be merged. --------------------------------------------------------------------------- by Burgov at 2012-04-17T15:11:16Z @bschussek I'm not sure what has changed to cause this, but if I try out your branch on our forms, if I leave the value of an input empty, eventually the reverseTransform method receives a null value, rather than a '' (empty string) value, as on the current symfony master. DateTimeToLocalizedStringTransformer, for example, will throw an Exception if the value is not a string ```php if (!is_string($value)) { throw new UnexpectedTypeException($value, 'string'); } ``` Other than that, all forms render just the same as they do on symfony master --------------------------------------------------------------------------- by bschussek at 2012-04-17T15:30:29Z @Burgov Fixed.",PHP
"merged branch bschussek/issue3878 (PR #3923) Commits ------- 6e4ed9e [Form] Fixed regression: bind(null) was not converted to an empty string anymore fcb2227 [Form] Deprecated FieldType, which has been merged into FormType bfa7ef2 [Form] Removed obsolete exceptions 2a49449 [Form] Simplified CSRF mechanism and removed ""csrf"" type Discussion ---------- [Form] Merged FieldType into FormType Bug fix: no Feature addition: no Backwards compatibility break: yes Symfony2 tests pass: yes Fixes the following tickets: #3878 Todo: update the documentation on theming ![Travis Build Status](https://secure.travis-ci.org/bschussek/symfony.png?branch=issue3878) This PR is a preparatory PR for #3879. See also #3878. --------------------------------------------------------------------------- by juliendidier at 2012-04-13T14:25:19Z What's the benefit ? --------------------------------------------------------------------------- by henrikbjorn at 2012-04-13T14:26:40Z why `input_widget` ? and not just `widget` --------------------------------------------------------------------------- by Burgov at 2012-04-13T14:27:49Z @juliendidier dynamic inheritance is now obsolete which fixes some other issues --------------------------------------------------------------------------- by stloyd at 2012-04-13T14:37:26Z What about __not__ breaking API so *badly* and leaving `FieldType` which will be simple like (with marking as deprecated): ```php <?php class FieldType extends AbstractType { public function getParent(array $options) { return 'form'; } public function getName() { return 'field'; } } --------------------------------------------------------------------------- by bschussek at 2012-04-13T14:43:41Z @stloyd That's a very good idea. --------------------------------------------------------------------------- by mvrhov at 2012-04-13T17:41:21Z IMHO what @stloyd proposed sounds like a good idea, but removing FieldType class, if #3903 will come into life might ensure that more forms will broke and people will check them thoroughly. --------------------------------------------------------------------------- by r1pp3rj4ck at 2012-04-13T18:46:08Z @bschussek looks great, but I'm concerned about how quickly will the third-party bundles adapt to this BC break. I hope really quick, because if they don't the whole stuff will be useless :S of course it's not your problem to solve. --------------------------------------------------------------------------- by stof at 2012-04-13T18:50:32Z @r1pp3rj4ck there is already another BC break requiring to update custom types for Symfony master. So third party bundles already have to do some work. --------------------------------------------------------------------------- by r1pp3rj4ck at 2012-04-13T18:59:37Z @stof which one? I've looked into @bschussek 's RFC about these [foo].bar stuff, but it's not yet implemented. Are you refering to this or another one I've missed? --------------------------------------------------------------------------- by stof at 2012-04-13T19:04:06Z @r1pp3rj4ck the change regarding default options --------------------------------------------------------------------------- by r1pp3rj4ck at 2012-04-13T19:06:10Z @stof oh, I forgot that one. Weird thing is that I've already changed my default options today and still forgetting these stuff :D --------------------------------------------------------------------------- by bschussek at 2012-04-14T08:58:29Z I restored and deprecated FieldType now. I'd appreciate further reviews. --------------------------------------------------------------------------- by stloyd at 2012-04-14T09:02:32Z Maybe we should try to avoid this BC in templates ? What do you think about similar move like with `FieldType` ? (hold old, but inside just render new) --------------------------------------------------------------------------- by bschussek at 2012-04-14T09:07:22Z @stloyd You mean for those cases where people explicitely render the block ""field_*""? We can do that. --------------------------------------------------------------------------- by stloyd at 2012-04-14T09:09:45Z @bschussek Yes I mean this case =) Sorry for not being explicit, I need some coffee I think =) --------------------------------------------------------------------------- by bschussek at 2012-04-17T14:45:35Z I added the field_* blocks again for BC. Could someone please review again? Otherwise this can be merged. --------------------------------------------------------------------------- by Burgov at 2012-04-17T15:11:16Z @bschussek I'm not sure what has changed to cause this, but if I try out your branch on our forms, if I leave the value of an input empty, eventually the reverseTransform method receives a null value, rather than a '' (empty string) value, as on the current symfony master. DateTimeToLocalizedStringTransformer, for example, will throw an Exception if the value is not a string ```php if (!is_string($value)) { throw new UnexpectedTypeException($value, 'string'); } ``` Other than that, all forms render just the same as they do on symfony master --------------------------------------------------------------------------- by bschussek at 2012-04-17T15:30:29Z @Burgov Fixed.",PHP
"merged branch bschussek/issue3878 (PR #3923) Commits ------- 6e4ed9e [Form] Fixed regression: bind(null) was not converted to an empty string anymore fcb2227 [Form] Deprecated FieldType, which has been merged into FormType bfa7ef2 [Form] Removed obsolete exceptions 2a49449 [Form] Simplified CSRF mechanism and removed ""csrf"" type Discussion ---------- [Form] Merged FieldType into FormType Bug fix: no Feature addition: no Backwards compatibility break: yes Symfony2 tests pass: yes Fixes the following tickets: #3878 Todo: update the documentation on theming ![Travis Build Status](https://secure.travis-ci.org/bschussek/symfony.png?branch=issue3878) This PR is a preparatory PR for #3879. See also #3878. --------------------------------------------------------------------------- by juliendidier at 2012-04-13T14:25:19Z What's the benefit ? --------------------------------------------------------------------------- by henrikbjorn at 2012-04-13T14:26:40Z why `input_widget` ? and not just `widget` --------------------------------------------------------------------------- by Burgov at 2012-04-13T14:27:49Z @juliendidier dynamic inheritance is now obsolete which fixes some other issues --------------------------------------------------------------------------- by stloyd at 2012-04-13T14:37:26Z What about __not__ breaking API so *badly* and leaving `FieldType` which will be simple like (with marking as deprecated): ```php <?php class FieldType extends AbstractType { public function getParent(array $options) { return 'form'; } public function getName() { return 'field'; } } --------------------------------------------------------------------------- by bschussek at 2012-04-13T14:43:41Z @stloyd That's a very good idea. --------------------------------------------------------------------------- by mvrhov at 2012-04-13T17:41:21Z IMHO what @stloyd proposed sounds like a good idea, but removing FieldType class, if #3903 will come into life might ensure that more forms will broke and people will check them thoroughly. --------------------------------------------------------------------------- by r1pp3rj4ck at 2012-04-13T18:46:08Z @bschussek looks great, but I'm concerned about how quickly will the third-party bundles adapt to this BC break. I hope really quick, because if they don't the whole stuff will be useless :S of course it's not your problem to solve. --------------------------------------------------------------------------- by stof at 2012-04-13T18:50:32Z @r1pp3rj4ck there is already another BC break requiring to update custom types for Symfony master. So third party bundles already have to do some work. --------------------------------------------------------------------------- by r1pp3rj4ck at 2012-04-13T18:59:37Z @stof which one? I've looked into @bschussek 's RFC about these [foo].bar stuff, but it's not yet implemented. Are you refering to this or another one I've missed? --------------------------------------------------------------------------- by stof at 2012-04-13T19:04:06Z @r1pp3rj4ck the change regarding default options --------------------------------------------------------------------------- by r1pp3rj4ck at 2012-04-13T19:06:10Z @stof oh, I forgot that one. Weird thing is that I've already changed my default options today and still forgetting these stuff :D --------------------------------------------------------------------------- by bschussek at 2012-04-14T08:58:29Z I restored and deprecated FieldType now. I'd appreciate further reviews. --------------------------------------------------------------------------- by stloyd at 2012-04-14T09:02:32Z Maybe we should try to avoid this BC in templates ? What do you think about similar move like with `FieldType` ? (hold old, but inside just render new) --------------------------------------------------------------------------- by bschussek at 2012-04-14T09:07:22Z @stloyd You mean for those cases where people explicitely render the block ""field_*""? We can do that. --------------------------------------------------------------------------- by stloyd at 2012-04-14T09:09:45Z @bschussek Yes I mean this case =) Sorry for not being explicit, I need some coffee I think =) --------------------------------------------------------------------------- by bschussek at 2012-04-17T14:45:35Z I added the field_* blocks again for BC. Could someone please review again? Otherwise this can be merged. --------------------------------------------------------------------------- by Burgov at 2012-04-17T15:11:16Z @bschussek I'm not sure what has changed to cause this, but if I try out your branch on our forms, if I leave the value of an input empty, eventually the reverseTransform method receives a null value, rather than a '' (empty string) value, as on the current symfony master. DateTimeToLocalizedStringTransformer, for example, will throw an Exception if the value is not a string ```php if (!is_string($value)) { throw new UnexpectedTypeException($value, 'string'); } ``` Other than that, all forms render just the same as they do on symfony master --------------------------------------------------------------------------- by bschussek at 2012-04-17T15:30:29Z @Burgov Fixed.",PHP
Initial scaffolding. Probably need to change name of strategy in Scout agent to FilteringStrategy. Need to unify nomenclature with FormattingStrategy. Maybe should change RetrievalTechnique to RetrievalStrategy...or Mechanism. Need to find way to make Mocha suck les balls. Yes. Les Balls was intentional.,JavaScript
La til konstanter slik at Fossum blir glad :),Java
"merged branch lencioni/fix-clean-output-buffering (PR #3667) Commits ------- 068e859 [TwigBundle] Changed getAndCleanOutputBuffering() handling of systems where ob_get_level() never returns 0 Discussion ---------- [TwigBundle] Changed getAndCleanOutputBuffering() handling of systems where ob_get_level() never returns 0 Bug fix: yes Feature addition: no Backwards compatibility break: no Symfony2 tests pass: [![Build Status](https://secure.travis-ci.org/lencioni/symfony.png)](http://travis-ci.org/lencioni/symfony) Fixes the following tickets: - Todo: - Relying on decrementing a counter has two problems. First, and most importantly, if the output buffering nesting level is greater than the counter, the function does not perform the expected task. Secondly, on systems where the counter is needed, a lot of unnecessary extra loops would potentially occur. This approach checks to see if the level has stayed the same from the previous iteration and if it has it stops looping. --------------------------------------------------------------------------- by fabpot at 2012-03-21T21:29:50Z Have you encounter this problem to confirm that your approach works? --------------------------------------------------------------------------- by vicb at 2012-03-21T21:35:39Z @lencioni could you also provide an answer from my question in the former version of this PR ? --------------------------------------------------------------------------- by lencioni at 2012-03-21T21:56:06Z @fabpot I have not encountered this problem personally, but the code I submitted is [similar to an approach I use in SLIR](https://github.com/lencioni/SLIR/blob/master/core/slir.class.php#L462), which has been successful for people who have encountered it. @vicb You are referring to [this question](https://github.com/symfony/symfony/pull/3666#issuecomment-4626105), right? >It was possible than the body of the while loop was never executed before, it is no more. Is this expected ? I think you may have misinterpreted the change I submitted. In the original code, there were two conditions being checked in the while loop. The first condition has not changed in my code and could still prevent the body of the while loop from being never executed. The second condition in the original code would always evaluate to 99 on the first iteration, which would not prevent the loop from running. --------------------------------------------------------------------------- by vicb at 2012-03-21T22:00:01Z oops my mistake, sorry.",PHP
deleted: README deleted: blog_data.db deleted: filebrowser/__init__.py deleted: filebrowser/actions.py deleted: filebrowser/base.py deleted: filebrowser/decorators.py deleted: filebrowser/fields.py deleted: filebrowser/forms.py deleted: filebrowser/functions.py deleted: filebrowser/locale/az/LC_MESSAGES/django.mo deleted: filebrowser/locale/az/LC_MESSAGES/django.po deleted: filebrowser/locale/de/LC_MESSAGES/django.mo deleted: filebrowser/locale/de/LC_MESSAGES/django.po deleted: filebrowser/locale/en/LC_MESSAGES/django.mo deleted: filebrowser/locale/en/LC_MESSAGES/django.po deleted: filebrowser/locale/es/LC_MESSAGES/django.mo deleted: filebrowser/locale/es/LC_MESSAGES/django.po deleted: filebrowser/locale/fr/LC_MESSAGES/django.mo deleted: filebrowser/locale/fr/LC_MESSAGES/django.po deleted: filebrowser/locale/ja/LC_MESSAGES/django.mo deleted: filebrowser/locale/ja/LC_MESSAGES/django.po deleted: filebrowser/locale/ja_JP/LC_MESSAGES/django.mo deleted: filebrowser/locale/ja_JP/LC_MESSAGES/django.po deleted: filebrowser/locale/mn/LC_MESSAGES/django.mo deleted: filebrowser/locale/mn/LC_MESSAGES/django.po deleted: filebrowser/locale/pl_PL/LC_MESSAGES/django.mo deleted: filebrowser/locale/pl_PL/LC_MESSAGES/django.po deleted: filebrowser/locale/pt_BR/LC_MESSAGES/django.mo deleted: filebrowser/locale/pt_BR/LC_MESSAGES/django.po deleted: filebrowser/locale/ru_RU/LC_MESSAGES/django.mo deleted: filebrowser/locale/ru_RU/LC_MESSAGES/django.po deleted: filebrowser/locale/sl_SI/LC_MESSAGES/django.mo deleted: filebrowser/locale/sl_SI/LC_MESSAGES/django.po deleted: filebrowser/locale/tr_TR/LC_MESSAGES/django.mo deleted: filebrowser/locale/tr_TR/LC_MESSAGES/django.po deleted: filebrowser/management/__init__.py deleted: filebrowser/management/commands/__init__.py deleted: filebrowser/management/commands/fb_version_generate.py deleted: filebrowser/management/commands/fb_version_remove.py deleted: filebrowser/models.py deleted: filebrowser/settings.py deleted: filebrowser/sites.py deleted: filebrowser/static/filebrowser/css/filebrowser.css deleted: filebrowser/static/filebrowser/img/cancel.png deleted: filebrowser/static/filebrowser/img/cancel_hover.png deleted: filebrowser/static/filebrowser/img/icon-pulldown-versions-active.png deleted: filebrowser/static/filebrowser/img/icon-pulldown-versions-hover.png deleted: filebrowser/static/filebrowser/img/icon-pulldown-versions.png deleted: filebrowser/static/filebrowser/img/testimage.jpg deleted: filebrowser/static/filebrowser/js/AddFileBrowser.js deleted: filebrowser/static/filebrowser/js/FB_CKEditor.js deleted: filebrowser/static/filebrowser/js/FB_FileBrowseField.js deleted: filebrowser/static/filebrowser/js/FB_TinyMCE.js deleted: filebrowser/static/filebrowser/js/TinyMCEAdmin.js deleted: filebrowser/static/filebrowser/js/fileuploader.js deleted: filebrowser/storage.py deleted: filebrowser/templates/filebrowser/createdir.html deleted: filebrowser/templates/filebrowser/custom_field.html deleted: filebrowser/templates/filebrowser/delete_confirm.html deleted: filebrowser/templates/filebrowser/detail.html deleted: filebrowser/templates/filebrowser/include/_response.html deleted: filebrowser/templates/filebrowser/include/breadcrumbs.html deleted: filebrowser/templates/filebrowser/include/filelisting.html deleted: filebrowser/templates/filebrowser/include/filter.html deleted: filebrowser/templates/filebrowser/include/paginator.html deleted: filebrowser/templates/filebrowser/include/tableheader.html deleted: filebrowser/templates/filebrowser/include/toolbar.html deleted: filebrowser/templates/filebrowser/index.html deleted: filebrowser/templates/filebrowser/rename.html deleted: filebrowser/templates/filebrowser/rename.html~ deleted: filebrowser/templates/filebrowser/upload.html deleted: filebrowser/templates/filebrowser/version.html deleted: filebrowser/templates/filebrowser/widgets/clearablefileinput.html deleted: filebrowser/templates/filebrowser/widgets/fileinput.html deleted: filebrowser/templatetags/__init__.py deleted: filebrowser/templatetags/fb_csrf.py deleted: filebrowser/templatetags/fb_pagination.py deleted: filebrowser/templatetags/fb_tags.py deleted: filebrowser/templatetags/fb_versions.py deleted: filebrowser/tests/__init__.py deleted: filebrowser/tests/base.py deleted: filebrowser/tests/forms.py deleted: filebrowser/tests/settings.py deleted: filebrowser/tests/sites.py deleted: filebrowser/tests/versions.py deleted: filebrowser/urls.py deleted: filebrowser/views.py deleted: filebrowser/widgets.py deleted: grappelli/__init__.py deleted: grappelli/dashboard/__init__.py deleted: grappelli/dashboard/dashboards.py deleted: grappelli/dashboard/management/__init__.py deleted: grappelli/dashboard/management/commands/__init__.py deleted: grappelli/dashboard/management/commands/customdashboard.py deleted: grappelli/dashboard/modules.py deleted: grappelli/dashboard/registry.py deleted: grappelli/dashboard/templates/admin/index.html deleted: grappelli/dashboard/templates/grappelli/dashboard/dashboard.html deleted: grappelli/dashboard/templates/grappelli/dashboard/dashboard.txt deleted: grappelli/dashboard/templates/grappelli/dashboard/dummy.html deleted: grappelli/dashboard/templates/grappelli/dashboard/module.html deleted: grappelli/dashboard/templates/grappelli/dashboard/modules/app_list.html deleted: grappelli/dashboard/templates/grappelli/dashboard/modules/feed.html deleted: grappelli/dashboard/templates/grappelli/dashboard/modules/group.html deleted: grappelli/dashboard/templates/grappelli/dashboard/modules/link_list.html deleted: grappelli/dashboard/templates/grappelli/dashboard/modules/model_list.html deleted: grappelli/dashboard/templates/grappelli/dashboard/modules/recent_actions.html deleted: grappelli/dashboard/templatetags/__init__.py deleted: grappelli/dashboard/templatetags/grp_dashboard_tags.py deleted: grappelli/dashboard/utils.py deleted: grappelli/models.py deleted: grappelli/settings.py deleted: grappelli/static/grappelli/css/admin-tools.css deleted: grappelli/static/grappelli/css/base.css deleted: grappelli/static/grappelli/css/buttons.css deleted: grappelli/static/grappelli/css/components.css deleted: grappelli/static/grappelli/css/datepicker/grappelli-theme-extensions.css deleted: grappelli/static/grappelli/css/forms.css deleted: grappelli/static/grappelli/css/grappelli-skin-basic.css deleted: grappelli/static/grappelli/css/grappelli-skin-default.css deleted: grappelli/static/grappelli/css/jquery-ui-grappelli-extensions.css deleted: grappelli/static/grappelli/css/reset.css deleted: grappelli/static/grappelli/css/structures.css deleted: grappelli/static/grappelli/css/tables.css deleted: grappelli/static/grappelli/css/tools.css deleted: grappelli/static/grappelli/css/typography.css deleted: grappelli/static/grappelli/img/admin/icon-no.gif deleted: grappelli/static/grappelli/img/admin/icon-unknown.gif deleted: grappelli/static/grappelli/img/admin/icon-yes.gif deleted: grappelli/static/grappelli/img/admin/icon_addlink.gif deleted: grappelli/static/grappelli/img/admin/selector-add.gif deleted: grappelli/static/grappelli/img/admin/selector-search.gif deleted: grappelli/static/grappelli/img/backgrounds/autocomplete.png deleted: grappelli/static/grappelli/img/backgrounds/changelist-results.png deleted: grappelli/static/grappelli/img/backgrounds/loading-small.gif deleted: grappelli/static/grappelli/img/backgrounds/tooltip-pointer.png deleted: grappelli/static/grappelli/img/backgrounds/ui-sortable-placeholder.png deleted: grappelli/static/grappelli/img/grappelli-icon.png deleted: grappelli/static/grappelli/img/icons/icon-actionlist_addlink-hover.png deleted: grappelli/static/grappelli/img/icons/icon-actionlist_addlink.png deleted: grappelli/static/grappelli/img/icons/icon-actionlist_changelink-hover.png deleted: grappelli/static/grappelli/img/icons/icon-actionlist_changelink.png deleted: grappelli/static/grappelli/img/icons/icon-actionlist_deletelink.png deleted: grappelli/static/grappelli/img/icons/icon-actions-add-link-hover.png deleted: grappelli/static/grappelli/img/icons/icon-actions-add-link.png deleted: grappelli/static/grappelli/img/icons/icon-actions-change-link-hover.png deleted: grappelli/static/grappelli/img/icons/icon-actions-change-link.png deleted: grappelli/static/grappelli/img/icons/icon-actions-delete-link.png deleted: grappelli/static/grappelli/img/icons/icon-actions_changelist.png deleted: grappelli/static/grappelli/img/icons/icon-add_another-hover.png deleted: grappelli/static/grappelli/img/icons/icon-add_another.png deleted: grappelli/static/grappelli/img/icons/icon-addlink-hover.png deleted: grappelli/static/grappelli/img/icons/icon-addlink.png deleted: grappelli/static/grappelli/img/icons/icon-admin_tools-dropdown-active-hover.png deleted: grappelli/static/grappelli/img/icons/icon-admin_tools-dropdown-active.png deleted: grappelli/static/grappelli/img/icons/icon-admin_tools-dropdown-hover.png deleted: grappelli/static/grappelli/img/icons/icon-admin_tools-dropdown.png deleted: grappelli/static/grappelli/img/icons/icon-autocomplete-fk-remove-hover.png deleted: grappelli/static/grappelli/img/icons/icon-autocomplete-fk-remove.png deleted: grappelli/static/grappelli/img/icons/icon-autocomplete-m2m-remove-hover.png deleted: grappelli/static/grappelli/img/icons/icon-autocomplete-m2m-remove.png deleted: grappelli/static/grappelli/img/icons/icon-bookmark_add-hover.png deleted: grappelli/static/grappelli/img/icons/icon-bookmark_add-inactive.png deleted: grappelli/static/grappelli/img/icons/icon-bookmark_add.png deleted: grappelli/static/grappelli/img/icons/icon-bookmark_manage-hover.png deleted: grappelli/static/grappelli/img/icons/icon-bookmark_manage.png deleted: grappelli/static/grappelli/img/icons/icon-bookmark_remove-hover.png deleted: grappelli/static/grappelli/img/icons/icon-bookmark_remove-inactive.png deleted: grappelli/static/grappelli/img/icons/icon-bookmark_remove.png deleted: grappelli/static/grappelli/img/icons/icon-calendar-hover.png deleted: grappe ...,JavaScript
"[fixed] gwt audio uses sound manager 2 now. works in all browsers. hurray. this is as good as it gets, you can't modify the properties of a Sound instance after a call to play. git-svn-id: https://libgdx.googlecode.com/svn/trunk@3638 6c4fd544-2939-11df-bb46-9574ba5d0bfa",C
"[fixed] gwt audio uses sound manager 2 now. works in all browsers. hurray. this is as good as it gets, you can't modify the properties of a Sound instance after a call to play. git-svn-id: https://libgdx.googlecode.com/svn/trunk@3638 6c4fd544-2939-11df-bb46-9574ba5d0bfa",C
yay i committed!,JavaScript
* Yay!,Java
Yay comments,PHP
Yes,PHP
SKIP_INSTALL=YES,Objective-C
- Update to 5.15-023 Feature safe: yes,C
Deleted Test and dependencies Jumping into real application. Excited,PHP
KTH server added (but commented out). I tested it and the app actually finds my server using the DHT. Hurray\!,C++
"zeo timeline works, yay",JavaScript
"First working version like nodejs, no memory leaks. Yay!",C
"correctly detect an error when trying to delete a plug-in that doesn't exist the `removeItemAtPath:` method returns YES when the path is nil, masking the failure",Objective-C
"Brand new constructor for Composition, which auto parses formulas, takes in series of keyword arguments, and multiple kinds of dicts. Yes, being in holy land has that effect on me.",Python
"[TwigBundle] Changed getAndCleanOutputBuffering() handling of systems where ob_get_level() never returns 0 Bug fix: yes Feature addition: no Backwards compatibility break: no Symfony2 tests pass: [![Build Status](https://secure.travis-ci.org/lencioni/symfony.png)](http://travis-ci.org/lencioni/symfony) Fixes the following tickets: - Todo: - Relying on decrementing a counter has two problems. First, and most importantly, if the output buffering nesting level is greater than the counter, the function does not perform the expected task. Secondly, on systems where the counter is needed, a lot of unnecessary extra loops would potentially occur. This approach checks to see if the level has stayed the same from the previous iteration and if it has it stops looping.",PHP
"merged branch drak/session_flashmessages (PR #3267) Commits ------- 5ae76f1 [HttpFoundation] Update documentation. 910b5c7 [HttpFoudation] CS, more tests and some optimization. b0466e8 [HttpFoundation] Refactored BC Session class methods. 84c2e3c [HttpFoundation] Allow flash messages to have multiple messages per type. Discussion ---------- [2.1][HttpFoundation] Multiple session flash messages Bug fix: no Feature addition: yes Backwards compatibility break: yes, but this already happened in #2583. BC `Session` methods remain unbroken. Symfony2 tests pass: yes Fixes the following tickets: #1863 References the following tickets: #2714, #2753, #2510, #2543, #2853 Todo: - This PR alters flash messages so that it is possible to store more than one message per flash type using the `add()` method or by passing an array of messages to `set()`. __NOTES ABOUT BC__ This PR maintains BC behaviour with the `Session` class in that the old Symfony 2.0 methods will continue to work as before. --------------------------------------------------------------------------- by drak at 2012-02-13T06:28:33Z I think this is ready for review @fabpot @lsmith77 --------------------------------------------------------------------------- by lsmith77 at 2012-02-14T19:30:39Z the FlashBag vs. AutoExpireFlashBag behavior and setup difference should probably also be explained in the upgrading log --------------------------------------------------------------------------- by drak at 2012-02-15T04:43:14Z @lsmith77 Those differences are explained already in the changelog * Added `FlashBag`. Flashes expire when retrieved by `get()` or `all()`. This makes the implementation ESI compatible. * Added `AutoExpireFlashBag` (default) to replicate Symfony 2.0.x auto expire behaviour of messages auto expiring after one page page load. Messages must be retrived by `get()` or `all()`. --------------------------------------------------------------------------- by Crell at 2012-02-19T17:35:34Z Drak asked me to weigh in here with use cases. Drupal currently has a similar session-stored-messaging system in place that I'd like to be able to replace with Flash messages. We frequently have multiple messages within a single request, however, so this change is critical to our being able to do so. For instance, when saving an article in Drupal there is, by default, a ""yay, you saved an article!"" type message that gets displayed. If you also have the site configured to send email when a post is updated, you may see a ""email notifications sent"" message (depending on your access level). If you have a Solr server setup for search, and you're in debug mode, there will also be a ""record ID X added to Solr, it should update in 2 minutes"" message. And if there's a bug somewhere, you'll also get, as an error message rather than notice message, a ""Oops, E_NOTICE on line 54"" message. Form validation is another case. If you have multiple errors in a single form, we prefer to list all of them. So if you screw up 4 times on a form, you may get 4 different error messages showing what you screwed up so you can fix it in one go instead of several. Now sure, one could emulate that by building a multi-message layer on top of single-layer messages, but, really, why? ""One is a special case of many"", and there are many many cases where you'll want to post multiple messages. Like, most of Drupal. :-) --------------------------------------------------------------------------- by lsmith77 at 2012-03-06T20:55:51Z @fabpot is there any information you still need before merging this? do you want more discussion in which case you might want to take this to the mailing list .. --------------------------------------------------------------------------- by drak at 2012-03-08T18:54:13Z Another plus for this PR is that it requires no extra lines of code in templates etc to display the flashes, see https://github.com/symfony/symfony/pull/3267/files#diff-1 --------------------------------------------------------------------------- by drak at 2012-03-15T06:38:21Z Rebased against current `master`, should be mergeable again.. --------------------------------------------------------------------------- by evillemez at 2012-03-17T03:08:41Z +1 to this, I have an extended version of HttpFoundation just for this... would love to get rid of it.",PHP
"Removed CANCEL processing from default UA Now UA implementation is responsible for properly responding to the CANCEL request. The UA behavior should be the following * check if there is pending request * if no, return 481 to the CANCEL * if yes and request is not answered already, return 487 to request and 200 to CANCEL * otherwise, return 200 to CANCEL",Erlang
Yay! Pedigree printing is starting to work!,Java
Recursive vs. Nonrecursive fibonacci number generator. ...yay...,C++
"sched: automated per-uid task group Android is a privilege-separated operating system, in which each application runs with a distinct system identity: the Linux user ID (uid). Automatically create CFS task groups per UID. Each Android application runs with its own distinct UID, so grouping tasks by UID and put them in the same task group allows to get a fair share of CPU time per application. Testcase: - run 4 cpu hog in background as user app_35 (com.android.email in my case) - run the Quadrant benchmark (http://www.aurorasoftworks.com/products/quadrant) as a different user and measure the result with and without the patch # su - app_35 $ for i in `seq 4`; do yes >/dev/null & done Without the patch (output of top): PID PPID USER STAT VSZ %MEM CPU %CPU COMMAND 6533 123 10070 R 202m 48.6 0 20.0 com.aurorasoftworks.quadrant.ui.st 6506 1 10035 R 1128 0.2 0 20.0 yes 6507 1 10035 R 1128 0.2 0 20.0 yes 6508 1 10035 R 1128 0.2 0 20.0 yes 6509 1 10035 R 1128 0.2 0 20.0 yes Benchmark result: 676 uid 10035 (cpu hog) : 60.0 % cpu quota uid 10070 (benchmark): 20.0 % cpu quota With automated per-uid task group (output of top): PID PPID USER STAT VSZ %MEM CPU %CPU COMMAND 6784 123 10070 S 209m 51.4 0 50.0 com.aurorasoftworks.quadrant.ui.st 6852 1 10035 R 1128 0.2 0 12.5 yes 6853 1 10035 R 1128 0.2 0 12.5 yes 6854 1 10035 R 1128 0.2 0 12.5 yes 6855 1 10035 R 1128 0.2 0 12.5 yes Benchmark result: 816 uid 10035 (cpu hog) : 45.9 % cpu quota uid 10070 (benchmark): 46.0 % cpu quota Total speedup: ~1.2 (the benchmark is about 20% faster in this case) Based on the patch ""sched: automated per tty task groups"" by Mike Galbraith. Signed-off-by: Andrea Righi <arighi@develer.com> Signed-off-by: Mike Galbraith <efault@gmx.de>",C
"MISC - instead of the tick, display ""Yes"", ""No"", Empty cell for null values",JavaScript
I'm a moron. Really glad I have the test server.,JavaScript
"merged branch pulzarraider/redis_session_storage (PR #3498) Commits ------- c4ee947 Native Redis Session Storage update 665f593 NativeRedisSessionStorage added Discussion ---------- [HttpFoundation] Native Redis Session Storage Bug fix: no Feature addition: yes Backwards compatibility break: no Symfony2 tests pass: yes Fixes the following tickets: - Todo: - --------------------------------------------------------------------------- by lstrojny at 2012-03-04T23:15:43Z Does Symfony (or any of its dependencies) has Redis support in any form whatsoever? If not this might be a good point to decide which clients to support --------------------------------------------------------------------------- by lsmith77 at 2012-03-04T23:36:11Z well ideally we just get this cache interface stuff done .. for this use case it would be perfect. --------------------------------------------------------------------------- by pulzarraider at 2012-03-05T00:35:59Z There is RedisProfilerStorage available (based on phpredis). I prefer and write code for [phpredis](https://github.com/nicolasff/phpredis). It's recommended by [official Redis homepage](http://redis.io/clients#PHP). [In this benchmark](http://dev.af83.com/2011/01/01/which-php-library-to-use-with-redis-the-benchmark.html ) is fastest and less memory consumpting. But if somebody prefer predis (with phpiredis), rediska or something other widely used, there are no limitations to add support of it to Symfony. My opinion is, that the C extension should be supported at first, because of good performance and native session storage support. Redis is quite young and the process of creating PHP clients is comparable to Memcache. There were created pure PHP Memcache clients in the past (Google found for example [this](http://www.phpclasses.org/browse/file/20284.html) and [this](http://code.blitzaffe.com/pages/phpclasses/files/memcached_client_52-12)), but they are not being used now. Everyone, who is seriously thinking about performance, is using only the C Redis/Memcache(d)/... extensions. --------------------------------------------------------------------------- by drak at 2012-03-05T07:40:06Z +1 on this PR. Needs a test written though. I don't think there is any need to wait for #3493 imo. I'll deal with it if this is merged before #3493. Are there any PHP ini settings for this for this driver or is everything via the `session.save_path` directive? (A quick look at the C code seems to indicate there are no explicit ini directives). --------------------------------------------------------------------------- by lstrojny at 2012-03-05T12:14:34Z @pulzarraider I don’t necessarily disagree with the usage of phpredis, I just wanted to bring up the issues of various clients and people having different preferences about them. --------------------------------------------------------------------------- by fabpot at 2012-03-05T14:46:22Z @pulzarraider Can you add some unit tests before I merge? --------------------------------------------------------------------------- by pulzarraider at 2012-03-11T20:19:57Z @drak No there are no php.ini settings. Only RedisArray has some, but it's another feature. @fabpot I've added simple test based on other session storage tests. I planned to create a RedisSessionStorage, too, but I have no time for it now. This can be added later in another PR as it's independent from NativeRedisSessionStorage. --------------------------------------------------------------------------- by drak at 2012-03-12T02:21:25Z The code looks OK to me. --------------------------------------------------------------------------- by fabpot at 2012-03-15T06:05:27Z #3493 has been merged now. --------------------------------------------------------------------------- by pulzarraider at 2012-03-16T23:21:27Z Code updated.",PHP
Got new nodes being put in the json; the test-break-output is actually informative now; yay,Python
"yay, security",Ruby
Use YUI3 App Framework on home page - Home page now uses YUI3's App Framework - yay :) - Added handlebars lib - Todo: have a look at markup.js,JavaScript
