package com.github.sentimentalanalysis;

import java.io.IOException;
import java.util.HashMap;

import org.apache.hadoop.io.IntWritable;
import org.apache.hadoop.io.LongWritable;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.mapreduce.Mapper;

public class GithubSentimentalAnlysisMapper extends Mapper<LongWritable, Text, Text, CompositeKeyWritable> {
	public static String angerWordsRegex;
	public static HashMap emotionRegexMap=new HashMap();
	public IntWritable one=new IntWritable(1);
	public static final String[] listOfEmotions={"Anger","Joy","Amusement","Surpise","Swearing","Issue/Bugs"};

	protected void setup(Context context) throws IOException, InterruptedException {
	//anger	
		angerWordsRegex = "(?i).*\\b(a+rgh|angry|annoyed|annoying|appalled|bitter|cranky|hate|hating|mad)\\b.*";
		emotionRegexMap.put(listOfEmotions[0], angerWordsRegex);
		//joy
		angerWordsRegex = "(?i).*\\b(a+rgh|angry|annoyed|annoying|appalled|bitter|cranky|hate|hating|mad)\\b.*";
		emotionRegexMap.put(listOfEmotions[0], angerWordsRegex);
		
		//amusement
		angerWordsRegex = "(?i).*\\b(a+rgh|angry|annoyed|annoying|appalled|bitter|cranky|hate|hating|mad)\\b.*";
		emotionRegexMap.put(listOfEmotions[0], angerWordsRegex);
		
		//surprise
		angerWordsRegex = "(?i).*\\b(a+rgh|angry|annoyed|annoying|appalled|bitter|cranky|hate|hating|mad)\\b.*";
		emotionRegexMap.put(listOfEmotions[0], angerWordsRegex);
		
		//swearing
		angerWordsRegex = "(?i).*\\b(a+rgh|angry|annoyed|annoying|appalled|bitter|cranky|hate|hating|mad)\\b.*";
		emotionRegexMap.put(listOfEmotions[0], angerWordsRegex);
		
		//issue-bugs
		angerWordsRegex = "(?i).*\\b(a+rgh|angry|annoyed|annoying|appalled|bitter|cranky|hate|hating|mad)\\b.*";
		emotionRegexMap.put(listOfEmotions[0], angerWordsRegex);
		

	}

	public void map(LongWritable key, Text value, Context context) throws IOException, InterruptedException {
		if (key.get() > 0) {
			//String tokens[]=value.toString().substring(0, value.toString().lastIndexOf(','));
			String commitMessage=value.toString().substring(0, value.toString().lastIndexOf(','));
			String language =value.toString().substring(value.toString().lastIndexOf(',')+1);
			if(commitMessage.matches(angerWordsRegex)){
				context.write(new Text(listOfEmotions[0]), new CompositeKeyWritable(language,1));
			}
			
			

		}
	}
}